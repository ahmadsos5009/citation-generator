{"version":3,"file":"component---src-components-pages-generator-tsx-2eec403fa039bc9b0910.js","mappings":"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","sources":["webpack://citation-generator/./src/components/AdsSidebar.tsx","webpack://citation-generator/./src/components/form/QuickActionsSection.tsx","webpack://citation-generator/./src/components/pages/Generator.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport { Helmet } from \"react-helmet\"\n\n// TODO:: pass dataAdSlot\nconst AdsSidebar: React.FC = () => {\n  useEffect(() => {\n    try {\n      if (typeof window === \"object\") {\n        ((window as any).adsbygoogle = (window as any).adsbygoogle || []).push({})\n      }\n    } catch {\n      // Pass\n    }\n  }, [])\n\n  return (\n    <>\n      <Helmet>\n        <script\n          async\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8835129466793937\"\n          crossOrigin=\"anonymous\"\n        />\n      </Helmet>\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: \"block\" }}\n        data-ad-client=\"ca-pub-8835129466793937\"\n        data-ad-slot=\"1729214133\"\n        data-ad-format=\"auto\"\n        data-full-width-responsive=\"true\"\n      />\n    </>\n  )\n}\n\nexport default AdsSidebar\n","import React, { useCallback, useContext, useState } from \"react\"\nimport { Button, Grid, Snackbar, Stack } from \"@mui/material\"\nimport { GeneratorContext } from \"../../provider/GeneratorProvider\"\nimport { navigate } from \"gatsby\"\nimport { isEmptyCitation } from \"../utilities/object\"\nimport { CitationJSDocumentType } from \"../../types\"\nimport AdsSidebar from \"../AdsSidebar\"\n\nconst QuickActionsSection: React.FC<{ pageTitle: string }> = ({ pageTitle }) => {\n  const { citation, style, documentType } = useContext(GeneratorContext)\n\n  const [isEmpty, setIsEmpty] = useState(false)\n\n  const onGenerateReferencesClick = useCallback(() => {\n    if (isEmptyCitation(citation, CitationJSDocumentType[documentType])) {\n      setIsEmpty(true)\n      return\n    }\n\n    return navigate(\"/citationsList\", {\n      state: {\n        citations: [citation],\n        style,\n        citationDocument: documentType,\n      },\n    })\n  }, [citation, style, documentType])\n\n  return (\n    <>\n      <Grid item container md={4}>\n        <Stack>\n          <Button onClick={onGenerateReferencesClick} variant=\"text\">\n            {pageTitle} Reference Generator\n          </Button>\n        </Stack>\n      </Grid>\n\n      <Grid item md={8}>\n        <AdsSidebar />\n      </Grid>\n\n      <Snackbar\n        open={isEmpty}\n        autoHideDuration={6000}\n        onClose={() => setIsEmpty(false)}\n        message=\"Empty Citation! please fill in fields or import citations from an external source\"\n      />\n    </>\n  )\n}\n\nexport default QuickActionsSection\n","import * as React from \"react\"\nimport { useMemo } from \"react\"\n\nimport Layout from \"./Layout\"\nimport Seo from \"../Seo\"\n\nimport { CitationStyle } from \"../../types\"\n\nimport { Container, Grid, Paper, Stack, Typography } from \"@mui/material\"\nimport { PrimaryStart } from \"../Typography\"\n\nimport { GeneratorProvider } from \"../../provider/GeneratorProvider\"\nimport CitationForm from \"../CitationForm\"\nimport QuickActionsSection from \"../form/QuickActionsSection\"\n\ninterface PageProps {\n  pageContext: {\n    id: string\n    title: string\n    metaTitle: string\n    style: CitationStyle\n    xml: string\n  }\n}\n\nconst Generator: React.FC<PageProps> = ({ pageContext }) => {\n  const { title, metaTitle, style, xml } = pageContext\n\n  const pageTitle = useMemo(() => {\n    if (style.includes(\"_\")) {\n      const [_style, edition] = style.split(\"_\")\n      return `${_style.toUpperCase()} (${edition} ed.)`\n    } else return style.toUpperCase()\n  }, [style])\n\n  return (\n    <Layout>\n      <Seo\n        title={metaTitle}\n        description={`${pageTitle} citation & in text citation generator, and bibliography/reference list generator.`}\n      />\n      <GeneratorProvider xml={xml} style={style}>\n        <Container\n          disableGutters\n          maxWidth={false}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            bgcolor: \"primary.main\",\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            py={2}\n            item\n            xs={10}\n          >\n            <Paper\n              elevation={8}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                width: { xs: \"98%\", md: \"100%\" },\n              }}\n            >\n              <Grid display={{ xs: \"none\", md: \"unset\" }} item md={2}>\n                {/* TODO:: Add External and Internal links */}\n              </Grid>\n\n              <Grid item xs={12} md={8}>\n                <Stack\n                  px={{ xs: 1, md: 0 }}\n                  rowGap={2}\n                  textAlign={{ xs: \"center\", md: \"start\" }}\n                >\n                  <Stack py={2}>\n                    <PrimaryStart>{`${pageTitle} Citation Generator`}</PrimaryStart>\n                    <Typography\n                      align=\"left\"\n                      variant=\"caption\"\n                    >{`${title} Citation generator`}</Typography>\n                  </Stack>\n                </Stack>\n\n                <CitationForm />\n              </Grid>\n\n              <Grid\n                display={{ xs: \"none\", md: \"flex\" }}\n                md={2}\n                item\n                p={2}\n                container\n                direction=\"column\"\n              >\n                <QuickActionsSection pageTitle={pageTitle} />\n              </Grid>\n            </Paper>\n          </Grid>\n        </Container>\n      </GeneratorProvider>\n    </Layout>\n  )\n}\n\nexport default Generator\n"],"names":["useEffect","window","adsbygoogle","push","React","Helmet","async","src","crossOrigin","className","style","display","_ref","pageTitle","citation","documentType","useContext","GeneratorContext","isEmpty","setIsEmpty","useState","onGenerateReferencesClick","useCallback","isEmptyCitation","CitationJSDocumentType","navigate","state","citations","citationDocument","Grid","item","container","md","Stack","Button","onClick","variant","AdsSidebar","Snackbar","open","autoHideDuration","onClose","message","pageContext","title","metaTitle","xml","useMemo","includes","_style","edition","split","toUpperCase","Layout","Seo","description","GeneratorProvider","Container","disableGutters","maxWidth","sx","justifyContent","bgcolor","direction","alignItems","py","xs","Paper","elevation","width","px","rowGap","textAlign","PrimaryStart","Typography","align","CitationForm","p","QuickActionsSection"],"sourceRoot":""}