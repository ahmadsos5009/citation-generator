{"version":3,"file":"component---src-pages-index-tsx-aa59da234cf203bb7dd8.js","mappings":"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","sources":["webpack://citation-generator/./node_modules/@mui/material/Card/cardClasses.js","webpack://citation-generator/./node_modules/@mui/material/Card/Card.js","webpack://citation-generator/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://citation-generator/./node_modules/@mui/material/CardContent/CardContent.js","webpack://citation-generator/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://citation-generator/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://citation-generator/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://citation-generator/./node_modules/@mui/material/CardActions/CardActions.js","webpack://citation-generator/./src/pages/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import * as React from \"react\"\n\nimport Layout from \"../components/pages/Layout\"\nimport Seo from \"../components/Seo\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n} from \"@mui/material\"\nimport { PrimaryStart, PrimaryText, Secondary } from \"../components/Typography\"\nimport { ReferencesList, ReferenceManagement } from \"../placeholders\"\nimport styled from \"@emotion/styled\"\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <Seo\n        title=\"Citation Creator / Generator\"\n        description=\"Create citation online rapidly free for a wide range of CSL styles\"\n      />\n\n      <Grid container height=\"100%\">\n        <Grid bgcolor=\"primary.main\" container p={2} item>\n          <Grid p={6} md={4} xs={12} item>\n            <PrimaryStart>\n              Create citation online rapidly free for a wide range of CSL styles\n            </PrimaryStart>\n            {/* TODO:: replace this with a new message  */}\n            <PrimaryText>\n              <List disablePadding>\n                <Item>\n                  <ListItemText\n                    primary=\"Create Citation Manually\"\n                    secondary=\"Create your citation manually rapidly for journals, books, websites, report\"\n                  />\n                </Item>\n                <Item>\n                  <ListItemText\n                    primary=\"Import Citations\"\n                    secondary=\"Import citations from Title, URL, DOI, ISBN, BibTeX\"\n                  />\n                </Item>\n                <Item>\n                  <ListItemText\n                    primary=\"Export Citations\"\n                    secondary=\"Export your citations or references list to a PDF, Word, BibTex Document\"\n                  />\n                </Item>\n                <Item>\n                  <ListItemText\n                    primary=\"Store Citations\"\n                    secondary=\"Store citation in your browser to create your own references list\"\n                  />\n                </Item>\n              </List>\n            </PrimaryText>\n          </Grid>\n\n          <Grid\n            container\n            md={8}\n            xs={12}\n            item\n            justifyContent=\"center\"\n            p={4}\n            height={{ md: \"80%\" }}\n          >\n            <Grid item display={{ md: \"flex\" }} md={6} p={2}>\n              <Card\n                sx={{\n                  maxWidth: { md: 350, xs: 150 },\n                  bgcolor: \"primary.50\",\n                  borderRadius: \"50px 50px 0 0\",\n                }}\n              >\n                <CardMedia>\n                  <ReferencesList />\n                </CardMedia>\n                <CardContent>\n                  <Secondary>Bibliographies / References List</Secondary>\n                  <Typography pt={2} pb={8} variant=\"body2\" color=\"text.secondary\">\n                    Create Bibliographies list from your citations or imported\n                    citations, also there an editor to help with editing list before\n                    exporting them\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button variant=\"outlined\" size=\"small\" href=\"/citationsList/\">\n                    List Generator\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            <Grid item display={{ md: \"flex\" }} md={6} p={2}>\n              <Card\n                sx={{\n                  maxWidth: { md: 350, xs: 150 },\n                  bgcolor: \"primary.50\",\n                  borderRadius: \"50px 50px 0 0\",\n                }}\n              >\n                <CardMedia>\n                  <ReferenceManagement />\n                </CardMedia>\n                <CardContent>\n                  <Secondary>Reference Management</Secondary>\n                  <Typography pt={2} variant=\"body2\" color=\"text.secondary\">\n                    Manage your references by organizing them in collections and\n                    tags. The goal of reference management is to make it easier for\n                    researchers to manage the information they use in their work and\n                    to generate accurate and consistent citations and bibliographies.\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button variant=\"outlined\" size=\"small\" href=\"/referencesManager/\">\n                    Manage References\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* TODO:: show this when implement annotated bibliography */}\n        {/*<Grid bgcolor=\"primary.light\" container xs={12} item>*/}\n        {/*  <Grid md={7} p={6} item>*/}\n        {/*    <PrimaryText pb={1} sx={{ color: \"#8A8783 !important\" }}>*/}\n        {/*      Text editor for Bibliographies list, Text editor for Bibliographies*/}\n        {/*      list*/}\n        {/*    </PrimaryText>*/}\n        {/*    <Button variant=\"outlined\">Action</Button>*/}\n        {/*  </Grid>*/}\n        {/*  <Grid md={5} item container alignItems=\"center\" justifyContent=\"center\">*/}\n        {/*    <CardMedia sx={{ maxWidth: { md: 400, xs: 200 } }}>*/}\n        {/*      <AnnotatedBibliography />*/}\n        {/*    </CardMedia>*/}\n        {/*  </Grid>*/}\n        {/*</Grid>*/}\n      </Grid>\n    </Layout>\n  )\n}\n\nconst Item = styled(ListItem)`\n  padding-right: 0;\n  padding-left: 0;\n`\n\nexport default IndexPage\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","children","image","src","style","indexOf","composedStyle","backgroundImage","slots","role","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","alignItems","marginLeft","Item","ListItem","React","Layout","Seo","title","description","Grid","container","height","bgcolor","p","item","md","xs","PrimaryStart","PrimaryText","List","disablePadding","ListItemText","primary","secondary","justifyContent","Card","sx","maxWidth","borderRadius","CardMedia","ReferencesList","CardContent","Secondary","Typography","pt","pb","variant","color","CardActions","Button","size","href","ReferenceManagement"],"sourceRoot":""}