{"version":3,"file":"85063245fe3a353a0e3311dea0af0cacbe81f981-9d2a06dee123a6e5a60c.js","mappings":"mQAOA,SAASA,EAAgBC,GACvB,YAAmC,IAArBA,EAAOC,UAA4BD,EAAOC,UAAU,OAAOC,QAAQ,mBAAoB,IAAMF,CAC7G,CACO,SAASG,EAAoBC,EAAS,CAAC,GAC5C,MAAM,cACJC,GAAgB,EAAI,WACpBC,GAAa,EAAI,MACjBC,EAAK,UACLC,EAAY,MAAK,UACjBC,EAAS,KACTC,GAAO,GACLN,EACJ,MAAO,CAACO,GACNC,aACAC,qBAEA,IAAIC,EAAQJ,EAAOE,EAAWF,OAASE,EACnCN,IACFQ,EAAQA,EAAMC,eAEZV,IACFS,EAAQf,EAAgBe,IAE1B,MAAME,EAAmBF,EAAkBH,EAAQM,QAAOC,IACxD,IAAIC,GAAaV,GAAaI,GAAgBK,GAO9C,OANIZ,IACFa,EAAYA,EAAUJ,eAEpBV,IACFc,EAAYpB,EAAgBoB,IAET,UAAdX,EAAqD,IAA7BW,EAAUC,QAAQN,GAAeK,EAAUC,QAAQN,IAAU,CAAC,IAR9DH,EAUjC,MAAwB,iBAAVJ,EAAqBS,EAAgBK,MAAM,EAAGd,GAASS,CAAe,CAExF,CAGA,SAASM,EAAUC,EAAOC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,GAAK,EACrC,GAAID,EAAKD,EAAME,IACb,OAAOA,EAGX,OAAQ,CACV,CACA,MAAME,EAAuBxB,IAGvByB,EAAW,EACXC,EAAkCC,IACtC,IAAIC,EACJ,OAA8B,OAAvBD,EAAWE,UAAmF,OAA7DD,EAAwBD,EAAWE,QAAQC,oBAAyB,EAASF,EAAsBG,SAASC,SAASC,eAAe,EAE/J,SAASC,EAAgBC,GACtC,MAAM,kCAEJC,EAAoCV,EAA+B,yBAEnEW,EAA2B,MAAK,aAChCC,GAAe,EAAK,cACpBC,GAAgB,EAAK,WACrBC,GAAa,EAAK,aAClBC,GAAe,EAAK,YACpBC,GAAeP,EAAMQ,SAAQ,cAC7BC,GAAgB,EAAK,cACrBC,EAAgB,kBAAiB,aACjCC,GAAeX,EAAMY,SAAW,GAAK,MAAI,iBACzCC,GAAmB,EAAK,qBACxBC,GAAuB,EACvBC,SAAUC,EAAY,uBACtBC,GAAyB,EAAK,gBAC9BC,GAAkB,EAAK,cACvBC,EAAgB9B,EAAoB,sBACpC+B,GAAwB,EAAK,SAC7BZ,GAAW,EAAK,kBAChBa,EACA9C,eAAgB+C,EAAqB1C,KACnC,IAAI2C,EACJ,OAAyC,OAAjCA,EAAgB3C,EAAO4C,OAAiBD,EAAgB3C,CAAM,GACvE,QACD6C,EAAO,kBACPC,GAAqB1B,EAAMQ,SAC3BmB,GAAIC,EAAM,mBACVC,GAAqB,EACrBvD,WAAYwD,EAAc,qBAC1BC,EAAuB,EAACnD,EAAQoD,IAAUpD,IAAWoD,GAAK,SAC1DpB,GAAW,EAAK,SAChBqB,EAAQ,QACRC,EAAO,kBACPC,EAAiB,cACjBC,EAAa,OACbC,EACAC,KAAMC,EAAQ,YACdC,GAAc,EAAK,QACnBnE,EAAO,SACPoE,GAAW,EAAK,cAChBC,GAAiB1C,EAAMQ,SACvBwB,MAAOW,GACL3C,EACE2B,GAAK,OAAMC,GACjB,IAAIrD,EAAiB+C,EACrB/C,EAAiBK,IACf,MAAMgE,EAActB,EAAmB1C,GACvC,MAA2B,iBAAhBgE,EAKFC,OAAOD,GAETA,CAAW,EAEpB,MAAME,EAAc,UAAa,GAC3BC,EAAa,UAAa,GAC1BC,GAAW,SAAa,MACxBxD,GAAa,SAAa,OACzByD,GAAUC,IAAe,WAAe,OACxCC,GAAYC,IAAiB,YAAgB,GAC9CC,GAAqBjD,EAAgB,GAAK,EAC1CkD,GAAsB,SAAaD,KAClCrB,GAAOuB,KAAiB,OAAc,CAC3CC,WAAYb,EACZc,QAAS9C,EACT+C,KAAMhD,KAEDpC,GAAYqF,KAAsB,OAAc,CACrDH,WAAY1B,EACZ2B,QAAS,GACTC,KAAMhD,EACNkD,MAAO,gBAEFC,GAASC,IAAc,YAAe,GACvCC,GAAkB,eAAkB,CAACC,EAAOC,KAIhD,KADyBrD,EAAWoB,GAAM5C,OAAS6E,EAAS7E,OAAsB,OAAb6E,KAC3C1D,EACxB,OAEF,IAAI2D,EACJ,GAAItD,EACFsD,EAAgB,QACX,GAAgB,MAAZD,EACTC,EAAgB,OACX,CACL,MAAMtB,EAAcrE,EAAe0F,GACnCC,EAAuC,iBAAhBtB,EAA2BA,EAAc,EAClE,CACItE,KAAe4F,IAGnBP,GAAmBO,GACf9B,GACFA,EAAc4B,EAAOE,EAAe,SACtC,GACC,CAAC3F,EAAgBD,GAAYsC,EAAUwB,EAAeuB,GAAoBpD,EAAayB,MACnFM,GAAM6B,KAAgB,OAAc,CACzCX,WAAYjB,EACZkB,SAAS,EACTC,KAAMhD,EACNkD,MAAO,UAEFQ,GAAeC,IAAoB,YAAe,GACnDC,IAA6B1D,GAAqB,MAAToB,IAAiB1D,KAAeC,EAAeyD,IACxFuC,GAAYjC,KAASG,EACrB/D,GAAkB6F,GAAYpD,EAAc9C,EAAQM,QAAOC,IAC3DwC,KAA0BR,EAAWoB,GAAQ,CAACA,KAAQwC,MAAKC,GAAqB,OAAXA,GAAmB1C,EAAqBnD,EAAQ6F,OAO3H,CACEnG,WAAYgG,IAA6BF,GAAgB,GAAK9F,GAC9DC,mBACG,GACCmG,IAAgB,OAAiB,CACrChG,mBACAsD,WAEF,aAAgB,KACd,MAAM2C,EAAc3C,KAAU0C,GAAc1C,MACxC6B,KAAYc,GAKZnE,IAAamE,GAGjBZ,GAAgB,KAAM/B,GAAM,GAC3B,CAACA,GAAO+B,GAAiBF,GAASa,GAAc1C,MAAOxB,IAC1D,MAAMoE,GAAmBtC,IAAQ5D,GAAgBU,OAAS,IAAMqD,EAShE,MAAMoC,IAAW,QAAiBC,KACZ,IAAhBA,EACF9B,GAAStD,QAAQqF,QAEjB9B,GAAS+B,cAAc,oBAAoBF,OAAgBC,OAC7D,IAIF,aAAgB,KACVnE,GAAYuC,GAAanB,GAAM5C,OAAS,IAC1CgE,IAAe,GACfyB,IAAU,GACZ,GACC,CAAC7C,GAAOpB,EAAUuC,GAAY0B,KAuBjC,MAAMI,IAAsB,QAAiB,EAC3CjB,QACAkB,QACAC,SAAS,WAaT,GAXA7B,GAAoB5D,QAAUwF,GAGf,IAAXA,EACFlC,GAAStD,QAAQ0F,gBAAgB,yBAEjCpC,GAAStD,QAAQ2F,aAAa,wBAAyB,GAAG1D,YAAauD,KAErE/C,GACFA,EAAkB6B,GAAkB,IAAXkB,EAAe,KAAOxG,GAAgBwG,GAAQC,IAEpE3F,GAAWE,QACd,OAEF,MAAM4F,EAAO9F,GAAWE,QAAQsF,cAAc,mBAAmB9E,aAC7DoF,IACFA,EAAKC,UAAUC,OAAO,GAAGtF,aACzBoF,EAAKC,UAAUC,OAAO,GAAGtF,mBAE3B,MAAMuF,EAAcjG,GAAWE,QAAQC,cAAcqF,cAAc,oBAGnE,IAAKS,EACH,OAEF,IAAe,IAAXP,EAEF,YADAO,EAAYC,UAAY,GAG1B,MAAM9G,EAASY,GAAWE,QAAQsF,cAAc,uBAAuBE,OACvE,GAAKtG,IAGLA,EAAO2G,UAAUI,IAAI,GAAGzF,aACT,aAAXiF,GACFvG,EAAO2G,UAAUI,IAAI,GAAGzF,kBAQtBuF,EAAYG,aAAeH,EAAYI,cAA2B,UAAXV,GAAoB,CAC7E,MAAMW,EAAUlH,EACVmH,EAAeN,EAAYI,aAAeJ,EAAYC,UACtDM,EAAgBF,EAAQG,UAAYH,EAAQI,aAC9CF,EAAgBD,EAClBN,EAAYC,UAAYM,EAAgBP,EAAYI,aAC3CC,EAAQG,UAAYH,EAAQI,cAAgBzE,EAAU,IAAM,GAAKgE,EAAYC,YACtFD,EAAYC,UAAYI,EAAQG,UAAYH,EAAQI,cAAgBzE,EAAU,IAAM,GAExF,KAEI0E,IAAyB,QAAiB,EAC9CnC,QACAoC,OACAC,YAAY,OACZlB,SAAS,WAET,IAAKZ,GACH,OAEF,MAgCM+B,EA1HR,SAA0BpB,EAAOmB,GAC/B,IAAK7G,GAAWE,UAAsB,IAAXwF,EACzB,OAAQ,EAEV,IAAIqB,EAAYrB,EAChB,OAAa,CAEX,GAAkB,SAAdmB,GAAwBE,IAAc7H,GAAgBU,QAAwB,aAAdiH,IAA2C,IAAfE,EAC9F,OAAQ,EAEV,MAAM3H,EAASY,GAAWE,QAAQsF,cAAc,uBAAuBuB,OAGjEC,GAAoBvF,KAAkCrC,GAAUA,EAAOmC,UAAqD,SAAzCnC,EAAO6H,aAAa,kBAC7G,KAAI7H,IAAWA,EAAO8H,aAAa,aAAeF,GAIhD,OAAOD,EAFPA,GAA2B,SAAdF,EAAuB,GAAK,CAI7C,CACF,CAqGoBM,CAhCG,MACnB,MAAMC,EAAWlI,GAAgBU,OAAS,EAC1C,GAAa,UAATgH,EACF,OAAO/C,GAET,GAAa,UAAT+C,EACF,OAAO,EAET,GAAa,QAATA,EACF,OAAOQ,EAET,MAAMC,EAAWvD,GAAoB5D,QAAU0G,EAC/C,OAAIS,EAAW,GACK,IAAdA,GAAmBhF,GACb,EAENX,IAAoD,IAAjCoC,GAAoB5D,SAAkBoH,KAAKC,IAAIX,GAAQ,EACrE,EAEFQ,EAELC,EAAWD,EACTC,IAAaD,EAAW,GAAK/E,GACvB,EAENX,GAAmB4F,KAAKC,IAAIX,GAAQ,EAC/BQ,EAEF,EAEFC,CAAQ,EAEkBG,GAAgBX,GAQnD,GAPApB,GAAoB,CAClBC,MAAOoB,EACPnB,SACAnB,UAIE7D,GAAyB,UAATiG,EAClB,IAAmB,IAAfE,EACFtD,GAAStD,QAAQsC,MAAQ1D,OACpB,CACL,MAAMM,EAASL,EAAeG,GAAgB4H,IAC9CtD,GAAStD,QAAQsC,MAAQpD,EAKX,IADAA,EAAOH,cAAcK,QAAQR,GAAWG,gBACnCH,GAAWc,OAAS,GACrC4D,GAAStD,QAAQuH,kBAAkB3I,GAAWc,OAAQR,EAAOQ,OAEjE,CACF,IAiBI8H,GAAuB,eAAkB,KAC7C,IAAK3C,GACH,OAKF,GAtBmC,MACnC,IAAI4C,EACJ,IAAqC,IAAjC7D,GAAoB5D,SAAkBgF,GAAchG,iBAAmBgG,GAAchG,gBAAgBU,SAAWV,GAAgBU,SAAWwB,EAAW8D,GAAc1C,MAAMoF,OAAM,CAACC,EAAKlI,IAAMZ,EAAeyD,GAAM7C,MAAQZ,EAAe8I,KAAQ9I,EAA+D,OAA/C4I,EAAuBzC,GAAc1C,OAAiBmF,EAAuB,MAAQ5I,EAAwB,MAATyD,GAAgBA,GAAQ,KAAM,CACpY,MAAMsF,EAA4B5C,GAAchG,gBAAgB4E,GAAoB5D,SACpF,GAAI4H,GACsC5I,GAAgB8F,MAAK5F,GACpDL,EAAeK,KAAYL,EAAe+I,KAGjD,OAAO,CAGb,CACA,OAAO,CAAK,EASRC,GACF,OAEF,MAAMC,EAAY5G,EAAWoB,GAAM,GAAKA,GAGxC,GAA+B,IAA3BtD,GAAgBU,QAA6B,MAAboI,GAMpC,GAAKhI,GAAWE,QAKhB,GAAiB,MAAb8H,EAqBAlE,GAAoB5D,SAAWhB,GAAgBU,OAAS,EAC1D6F,GAAoB,CAClBC,MAAOxG,GAAgBU,OAAS,IAMpC6F,GAAoB,CAClBC,MAAO5B,GAAoB5D,cA9B7B,CACE,MAAM+H,EAAgB/I,GAAgB4E,GAAoB5D,SAG1D,GAAIkB,GAAY6G,IAAwF,IAAvEzI,EAAUgD,IAAOqF,GAAOtF,EAAqB0F,EAAeJ,KAC3F,OAEF,MAAMK,EAAY1I,EAAUN,IAAiBiJ,GAAc5F,EAAqB4F,EAAYH,MACzE,IAAfE,EACFvB,GAAuB,CACrBC,KAAM,UAGRnB,GAAoB,CAClBC,MAAOwC,GAIb,OA5BEvB,GAAuB,CACrBC,KAAM,SAwCR,GAGD,CAEH1H,GAAgBU,QAGhBwB,GAAmBoB,GAAOZ,EAAuB+E,GAAwBlB,GAAqBV,GAAWjG,GAAYsC,IAC/GgH,IAAmB,QAAiBC,KACxC,OAAOrI,GAAYqI,GACdA,GAGLX,IAAsB,IAcxB,aAAgB,KACdA,IAAsB,GACrB,CAACA,KACJ,MAAMY,GAAa9D,IACb1B,KAGJ6B,IAAa,GACbE,IAAiB,GACbhC,GACFA,EAAO2B,GACT,EAEI+D,GAAc,CAAC/D,EAAOmB,KACrB7C,KAGL6B,IAAa,GACTjC,GACFA,EAAQ8B,EAAOmB,GACjB,EAEI6C,GAAc,CAAChE,EAAOC,EAAUkB,EAAQ8C,KAC5C,GAAIrH,GACF,GAAIoB,GAAM5C,SAAW6E,EAAS7E,QAAU4C,GAAMoF,OAAM,CAACC,EAAKlI,IAAMkI,IAAQpD,EAAS9E,KAC/E,YAEG,GAAI6C,KAAUiC,EACnB,OAEEhC,GACFA,EAAS+B,EAAOC,EAAUkB,EAAQ8C,GAEpC1E,GAAcU,EAAS,EAEnBiE,GAAU,UAAa,GACvBC,GAAiB,CAACnE,EAAOpF,EAAQwJ,EAAa,eAAgBC,EAAS,aAC3E,IAAIlD,EAASiD,EACTnE,EAAWrF,EACf,GAAIgC,EAAU,CACZqD,EAAWqE,MAAMC,QAAQvG,IAASA,GAAMjD,QAAU,GAOlD,MAAM2I,EAAY1I,EAAUiF,GAAUuD,GAAazF,EAAqBnD,EAAQ4I,MAC7D,IAAfE,EACFzD,EAASuE,KAAK5J,GACM,aAAXyJ,IACTpE,EAASwE,OAAOf,EAAW,GAC3BvC,EAAS,eAEb,CACApB,GAAgBC,EAAOC,GACvB+D,GAAYhE,EAAOC,EAAUkB,EAAQ,CACnCvG,WAEGkC,GAA0BkD,IAAUA,EAAM0E,SAAY1E,EAAM2E,UAC/DZ,GAAY/D,EAAOmB,KAEA,IAAjB7E,GAA0C,UAAjBA,GAA4B4H,GAAQxI,SAA4B,UAAjBY,IAA6B4H,GAAQxI,UAC/GsD,GAAStD,QAAQkJ,MACnB,EAsBF,MAAMC,GAAiB,CAAC7E,EAAOqC,KAC7B,IAAKzF,EACH,OAEiB,KAAftC,IACFyJ,GAAY/D,EAAO,eAErB,IAAI8E,EAAU3F,IACM,IAAhBA,GACiB,KAAf7E,IAAmC,aAAd+H,IACvByC,EAAU9G,GAAM5C,OAAS,IAG3B0J,GAAyB,SAAdzC,EAAuB,GAAK,EACnCyC,EAAU,IACZA,EAAU,GAERA,IAAY9G,GAAM5C,SACpB0J,GAAW,IAGfA,EAzCF,SAAuB5D,EAAOmB,GAC5B,IAAe,IAAXnB,EACF,OAAQ,EAEV,IAAIqB,EAAYrB,EAChB,OAAa,CAEX,GAAkB,SAAdmB,GAAwBE,IAAcvE,GAAM5C,QAAwB,aAAdiH,IAA2C,IAAfE,EACpF,OAAQ,EAEV,MAAM3H,EAASqE,GAAS+B,cAAc,oBAAoBuB,OAG1D,GAAK3H,GAAWA,EAAO8H,aAAa,cAAe9H,EAAOmC,UAAqD,SAAzCnC,EAAO6H,aAAa,iBAGxF,OAAOF,EAFPA,GAA2B,SAAdF,EAAuB,GAAK,CAI7C,CACF,CAsBY0C,CAAcD,EAASzC,GACjCjD,GAAc0F,GACdjE,GAASiE,EAAQ,EAEbE,GAAchF,IAClBlB,EAAYpD,SAAU,EACtBiE,GAAmB,IACfvB,GACFA,EAAc4B,EAAO,GAAI,SAE3BgE,GAAYhE,EAAOpD,EAAW,GAAK,KAAM,QAAQ,EAE7CqI,GAAgBC,GAASlF,IAI7B,GAHIkF,EAAMC,WACRD,EAAMC,UAAUnF,IAEdA,EAAMoF,uBAGU,IAAhBjG,KAAyE,IAApD,CAAC,YAAa,cAAcrE,QAAQkF,EAAMqF,OACjEjG,IAAe,GACfyB,IAAU,IAIQ,MAAhBb,EAAMsF,OACR,OAAQtF,EAAMqF,KACZ,IAAK,OACC9E,IAAa7C,IAEfsC,EAAMuF,iBACNpD,GAAuB,CACrBC,KAAM,QACNC,UAAW,OACXlB,OAAQ,WACRnB,WAGJ,MACF,IAAK,MACCO,IAAa7C,IAEfsC,EAAMuF,iBACNpD,GAAuB,CACrBC,KAAM,MACNC,UAAW,WACXlB,OAAQ,WACRnB,WAGJ,MACF,IAAK,SAEHA,EAAMuF,iBACNpD,GAAuB,CACrBC,MAAO9G,EACP+G,UAAW,WACXlB,OAAQ,WACRnB,UAEF8D,GAAW9D,GACX,MACF,IAAK,WAEHA,EAAMuF,iBACNpD,GAAuB,CACrBC,KAAM9G,EACN+G,UAAW,OACXlB,OAAQ,WACRnB,UAEF8D,GAAW9D,GACX,MACF,IAAK,YAEHA,EAAMuF,iBACNpD,GAAuB,CACrBC,KAAM,EACNC,UAAW,OACXlB,OAAQ,WACRnB,UAEF8D,GAAW9D,GACX,MACF,IAAK,UAEHA,EAAMuF,iBACNpD,GAAuB,CACrBC,MAAO,EACPC,UAAW,WACXlB,OAAQ,WACRnB,UAEF8D,GAAW9D,GACX,MACF,IAAK,YACH6E,GAAe7E,EAAO,YACtB,MACF,IAAK,aACH6E,GAAe7E,EAAO,QACtB,MACF,IAAK,QACH,IAAqC,IAAjCV,GAAoB5D,SAAkB6E,GAAW,CACnD,MAAM3F,EAASF,GAAgB4E,GAAoB5D,SAC7CqB,IAAWM,GAAoBA,EAAkBzC,GAIvD,GADAoF,EAAMuF,iBACFxI,EACF,OAEFoH,GAAenE,EAAOpF,EAAQ,gBAG1BuB,GACF6C,GAAStD,QAAQuH,kBAAkBjE,GAAStD,QAAQsC,MAAM5C,OAAQ4D,GAAStD,QAAQsC,MAAM5C,OAE7F,MAAWoB,GAA2B,KAAflC,KAAmD,IAA9BgG,KACtC1D,GAEFoD,EAAMuF,iBAERpB,GAAenE,EAAO1F,GAAY,eAAgB,aAEpD,MACF,IAAK,SACCiG,IAEFP,EAAMuF,iBAENvF,EAAMwF,kBACNzB,GAAY/D,EAAO,WACVvD,IAAiC,KAAfnC,IAAqBsC,GAAYoB,GAAM5C,OAAS,KAE3E4E,EAAMuF,iBAENvF,EAAMwF,kBACNR,GAAYhF,IAEd,MACF,IAAK,YACH,GAAIpD,IAAa6B,GAA2B,KAAfnE,IAAqB0D,GAAM5C,OAAS,EAAG,CAClE,MAAM8F,GAAwB,IAAhB/B,GAAoBnB,GAAM5C,OAAS,EAAI+D,GAC/Cc,EAAWjC,GAAMjD,QACvBkF,EAASwE,OAAOvD,EAAO,GACvB8C,GAAYhE,EAAOC,EAAU,eAAgB,CAC3CrF,OAAQoD,GAAMkD,IAElB,CACA,MACF,IAAK,SACH,GAAItE,IAAa6B,GAA2B,KAAfnE,IAAqB0D,GAAM5C,OAAS,IAAqB,IAAhB+D,GAAmB,CACvF,MAAM+B,EAAQ/B,GACRc,EAAWjC,GAAMjD,QACvBkF,EAASwE,OAAOvD,EAAO,GACvB8C,GAAYhE,EAAOC,EAAU,eAAgB,CAC3CrF,OAAQoD,GAAMkD,IAElB,EAIN,EAEIuE,GAAczF,IAClBF,IAAW,GACPtB,IAAgBM,EAAYpD,SAC9BoI,GAAW9D,EACb,EAEI0F,GAAa1F,IAEb/D,EAAkCT,IACpCwD,GAAStD,QAAQqF,SAGnBjB,IAAW,GACXf,EAAWrD,SAAU,EACrBoD,EAAYpD,SAAU,EAClBW,IAA+C,IAAjCiD,GAAoB5D,SAAkB6E,GACtD4D,GAAenE,EAAOtF,GAAgB4E,GAAoB5D,SAAU,QAC3DW,GAAcG,GAA2B,KAAflC,GACnC6J,GAAenE,EAAO1F,GAAY,OAAQ,YACjCiC,GACTwD,GAAgBC,EAAOhC,IAEzB+F,GAAY/D,EAAO,QAAO,EAEtB2F,GAAoB3F,IACxB,MAAMC,EAAWD,EAAM4F,OAAO5H,MAC1B1D,KAAe2F,IACjBN,GAAmBM,GACnBI,IAAiB,GACbjC,GACFA,EAAc4B,EAAOC,EAAU,UAGlB,KAAbA,EACGpD,GAAqBD,GACxBoH,GAAYhE,EAAO,KAAM,SAG3B8D,GAAW9D,EACb,EAEI6F,GAAwB7F,IAC5BiB,GAAoB,CAClBjB,QACAkB,MAAO4E,OAAO9F,EAAM+F,cAActD,aAAa,sBAC/CtB,OAAQ,SACR,EAEE6E,GAAyB,KAC7B9B,GAAQxI,SAAU,CAAI,EAElBuK,GAAoBjG,IACxB,MAAMkB,EAAQ4E,OAAO9F,EAAM+F,cAActD,aAAa,sBACtD0B,GAAenE,EAAOtF,GAAgBwG,GAAQ,gBAC9CgD,GAAQxI,SAAU,CAAK,EAEnBwK,GAAkBhF,GAASlB,IAC/B,MAAMC,EAAWjC,GAAMjD,QACvBkF,EAASwE,OAAOvD,EAAO,GACvB8C,GAAYhE,EAAOC,EAAU,eAAgB,CAC3CrF,OAAQoD,GAAMkD,IACd,EAEEiF,GAAuBnG,IACvB1B,GACFyF,GAAY/D,EAAO,eAEnB8D,GAAW9D,EACb,EAIIoG,GAAkBpG,IAClBA,EAAM4F,OAAOnD,aAAa,QAAU9E,GACtCqC,EAAMuF,gBACR,EAIIc,GAAc,KAClBrH,GAAStD,QAAQqF,QACbrC,GAAiBK,EAAWrD,SAAWsD,GAAStD,QAAQ4K,aAAetH,GAAStD,QAAQ6K,gBAAmB,GAC7GvH,GAAStD,QAAQ8K,SAEnBzH,EAAWrD,SAAU,CAAK,EAEtB+K,GAAuBzG,IACR,KAAf1F,IAAsBgE,IACxB6H,GAAqBnG,EACvB,EAEF,IAAI0G,GAAQlK,GAAYlC,GAAWc,OAAS,EAC5CsL,GAAQA,KAAU9J,EAAWoB,GAAM5C,OAAS,EAAc,OAAV4C,IAChD,IAAI2I,GAAiBjM,GACrB,GAAI+C,EAAS,CAEK,IAAImJ,IAEpBD,GAAiBjM,GAAgBmM,QAAO,CAACC,EAAKlM,EAAQsG,KACpD,MAAM6F,EAAQtJ,EAAQ7C,GAkBtB,OAjBIkM,EAAI1L,OAAS,GAAK0L,EAAIA,EAAI1L,OAAS,GAAG2L,QAAUA,EAClDD,EAAIA,EAAI1L,OAAS,GAAGf,QAAQmK,KAAK5J,GASjCkM,EAAItC,KAAK,CACPa,IAAKnE,EACLA,QACA6F,QACA1M,QAAS,CAACO,KAGPkM,CAAG,GACT,GACL,CAIA,OAHI9J,GAAgB6C,IAClB6F,KAEK,CACLsB,aAAc,CAAC9B,EAAQ,CAAC,KAAM,OAAS,CACrC,YAAatE,GAAmB,GAAGjD,YAAe,MACjDuH,EAAO,CACRC,UAAWF,GAAcC,GACzB+B,YAAab,GACbc,QAASb,KAEXc,mBAAoB,KAAM,CACxBxJ,GAAI,GAAGA,UACPyJ,QAASzJ,IAEX0J,cAAe,KAAM,CACnB1J,KACAK,MAAO1D,GACPgN,OAAQ5B,GACR6B,QAAS9B,GACTxH,SAAU0H,GACVsB,YAAaR,GAGb,wBAAyBlG,GAAY,GAAK,KAC1C,oBAAqBpE,EAAe,OAAS,OAC7C,gBAAiByE,GAAmB,GAAGjD,iBAAe6J,EACtD,gBAAiB5G,GAGjBzE,aAAc,MACdsL,IAAKzI,GACL0I,eAAgB,OAChBC,WAAY,QACZC,KAAM,aAERC,cAAe,KAAM,CACnBC,UAAW,EACXZ,QAASlC,KAEX+C,uBAAwB,KAAM,CAC5BD,UAAW,EACXZ,QAASf,KAEX6B,YAAa,EACX9G,YACI,OAAS,CACbmE,IAAKnE,EACL,iBAAkBA,EAClB4G,UAAW,IACTrJ,GAAY,CACdwJ,SAAU/B,GAAgBhF,KAE5BgH,gBAAiB,KAAM,CACrBN,KAAM,UACNjK,GAAI,GAAGA,YACP,kBAAmB,GAAGA,UACtB8J,IAAK7D,GACLqD,YAAajH,IAEXA,EAAMuF,gBAAgB,IAG1B4C,eAAgB,EACdjH,QACAtG,aAEA,MAAMwN,GAAYxL,EAAWoB,GAAQ,CAACA,KAAQwC,MAAKC,GAAoB,MAAVA,GAAkB1C,EAAqBnD,EAAQ6F,KACtG1D,IAAWM,GAAoBA,EAAkBzC,GACvD,MAAO,CACLyK,IAAK9K,EAAeK,GACpBkN,UAAW,EACXF,KAAM,SACNjK,GAAI,GAAGA,YAAauD,IACpBmH,YAAaxC,GACbqB,QAASjB,GACTqC,aAActC,GACd,oBAAqB9E,EACrB,gBAAiBnE,EACjB,gBAAiBqL,EAClB,EAEHzK,KACArD,cACA0D,SACA0I,SACAnG,aACAV,QAASA,KAA2B,IAAhBV,GACpBF,YACAC,eACAC,cACAwH,kBAEJ,C,4BCv7BI4B,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,yGACD,aACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,4MACD,YACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,0GACD,SACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,uDACD,QACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,+JACD,gBACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,yIACD,WACJL,EAAQ,EAAUG,C,2BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,uVACD,WACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,6FACD,QACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,oMACD,cACJL,EAAQ,EAAUG,C,4BCVdJ,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAehJ,UAAuB,EAAIiJ,EAAYE,KAAK,OAAQ,CACpFC,EAAG,oMACD,eACJL,EAAQ,EAAUG,C,yMCVX,SAASG,EAA6BC,GAC3C,OAAO,EAAAC,EAAA,GAAqB,mBAAoBD,EAClD,EAC6B,EAAAE,EAAA,GAAuB,mBAAoB,CAAC,OAAQ,eAAgB,eAAgB,UAAW,QAAS,WACrI,I,WCJA,MAAMC,EAAY,CAAC,YAAa,QAAS,YAAa,iBAAkB,gBAAiB,SAuBnFC,GAAoB,EAAAC,EAAA,IAAO,KAAM,CACrC1J,KAAM,mBACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAA2B,YAArBD,EAAWE,OAAuBH,EAAO,SAAQ,EAAAI,EAAA,GAAWH,EAAWE,WAAYF,EAAWI,gBAAkBL,EAAOM,QAASL,EAAWM,OAASP,EAAOO,OAAQN,EAAWO,eAAiBR,EAAOS,OAAO,GAP5M,EASvB,EACDC,QACAT,iBACI,OAAS,CACbU,UAAW,aACXC,WAAY,OACZC,UAAW,OACXV,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKC,UAC1CC,WAAYR,EAAMS,WAAWD,WAC7BE,WAAYV,EAAMS,WAAWE,iBAC7BC,SAAUZ,EAAMS,WAAWI,QAAQ,KACb,YAArBtB,EAAWE,OAAuB,CACnCA,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQS,QAAQC,MACvB,YAArBxB,EAAWE,OAAuB,CACnCA,MAAO,YACLF,EAAWI,gBAAkB,CAC/BqB,YAAa,GACbC,aAAc,IACb1B,EAAWM,OAAS,CACrBmB,YAAa,KACXzB,EAAWO,eAAiB,CAC9BoB,SAAU,SACVC,IAAK,EACLC,OAAQ,EACRC,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQiB,WAAWC,UA8E5D,MA5EmC,cAAiB,SAAuBC,EAAS/D,GAClF,MAAMzL,GAAQ,EAAAyP,EAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,sBAEF,UACFgM,EAAS,MACTjC,EAAQ,UAAS,UACjBkC,EAAY,KAAI,eAChBhC,GAAiB,EAAK,cACtBG,GAAgB,EAAK,MACrBD,GAAQ,GACN7N,EACJkJ,GAAQ,OAA8BlJ,EAAOkN,GACzCK,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCyN,QACAkC,YACAhC,iBACAG,gBACAD,UAEI+B,EArEkBrC,KACxB,MAAM,QACJqC,EAAO,MACPnC,EAAK,eACLE,EAAc,MACdE,EAAK,cACLC,GACEP,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAkB,YAAVC,GAAuB,SAAQ,EAAAC,EAAA,GAAWD,MAAWE,GAAkB,UAAWE,GAAS,SAAUC,GAAiB,WAEvI,OAAO,EAAAgC,EAAA,GAAeD,EAAO/C,EAA8B8C,EAAQ,EA0DnDG,CAAkBxC,GAClC,OAAoB,SAAKJ,GAAmB,OAAS,CACnD6C,GAAIL,EACJD,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9BjE,IAAKA,EACL8B,WAAYA,GACXrE,GACL,I,iGCtFO,SAAS+G,EAA4BlD,GAC1C,OAAO,EAAAC,EAAA,GAAqB,kBAAmBD,EACjD,CAEA,ICJImD,EAAYC,EDIhB,GAD4B,EAAAlD,EAAA,GAAuB,kBAAmB,CAAC,OAAQ,YAAa,UAAW,eAAgB,MAAO,eAAgB,gBAAiB,eAAgB,eAAgB,YAAa,QAAS,eAAgB,eAAgB,iBAAkB,iBAAkB,qBAAsB,SAAU,sBAAuB,QAAS,UAAW,UAAW,YAAa,SAAU,aAAc,YCFpZ,MAAM,EAAY,CAAC,eAAgB,gBAAiB,aAAc,eAAgB,YAAa,YAAa,YAAa,cAAe,gBAAiB,YAAa,YAAa,kBAAmB,eAAgB,mBAAoB,uBAAwB,WAAY,yBAA0B,kBAAmB,gBAAiB,gBAAiB,wBAAyB,iBAAkB,WAAY,YAAa,mBAAoB,oBAAqB,iBAAkB,uBAAwB,UAAW,oBAAqB,KAAM,qBAAsB,aAAc,YAAa,mBAAoB,eAAgB,UAAW,cAAe,WAAY,gBAAiB,WAAY,UAAW,oBAAqB,gBAAiB,SAAU,OAAQ,cAAe,WAAY,UAAW,iBAAkB,kBAAmB,YAAa,WAAY,cAAe,cAAe,eAAgB,aAAc,gBAAiB,OAAQ,YAAa,SAuDr7BmD,GAAmB,EAAAhD,EAAA,IAAO,MAAO,CACrC1J,KAAM,kBACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,GACE,UACJqQ,EAAS,aACTC,EAAY,aACZC,EAAY,aACZC,EAAY,KACZC,GACElD,EACJ,MAAO,CAAC,CACN,CAAC,MAAM,SAA4BD,EAAOoD,KACzC,CACD,CAAC,MAAM,SAA4BpD,EAAO,WAAU,EAAAI,EAAA,GAAW+C,OAC9D,CACD,CAAC,MAAM,eAAkCnD,EAAOqD,WAC/C,CACD,CAAC,MAAM,WAA8BrD,EAAO9O,OAC3C,CACD,CAAC,MAAM,WAA8BgS,GAAgBlD,EAAOkD,cAC3DlD,EAAOE,KAAM6C,GAAa/C,EAAO+C,UAAWE,GAAgBjD,EAAOiD,aAAcD,GAAgBhD,EAAOgD,aAAa,GAxBnG,EA0BtB,EACD/C,iBACI,OAAS,CACb,CAAC,KAAK,cAAgC,oBAAuC,CAC3EqD,WAAY,WAGd,yBAA0B,CACxB,CAAC,YAAY,oBAAuC,CAClDA,WAAY,aAGfrD,EAAW8C,WAAa,CACzBQ,MAAO,QACN,CACD,CAAC,MAAM,UAA4B,OAAS,CAC1CC,OAAQ,EACRC,SAAU,oBACW,UAApBxD,EAAWkD,MAAoB,CAChCK,OAAQ,EACRC,SAAU,qBAEZ,CAAC,MAAM,eAAkC,CACvCC,SAAU,OACV,CAAC,IAAI,qBAAuC,mBAAsC,CAChF/B,aAAc,IAEhB,CAAC,IAAI,kBAAoC,mBAAsC,CAC7EA,aAAc,IAEhB,CAAC,MAAM,WAA8B,CACnC4B,MAAO,EACPI,SAAU,KAGd,CAAC,MAAMC,EAAA,UAAsB,CAC3BC,cAAe,EACf,oBAAqB,CACnBC,QAAS,oBAGb,CAAC,MAAMF,EAAA,UAAqBG,EAAA,eAA+B,CACzD,CAAC,MAAMH,EAAA,EAAA1S,SAAuB,CAC5B4S,QAAS,kBAGb,CAAC,MAAME,EAAA,UAA8B,CACnCF,QAAS,EACT,CAAC,IAAI,qBAAuC,mBAAsC,CAChFnC,aAAc,IAEhB,CAAC,IAAI,kBAAoC,mBAAsC,CAC7EA,aAAc,IAEhB,CAAC,MAAM,WAA8B,CACnCmC,QAAS,uBAEX,CAAC,MAAM,kBAAqC,CAC1CG,MAAO,IAGX,CAAC,MAAMD,EAAA,UAA6BD,EAAA,eAA+B,CAGjEG,WAAY,EACZL,cAAe,EACfnC,YAAa,EACb,CAAC,MAAM,WAA8B,CACnCoC,QAAS,wBAGb,CAAC,MAAMK,EAAA,UAA4B,CACjCD,WAAY,GACZxC,YAAa,EACb,CAAC,IAAI,qBAAuC,mBAAsC,CAChFC,aAAc,IAEhB,CAAC,IAAI,kBAAoC,mBAAsC,CAC7EA,aAAc,IAEhB,CAAC,MAAMwC,EAAA,WAA6B,CAClCL,QAAS,WAEX,CAAC,MAAM,kBAAqC,CAC1CG,MAAO,IAGX,CAAC,MAAME,EAAA,UAA2BJ,EAAA,eAA+B,CAC/DF,cAAe,EACf,CAAC,MAAMM,EAAA,WAA6B,CAClCL,QAAS,cAGb,CAAC,MAAMC,EAAA,iBAAiC,CACtCG,WAAY,GAEd,CAAC,MAAM,YAA8B,OAAS,CAC5CE,SAAU,EACVC,aAAc,WACdC,QAAS,GACRrE,EAAWiD,cAAgB,CAC5BoB,QAAS,QAGPC,GAA2B,EAAAzE,EAAA,IAAO,MAAO,CAC7C1J,KAAM,kBACNqJ,KAAM,eACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOwE,cAHd,CAI9B,CAED5C,SAAU,WACVqC,MAAO,EACPpC,IAAK,qBAGD4C,GAA6B,EAAA3E,EAAA,IAAO4E,EAAA,EAAY,CACpDtO,KAAM,kBACNqJ,KAAM,iBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO2E,gBAHZ,CAIhC,CACDC,aAAc,EACdd,QAAS,EACTR,WAAY,WAERuB,GAA6B,EAAA/E,EAAA,IAAO4E,EAAA,EAAY,CACpDtO,KAAM,kBACNqJ,KAAM,iBACNM,kBAAmB,EACjBE,cACCD,KAAW,OAAS,CAAC,EAAGA,EAAO8E,eAAgB7E,EAAWhJ,WAAa+I,EAAO+E,qBALhD,EAMhC,EACD9E,iBACI,OAAS,CACb6D,QAAS,EACTc,aAAc,GACb3E,EAAWhJ,WAAa,CACzB+N,UAAW,qBAEPC,GAAqB,EAAAnF,EAAA,IAAOoF,EAAA,EAAQ,CACxC9O,KAAM,kBACNqJ,KAAM,SACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAAC,CACN,CAAC,MAAM,YAA+BsN,EAAO1O,QAC5C0O,EAAOmF,OAAQlF,EAAWmF,eAAiBpF,EAAOqF,oBAAoB,GATlD,EAWxB,EACD3E,QACAT,iBACI,OAAS,CACb6B,QAASpB,EAAMI,MAAQJ,GAAOoB,OAAOwD,OACpCrF,EAAWmF,eAAiB,CAC7BxD,SAAU,eAEN2D,GAAoB,EAAAzF,EAAA,IAAO0F,EAAA,EAAO,CACtCpP,KAAM,kBACNqJ,KAAM,QACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOiC,OAHrB,EAIvB,EACDvB,YACI,OAAS,CAAC,EAAGA,EAAMS,WAAWsE,MAAO,CACzCC,SAAU,WAENC,GAAsB,EAAA7F,EAAA,IAAO,MAAO,CACxC1J,KAAM,kBACNqJ,KAAM,UACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO4F,SAHnB,EAIzB,EACDlF,YACI,CACJP,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKC,UAC1C6C,QAAS,gBAEL+B,GAAwB,EAAA/F,EAAA,IAAO,MAAO,CAC1C1J,KAAM,kBACNqJ,KAAM,YACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO8F,WAHjB,EAI3B,EACDpF,YACI,CACJP,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKC,UAC1C6C,QAAS,gBAELiC,GAAsB,EAAAjG,EAAA,IAAO,MAAO,CACxC1J,KAAM,kBACNqJ,KAAM,UACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOgG,SAHnB,EAIzB,EACDtF,YACI,CACJG,UAAW,OACX2C,OAAQ,EACRM,QAAS,QACTmC,UAAW,OACXP,SAAU,OACV9D,SAAU,WACV,CAAC,MAAM,YAA+B,CACpCsE,UAAW,GACXC,QAAS,OACTT,SAAU,SACVU,eAAgB,aAChBC,WAAY,SACZC,OAAQ,UACRpC,WAAY,EACZvD,UAAW,aACX4F,QAAS,IACTC,wBAAyB,cACzB3C,cAAe,EACfnC,YAAa,GACbC,aAAc,GACd,CAACjB,EAAM+F,YAAYC,GAAG,OAAQ,CAC5BR,UAAW,QAEb,CAAC,KAAK,aAAgC,CACpCnE,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOC,MAEtD,uBAAwB,CACtB7E,gBAAiB,gBAGrB,0BAA2B,CACzBuC,SAAU5D,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOE,gBAC9CC,cAAe,QAEjB,CAAC,KAAK,kBAAqC,CACzC/E,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOlP,OAExD,0BAA2B,CACzBsK,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,oBAAqB,QAAMtG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,iBACxL,CAAC,KAAK,aAAgC,CACpCjF,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,sBAAsBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOM,kBAAmB,QAAMvG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOM,cAEjR,uBAAwB,CACtBlF,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAO7H,WAG1D,CAAC,KAAK,kBAAqC,CACzCiD,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,sBAAsBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOO,kBAAmB,QAAMxG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOO,qBAKnRC,GAAyB,EAAArH,EAAA,IAAO,EAAe,CACnD1J,KAAM,kBACNqJ,KAAM,aACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOoH,YAHhB,EAI5B,EACD1G,YACI,CACJqB,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQiB,WAAWC,MAC1DJ,KAAM,MAEFwF,GAAsB,EAAAvH,EAAA,IAAO,KAAM,CACvC1J,KAAM,kBACNqJ,KAAM,UACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOsH,SAHnB,CAIzB,CACDxD,QAAS,EACT,CAAC,MAAM,YAA+B,CACpCpC,YAAa,MA+pBjB,MA3pBkC,cAAiB,SAAsBQ,EAAS/D,GAChF,IAAIoJ,EAAuBC,EAAkBC,EAAmBC,EAChE,MAAMhV,GAAQ,EAAAyP,EAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,qBAGF,aACFvD,GAAe,EAAK,cACpBC,GAAgB,EAAK,WACrBC,GAAa,EAAK,aAClBC,GAAe,EAAK,UACpB2U,EAAS,UACTvF,EAAS,UACTwF,EAAYhF,IAAeA,GAA0B,SAAK,IAAW,CACnEtB,SAAU,WACT,YACHrO,GAAeP,EAAMQ,SAAQ,cAC7BC,GAAgB,EAAK,UACrB0U,EAAY,QAAO,UACnBC,EAAY,QAAO,gBACnBC,EAAkB,CAAC,EAAC,aACpB1U,GAAeX,EAAMY,SAAW,GAAK,MAAI,iBACzCC,GAAmB,EAAK,qBACxBC,GAAuB,EAAK,SAC5BC,GAAW,EAAK,uBAChBE,GAAyB,EAAK,gBAC9BC,GAAkB,EAAK,cACvBwR,IAAgB,EAAK,sBACrBtR,IAAwB,EAAK,eAC7BkU,GAAiB,OAAM,SACvB9U,IAAW,EAAK,UAChB6P,IAAY,EAAK,iBACjBkF,GAAmBC,IAAQ,IAAIA,KAAM,eACrCjX,GAAiBK,KACf,IAAI2C,EACJ,OAAyC,OAAjCA,EAAgB3C,EAAO4C,OAAiBD,EAAgB3C,CAAM,GACvE,QACD6C,GAAO,kBACPC,IAAqB1B,EAAMQ,SAAQ,mBACnCqB,IAAqB,EAAK,UAC1B4T,IAAY,EAAE,iBACdC,GAAmB,KAAI,aACvBC,GAAY,QACZzC,IAAU,EAAK,YACf0C,GAAc,WAAU,SACxBhV,IAAW,EAAK,cAChBiV,GAAgB,aAAY,YAC5BrT,IAAc,EAAK,SACnBsT,GAAW,OAAM,eACjBC,GAAiBjD,EAAA,EAAK,gBACtBkD,GAAkBxD,EAAA,EAAM,UACxByD,GAAY9F,IAAuBA,GAAkC,SAAK+F,EAAA,EAAmB,CAAC,IAAG,SACjGzT,IAAW,EACX0T,YAAaC,GAAe,YAC5BC,GACAC,aAAcC,GAAgB,WAC9BC,GAAU,cACV9T,IAAiB1C,EAAMQ,SAAQ,KAC/BiQ,GAAO,SAAQ,UACfgG,GAAY,CAAC,GACXzW,EACJkJ,IAAQ,OAA8BlJ,EAAO,IAGzC,aACJgL,GAAY,cACZK,GAAa,mBACbF,GAAkB,uBAClBY,GAAsB,cACtBF,GAAa,YACbG,GAAW,gBACXE,GAAe,eACfC,GAAc,MACdnK,GAAK,MACL0I,GAAK,GACL/I,GAAE,UACF4C,GAAS,QACTV,GAAO,WACPV,GAAU,SACVF,GAAQ,YACRC,GAAW,WACX5E,GAAU,eACVqM,KACE,EAAA5K,EAAA,IAAgB,OAAS,CAAC,EAAGC,EAAO,CACtCU,cAAe,kBAEX4P,IAAgBzP,IAAqBE,GAAY2J,KAAUjI,GAC3D8N,KAAiB/P,KAA+B,IAAnB8U,MAA+C,IAAnBA,GAGzD/H,IAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC0S,iBACA7O,WACAwM,aACAC,gBACAC,gBACAC,cAA8B,IAAhBrN,GACdoB,aACAkM,UAEIb,GAxakBrC,KACxB,MAAM,QACJqC,EAAO,cACP8C,EAAa,QACb7O,EAAO,UACPwM,EAAS,aACTC,EAAY,aACZC,EAAY,aACZC,EAAY,UACZjM,EAAS,KACTkM,GACElD,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQ3J,GAAW,UAAWwM,GAAa,YAAaC,GAAgB,eAAgBC,GAAgB,gBAC/GI,UAAW,CAAC,aACZnS,MAAO,CAAC,QAASgS,GAAgB,gBACjCE,IAAK,CAAC,MAAO,WAAU,EAAAhD,EAAA,GAAW+C,MAClCqB,aAAc,CAAC,gBACfG,eAAgB,CAAC,kBACjBG,eAAgB,CAAC,iBAAkB7N,GAAa,sBAChDkO,OAAQ,CAAC,SAAUC,GAAiB,uBACpCnD,MAAO,CAAC,SACR+D,QAAS,CAAC,WACVJ,QAAS,CAAC,WACVE,UAAW,CAAC,aACZxU,OAAQ,CAAC,UACT8V,WAAY,CAAC,cACbE,QAAS,CAAC,YAEZ,OAAO,EAAA9E,EAAA,GAAeD,EAAOI,EAA6BL,EAAQ,EA2YlD,CAAkBrC,IAClC,IAAImJ,GACJ,GAAI9V,IAAYoB,GAAM5C,OAAS,EAAG,CAChC,MAAMuX,EAAwBC,IAAU,OAAS,CAC/ClH,UAAWE,GAAQc,IACnB3P,YACCiL,GAAY4K,IAEbF,GADEF,GACeA,GAAWxU,GAAO2U,EAAuBpJ,IAEzCvL,GAAM6U,KAAI,CAACjY,EAAQsG,KAAuB,SAAK4R,EAAA,GAAM,OAAS,CAC7EtV,MAAOjD,GAAeK,GACtB6R,KAAMA,IACLkG,EAAsB,CACvBzR,UACE+P,KAER,CACA,GAAIQ,IAAa,GAAKnN,MAAMC,QAAQmO,IAAiB,CACnD,MAAMlB,EAAOkB,GAAetX,OAASqW,IAChC5R,IAAW2R,EAAO,IACrBkB,GAAiBA,GAAejO,OAAO,EAAGgN,IAC1CiB,GAAelO,MAAmB,SAAK,OAAQ,CAC7CkH,UAAWE,GAAQc,IACnBqG,SAAUxB,GAAiBC,IAC1BkB,GAAetX,SAEtB,CACA,MAYM+W,GAAcC,IAZOQ,KAAuB,UAAM,KAAM,CAC5DG,SAAU,EAAc,SAAKtC,EAAwB,CACnD/E,UAAWE,GAAQ8E,WACnBnH,WAAYA,GACZoC,UAAW,MACXoH,SAAUH,EAAO7L,SACF,SAAK4J,EAAqB,CACzCjF,UAAWE,GAAQgF,QACnBrH,WAAYA,GACZwJ,SAAUH,EAAOG,aAElBH,EAAOvN,MAKJiN,GAAeC,IAHO,EAACS,EAAQpY,KAAwB,SAAK,MAAM,OAAS,CAAC,EAAGoY,EAAQ,CAC3FD,SAAUxY,GAAeK,OAGrBqY,GAAmB,CAACrY,EAAQsG,KAChC,MAAMgS,EAAc/K,GAAe,CACjCvN,SACAsG,UAEF,OAAOoR,IAAa,OAAS,CAAC,EAAGY,EAAa,CAC5CxH,UAAWE,GAAQhR,SACjBA,EAAQ,CACVwN,SAAU8K,EAAY,iBACtBhS,QACA5G,eACA,EAEE6Y,GAAgF,OAArDtC,EAAwB4B,GAAUxE,gBAA0B4C,EAAwBQ,EAAgBpD,eAC/HmF,GAAyD,OAAvCtC,EAAmB2B,GAAUlH,OAAiBuF,EAAmBO,EAAgB9F,MACnG8H,GAA4D,OAAzCtC,EAAoB0B,GAAUhE,QAAkBsC,EAAoBM,EAAgB5C,OACvG6E,GAAgF,OAArDtC,EAAwByB,GAAUrE,gBAA0B4C,EAAwBK,EAAgBjD,eACrI,OAAoB,UAAM,WAAgB,CACxC2E,SAAU,EAAc,SAAK3G,GAAkB,OAAS,CACtD3E,IAAKA,EACLiE,WAAW,OAAKE,GAAQpC,KAAMkC,GAC9BnC,WAAYA,IACXvC,GAAa9B,IAAQ,CACtB6N,SAAUV,GAAY,CACpB1U,MACAZ,WACAsP,WAAW,EACXI,KAAe,UAATA,GAAmB,aAAUjF,EACnC+L,gBAAiBpM,KACjBqM,YAAY,OAAS,CACnB/L,IAAKvI,GACLwM,UAAWE,GAAQe,UACnB+F,oBACEpG,IAAgBC,KAAiB,CACnCuB,cAA2B,UAAMD,EAA0B,CACzDnC,UAAWE,GAAQkC,aACnBvE,WAAYA,GACZwJ,SAAU,CAACzG,IAA4B,SAAKyB,GAA4B,OAAS,CAAC,EAAGlG,KAAiB,CACpG,aAAcsJ,EACdsC,MAAOtC,EACP5H,WAAYA,IACX4J,GAAyB,CAC1BzH,WAAW,OAAKE,GAAQqC,eAA2C,MAA3BkF,QAAkC,EAASA,GAAwBzH,WAC3GqH,SAAU7B,KACN,KAAM3E,IAA4B,SAAK4B,GAA4B,OAAS,CAAC,EAAGpG,KAA0B,CAC9GhL,SAAUA,EACV,aAAcwD,GAAY6Q,EAAYU,GACtC2B,MAAOlT,GAAY6Q,EAAYU,GAC/BvI,WAAYA,IACX+J,GAAyB,CAC1B5H,WAAW,OAAKE,GAAQwC,eAA2C,MAA3BkF,QAAkC,EAASA,GAAwB5H,WAC3GqH,SAAUd,MACN,UAGVyB,YAAY,OAAS,CACnBhI,UAAWE,GAAQpR,MACnBuC,WACA0B,aACC4I,WAEFpI,IAAwB,SAAKsP,GAAoB,OAAS,CAC7DvC,GAAIgG,GACJtD,cAAeA,GACfiF,MAAO,CACL9G,MAAO5N,GAAWA,GAAS2U,YAAc,MAE3CrK,WAAYA,GACZ3B,KAAM,eACN3I,SAAUA,GACVX,KAAMiC,IACL8S,GAAiB,CAClB3H,WAAW,OAAKE,GAAQ6C,OAA2B,MAAnB4E,QAA0B,EAASA,GAAgB3H,WACnFqH,UAAuB,UAAMlE,GAAmB,OAAS,CACvDtF,WAAYA,GACZyC,GAAI+F,IACHqB,GAAgB,CACjB1H,WAAW,OAAKE,GAAQL,MAAyB,MAAlB6H,QAAyB,EAASA,GAAe1H,WAChFqH,SAAU,CAAC7D,IAAqC,IAA1BvI,GAAevL,QAA4B,SAAK6T,EAAqB,CACzFvD,UAAWE,GAAQsD,QACnB3F,WAAYA,GACZwJ,SAAUnB,KACP,KAAgC,IAA1BjL,GAAevL,QAAiBoB,IAAa0S,GASnD,MAT0E,SAAKC,EAAuB,CACzGzD,UAAWE,GAAQwD,UACnB7F,WAAYA,GACZ3B,KAAM,eACNX,YAAajH,IAEXA,EAAMuF,gBAAgB,EAExBwN,SAAUlB,KACDlL,GAAevL,OAAS,GAAiB,SAAKiU,GAAqB,OAAS,CACrFrD,GAAI0F,GACJhG,UAAWE,GAAQ0D,QACnB/F,WAAYA,IACXrB,KAAmByJ,GAAc,CAClCoB,SAAUpM,GAAekM,KAAI,CAACjY,EAAQsG,IAChCzD,GACK0U,GAAY,CACjB9M,IAAKzK,EAAOyK,IACZ0B,MAAOnM,EAAOmM,MACdgM,SAAUnY,EAAOP,QAAQwY,KAAI,CAACgB,EAASC,IAAWb,GAAiBY,EAASjZ,EAAOsG,MAAQ4S,OAGxFb,GAAiBrY,EAAQsG,QAE9B,YAEJ,OAEV,G,+JCvlBA,GAAe,EAAA6S,EAAA,IAA4B,SAAK,OAAQ,CACtDlL,EAAG,+FACD,wBCFJ,GAAe,EAAAkL,EAAA,IAA4B,SAAK,OAAQ,CACtDlL,EAAG,wIACD,YCFJ,GAAe,EAAAkL,EAAA,IAA4B,SAAK,OAAQ,CACtDlL,EAAG,kGACD,yB,sDCPG,SAASmL,EAAwBjL,GACtC,OAAO,EAAAC,EAAA,GAAqB,cAAeD,EAC7C,CAEA,OADwB,EAAAE,EAAA,GAAuB,cAAe,CAAC,OAAQ,UAAW,WAAY,gBAAiB,eAAgB,mBCH/H,MAAMC,EAAY,CAAC,cAAe,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,OAAQ,aA4BzG+K,GAAe,EAAA7K,EAAA,IAAO8K,EAAA,EAAY,CACtCC,kBAAmBC,IAAQ,QAAsBA,IAAkB,YAATA,EAC1D1U,KAAM,cACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAAMD,EAAW8K,eAAiB/K,EAAO+K,cAAoC,YAArB9K,EAAWE,OAAuBH,EAAO,SAAQ,EAAAI,EAAA,GAAWH,EAAWE,UAAU,GARvI,EAUlB,EACDO,QACAT,iBACI,OAAS,CACbE,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKC,YACxChB,EAAW+K,eAAiB,CAC9B,UAAW,CACTjJ,gBAAiBrB,EAAMI,KAAO,QAA6B,YAArBb,EAAWE,MAAsBO,EAAMI,KAAKC,QAAQ4F,OAAOsE,cAAgBvK,EAAMI,KAAKC,QAAQS,QAAQuF,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOM,iBAAkB,QAA2B,YAArBhH,EAAWE,MAAsBO,EAAMK,QAAQ4F,OAAOuE,OAASxK,EAAMK,QAAQd,EAAWE,OAAOsB,KAAMf,EAAMK,QAAQ4F,OAAOM,cAEzU,uBAAwB,CACtBlF,gBAAiB,iBAGC,YAArB9B,EAAWE,OAAuB,CACnC,CAAC,KAAK,gBAA8B,mBAAkC,CACpEA,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,MAEzD,CAAC,KAAK,cAA6B,CACjCtB,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOlT,cAG1C0X,GAAkC,SAAKC,EAAc,CAAC,GACtDC,GAA2B,SAAKC,EAA0B,CAAC,GAC3DC,GAAwC,SAAKC,EAA2B,CAAC,GAiJ/E,MAhJ8B,cAAiB,SAAkBtJ,EAAS/D,GACxE,IAAIsN,EAAsBC,EAC1B,MAAMhZ,GAAQ,EAAAyP,EAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,iBAEF,YACFuV,EAAcR,EAAkB,MAChChL,EAAQ,UACRyL,KAAMC,EAAWR,EAAW,cAC5BN,GAAgB,EAChBe,kBAAmBC,EAAwBR,EAAwB,WACnEnB,EAAU,KACVjH,EAAO,SAAQ,UACff,GACE1P,EACJkJ,GAAQ,OAA8BlJ,EAAOkN,GACzCgM,EAAOb,EAAgBgB,EAAwBF,EAC/CC,EAAoBf,EAAgBgB,EAAwBJ,EAC5D1L,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCyN,QACA4K,gBACA5H,SAEIb,EAtEkBrC,KACxB,MAAM,QACJqC,EAAO,cACPyI,EAAa,MACb5K,GACEF,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQ6K,GAAiB,gBAAiB,SAAQ,EAAA3K,EAAA,GAAWD,OAEhE6L,GAAkB,EAAAxJ,EAAA,GAAeD,EAAOmI,EAAyBpI,GACvE,OAAO,OAAS,CAAC,EAAGA,EAAS0J,EAAgB,EA4D7BvJ,CAAkBxC,GAClC,OAAoB,SAAK0K,GAAc,OAAS,CAC9CsB,KAAM,WACN7B,YAAY,OAAS,CACnB,qBAAsBW,GACrBX,GACHwB,KAAmB,eAAmBA,EAAM,CAC1CtK,SAA0D,OAA/CmK,EAAuBG,EAAKlZ,MAAM4O,UAAoBmK,EAAuBtI,IAE1FwI,YAA0B,eAAmBG,EAAmB,CAC9DxK,SAAwE,OAA7DoK,EAAwBI,EAAkBpZ,MAAM4O,UAAoBoK,EAAwBvI,IAEzGlD,WAAYA,EACZ9B,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,EAAO,CACR0G,QAASA,IAEb,G,oJCnGA,GAAe,EAAAmI,EAAA,IAA4B,SAAK,OAAQ,CACtDlL,EAAG,oLACD,U,4ECPG,SAAS2M,EAAoBzM,GAClC,OAAO,EAAAC,EAAA,GAAqB,UAAWD,EACzC,CAEA,OADoB,EAAAE,EAAA,GAAuB,UAAW,CAAC,OAAQ,YAAa,aAAc,aAAc,YAAa,eAAgB,iBAAkB,eAAgB,eAAgB,WAAY,YAAa,wBAAyB,0BAA2B,YAAa,wBAAyB,0BAA2B,WAAY,SAAU,kBAAmB,oBAAqB,gBAAiB,kBAAmB,SAAU,cAAe,eAAgB,qBAAsB,uBAAwB,OAAQ,YAAa,aAAc,mBAAoB,qBAAsB,QAAS,aAAc,cAAe,aAAc,kBAAmB,mBAAoB,yBAA0B,2BAA4B,iCAAkC,mCAAoC,+BAAgC,iCAAkC,iBCHp2B,MAAMC,EAAY,CAAC,SAAU,YAAa,YAAa,QAAS,YAAa,aAAc,WAAY,OAAQ,QAAS,UAAW,WAAY,YAAa,UAAW,OAAQ,UAAW,WAAY,yBAoChMuM,GAAW,EAAArM,EAAA,IAAO,MAAO,CAC7B1J,KAAM,UACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,GACE,MACJyN,EAAK,UACLiM,EAAS,UACTC,EAAS,SACT1N,EAAQ,KACRwE,EAAI,QACJmJ,GACErM,EACJ,MAAO,CAAC,CACN,CAAC,MAAM,YAAuBD,EAAOuM,QACpC,CACD,CAAC,MAAM,YAAuBvM,EAAO,UAAS,EAAAI,EAAA,GAAW+C,OACxD,CACD,CAAC,MAAM,YAAuBnD,EAAO,eAAc,EAAAI,EAAA,GAAWD,OAC7D,CACD,CAAC,MAAM,UAAqBH,EAAO4L,MAClC,CACD,CAAC,MAAM,UAAqB5L,EAAO,QAAO,EAAAI,EAAA,GAAW+C,OACpD,CACD,CAAC,MAAM,UAAqBnD,EAAO,aAAY,EAAAI,EAAA,GAAWgM,OACzD,CACD,CAAC,MAAM,gBAA2BpM,EAAOwM,YACxC,CACD,CAAC,MAAM,gBAA2BxM,EAAO,cAAa,EAAAI,EAAA,GAAW+C,OAChE,CACD,CAAC,MAAM,gBAA2BnD,EAAO,mBAAkB,EAAAI,EAAA,GAAWD,OACrE,CACD,CAAC,MAAM,gBAA2BH,EAAO,cAAa,EAAAI,EAAA,GAAWkM,WAAgB,EAAAlM,EAAA,GAAWD,OAC3FH,EAAOE,KAAMF,EAAO,QAAO,EAAAI,EAAA,GAAW+C,MAAUnD,EAAO,SAAQ,EAAAI,EAAA,GAAWD,MAAWkM,GAAarM,EAAOqM,UAAWA,GAAuB,YAAVlM,GAAuBH,EAAO,kBAAiB,EAAAI,EAAA,GAAWD,OAAYxB,GAAYqB,EAAOyM,UAAW9N,GAAsB,YAAVwB,GAAuBH,EAAO,kBAAiB,EAAAI,EAAA,GAAWD,MAAWH,EAAOsM,GAAUtM,EAAO,GAAGsM,KAAU,EAAAlM,EAAA,GAAWD,MAAU,GAnCtW,EAqCd,EACDO,QACAT,iBAEA,MAAMyM,GAAkB,QAAMhM,EAAMK,QAAQC,KAAKQ,QAAS,KACpDmL,EAAmC,UAAvBjM,EAAMK,QAAQ6L,KAAmBlM,EAAMK,QAAQ8L,KAAK,KAAOnM,EAAMK,QAAQ8L,KAAK,KAChG,OAAO,OAAS,CACdpJ,SAAU,OACVvC,WAAYR,EAAMS,WAAWD,WAC7BI,SAAUZ,EAAMS,WAAWI,QAAQ,IACnC4E,QAAS,cACTE,WAAY,SACZD,eAAgB,SAChB0G,OAAQ,GACR3M,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKQ,QAC1CO,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAO7H,SACtDiO,aAAc,GACdC,WAAY,SACZC,WAAYvM,EAAMwM,YAAYC,OAAO,CAAC,mBAAoB,eAE1D7G,OAAQ,UAERC,QAAS,EACT6G,eAAgB,OAChBC,OAAQ,EAERvJ,QAAS,EAETwJ,cAAe,SACf3M,UAAW,aACX,CAAC,KAAK,cAAyB,CAC7B2D,SAAU5D,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOE,gBAC9CC,cAAe,QAEjB,CAAC,MAAM,YAAuB,CAC5ByG,WAAY,EACZ3I,aAAc,EACdrB,MAAO,GACPuJ,OAAQ,GACR3M,MAAOO,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQyI,KAAKgE,mBAAqBb,EACjErL,SAAUZ,EAAMS,WAAWI,QAAQ,KAErC,CAAC,MAAM,wBAAmC,CACxCpB,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQS,QAAQiM,aAC7C1L,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQS,QAAQkM,MAEzD,CAAC,MAAM,0BAAqC,CAC1CvN,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQE,UAAUwM,aAC/C1L,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQE,UAAUyM,MAE3D,CAAC,MAAM,iBAA4B,CACjCH,WAAY,EACZ3I,aAAc,EACdrB,MAAO,GACPuJ,OAAQ,GACRxL,SAAUZ,EAAMS,WAAWI,QAAQ,KAErC,CAAC,MAAM,WAAqB,OAAS,CACnCgM,WAAY,EACZ3I,aAAc,GACO,UAApB3E,EAAWkD,MAAoB,CAChC7B,SAAU,GACViM,WAAY,EACZ3I,aAAc,GACb3E,EAAWmM,YAAcnM,EAAWE,QAAS,OAAS,CACvDA,MAAOO,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQyI,KAAKmE,iBAAmBhB,GACzC,YAArB1M,EAAWE,OAAuB,CACnCA,MAAO,aAET,CAAC,MAAM,iBAA2B,OAAS,CACzCqG,wBAAyB,cACzBrG,MAAOO,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQC,KAAK4M,yBAA2BlB,EAC/EpL,SAAU,GACVgF,OAAQ,UACR9C,OAAQ,eACR,UAAW,CACTrD,MAAOO,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQC,KAAK4M,yBAA0B,QAAMlB,EAAiB,MAElF,UAApBzM,EAAWkD,MAAoB,CAChC7B,SAAU,GACVsD,YAAa,EACb2I,YAAa,GACS,YAArBtN,EAAWE,OAAuB,CACnCA,MAAOO,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQd,EAAWE,OAAO0N,8BAA+B,QAAMnN,EAAMK,QAAQd,EAAWE,OAAOsN,aAAc,IACpJ,oBAAqB,CACnBtN,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsN,iBAGtC,UAApBxN,EAAWkD,MAAoB,CAChC2J,OAAQ,IACc,YAArB7M,EAAWE,OAAuB,CACnC4B,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,KACjEtB,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsN,cACtDxN,EAAWtB,UAAY,CACxB,CAAC,KAAK,kBAA6B,CACjCoD,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQ4F,OAAOmH,0BAA0BpN,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOO,kBAAmB,QAAMxG,EAAMK,QAAQ4F,OAAO7H,SAAU4B,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOO,gBAExRjH,EAAWtB,UAAiC,YAArBsB,EAAWE,OAAuB,CAC1D,CAAC,KAAK,kBAA6B,CACjC4B,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOuN,OAEnE,IACD,EACDhN,QACAT,iBACI,OAAS,CAAC,EAAGA,EAAWoM,WAAa,CACzC0B,WAAY,OACZvH,wBAAyB,cACzBF,OAAQ,UACR,UAAW,CACTvE,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQ4F,OAAOmH,0BAA0BpN,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOM,kBAAmB,QAAMvG,EAAMK,QAAQ4F,OAAO7H,SAAU4B,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOM,eAEzR,CAAC,KAAK,kBAA6B,CACjClF,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQ4F,OAAOmH,0BAA0BpN,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOO,kBAAmB,QAAMxG,EAAMK,QAAQ4F,OAAO7H,SAAU4B,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOO,eAEzR,WAAY,CACV8G,WAAYtN,EAAMI,MAAQJ,GAAOuN,QAAQ,KAE1ChO,EAAWoM,WAAkC,YAArBpM,EAAWE,OAAuB,CAC3D,CAAC,cAAc,kBAA6B,CAC1C4B,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOuN,UAEjE,EACFhN,QACAT,iBACI,OAAS,CAAC,EAA0B,aAAvBA,EAAWqM,SAA0B,CACtDvK,gBAAiB,cACjBsL,OAAQ3M,EAAMI,KAAO,aAAaJ,EAAMI,KAAKC,QAAQyI,KAAK0E,gBAAkB,aAAoC,UAAvBxN,EAAMK,QAAQ6L,KAAmBlM,EAAMK,QAAQ8L,KAAK,KAAOnM,EAAMK,QAAQ8L,KAAK,OACvK,CAAC,KAAK,qBAAgC,CACpC9K,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOC,OAExD,CAAC,KAAK,kBAA6B,CACjC7E,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOlP,OAExD,CAAC,MAAM,YAAuB,CAC5B8V,WAAY,GAEd,CAAC,MAAM,iBAA4B,CACjCA,WAAY,GAEd,CAAC,MAAM,UAAqB,CAC1BA,WAAY,GAEd,CAAC,MAAM,eAA0B,CAC/BA,WAAY,GAEd,CAAC,MAAM,gBAA2B,CAChC3I,YAAa,GAEf,CAAC,MAAM,qBAAgC,CACrCA,YAAa,IAES,aAAvB3E,EAAWqM,SAA+C,YAArBrM,EAAWE,OAAuB,CACxEA,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,KACvD4L,OAAQ,aAAa3M,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQd,EAAWE,OAAO4G,sBAAuB,QAAMrG,EAAMK,QAAQd,EAAWE,OAAOsB,KAAM,MAClJ,CAAC,KAAK,qBAAgC,CACpCM,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQd,EAAWE,OAAO4G,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOM,iBAAkB,QAAMvG,EAAMK,QAAQd,EAAWE,OAAOsB,KAAMf,EAAMK,QAAQ4F,OAAOM,eAE3M,CAAC,KAAK,kBAA6B,CACjClF,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQd,EAAWE,OAAO4G,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOO,iBAAkB,QAAMxG,EAAMK,QAAQd,EAAWE,OAAOsB,KAAMf,EAAMK,QAAQ4F,OAAOO,eAE3M,CAAC,MAAM,gBAA2B,CAChC/G,MAAOO,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQd,EAAWE,OAAO4G,sBAAuB,QAAMrG,EAAMK,QAAQd,EAAWE,OAAOsB,KAAM,IACpI,oBAAqB,CACnBtB,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,WAIvD0M,GAAY,EAAArO,EAAA,IAAO,OAAQ,CAC/B1J,KAAM,UACNqJ,KAAM,QACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,GACE,KACJyQ,GACElD,EACJ,MAAO,CAACD,EAAO9L,MAAO8L,EAAO,SAAQ,EAAAI,EAAA,GAAW+C,MAAS,GAV3C,EAYf,EACDlD,iBACI,OAAS,CACbyF,SAAU,SACVrB,aAAc,WACd3C,YAAa,GACbC,aAAc,GACdqL,WAAY,UACS,UAApB/M,EAAWkD,MAAoB,CAChCzB,YAAa,EACbC,aAAc,MAEhB,SAASyM,EAAsBC,GAC7B,MAA6B,cAAtBA,EAActS,KAA6C,WAAtBsS,EAActS,GAC5D,CAqOA,MAhO0B,cAAiB,SAAcmG,EAAS/D,GAChE,MAAMzL,GAAQ,EAAAyP,EAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,aAGJmW,OAAQ+B,EAAU,UAClBlM,EACAiK,UAAWkC,EAAa,MACxBpO,EAAQ,UACRkC,UAAWmM,EACXhC,WAAYiC,EAAc,SAC1Bhb,GAAW,EACXmY,KAAMC,EAAQ,MACd3X,EAAK,QACL0J,EAAO,SACPe,EAAQ,UACR9C,EAAS,QACT6S,EAAO,KACPvL,EAAO,SAAQ,QACfmJ,EAAU,SAAQ,SAClB9N,EAAQ,sBACRmQ,GAAwB,GACtBjc,EACJkJ,GAAQ,OAA8BlJ,EAAOkN,GACzCgP,EAAU,SAAa,MACvBC,GAAY,EAAAC,EAAA,GAAWF,EAASzQ,GAChC4Q,EAAwBrY,IAE5BA,EAAMwF,kBACFyC,GACFA,EAASjI,EACX,EA0BI2V,KAA8B,IAAlBkC,IAA2B3Q,IAAiB2Q,EACxDlM,EAAYgK,GAAa1N,EAAWqQ,EAAA,EAAaR,GAAiB,MAClEvO,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC2P,YACA5O,WACA0P,OACAhD,QACAiM,UAAwB,iBAAqBP,IAAYA,EAASnZ,MAAMyN,OAAiBA,EACzFxB,WAAYA,EACZ0N,YACAC,YAEIhK,EAtUkBrC,KACxB,MAAM,QACJqC,EAAO,SACP7O,EAAQ,KACR0P,EAAI,MACJhD,EAAK,UACLiM,EAAS,SACTzN,EAAQ,UACR0N,EAAS,QACTC,GACErM,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQoM,EAAS7Y,GAAY,WAAY,QAAO,EAAA2M,EAAA,GAAW+C,KAAS,SAAQ,EAAA/C,EAAA,GAAWD,KAAUkM,GAAa,YAAaA,GAAa,kBAAiB,EAAAjM,EAAA,GAAWD,KAAUxB,GAAY,YAAaA,GAAY,kBAAiB,EAAAyB,EAAA,GAAWD,KAAU,GAAGmM,KAAU,EAAAlM,EAAA,GAAWD,MACxRjM,MAAO,CAAC,QAAS,SAAQ,EAAAkM,EAAA,GAAW+C,MACpCoJ,OAAQ,CAAC,SAAU,UAAS,EAAAnM,EAAA,GAAW+C,KAAS,eAAc,EAAA/C,EAAA,GAAWD,MACzEyL,KAAM,CAAC,OAAQ,QAAO,EAAAxL,EAAA,GAAW+C,KAAS,aAAY,EAAA/C,EAAA,GAAWgM,MACjEI,WAAY,CAAC,aAAc,cAAa,EAAApM,EAAA,GAAW+C,KAAS,mBAAkB,EAAA/C,EAAA,GAAWD,KAAU,cAAa,EAAAC,EAAA,GAAWkM,WAAgB,EAAAlM,EAAA,GAAWD,OAExJ,OAAO,EAAAqC,EAAA,GAAeD,EAAO2J,EAAqB5J,EAAQ,EAoT1CG,CAAkBxC,GAC5BgP,EAAY5M,IAAc2M,EAAA,GAAa,OAAS,CACpD3M,UAAWmM,GAAiB,MAC5BU,sBAAuB5M,EAAQ6M,cAC9BxQ,GAAY,CACbqM,eAAe,IACZ,CAAC,EACN,IAAIwB,EAAa,KACb7N,IACF6N,EAAaiC,GAA+B,iBAAqBA,GAA+B,eAAmBA,EAAgB,CACjIrM,WAAW,OAAKqM,EAAe/b,MAAM0P,UAAWE,EAAQkK,YACxD5O,QAASmR,KACO,SAAKK,EAAY,CACjChN,WAAW,OAAKE,EAAQkK,YACxB5O,QAASmR,KAGb,IAAIxC,EAAS,KACT+B,GAA2B,iBAAqBA,KAClD/B,EAAsB,eAAmB+B,EAAY,CACnDlM,WAAW,OAAKE,EAAQiK,OAAQ+B,EAAW5b,MAAM0P,cAGrD,IAAIwJ,EAAO,KAWX,OAVIC,GAAyB,iBAAqBA,KAChDD,EAAoB,eAAmBC,EAAU,CAC/CzJ,WAAW,OAAKE,EAAQsJ,KAAMC,EAASnZ,MAAM0P,eAQ7B,UAAM+J,GAAU,OAAS,CAC3CzJ,GAAIL,EACJD,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9B3O,YAAU4Y,IAAa5Y,SAAkByK,EACzCN,QAASA,EACT/B,UA3EoBnF,IAEhBA,EAAM+F,gBAAkB/F,EAAM4F,QAAU8R,EAAsB1X,IAGhEA,EAAMuF,iBAEJJ,GACFA,EAAUnF,EACZ,EAmEAgY,QAjEkBhY,IAEdA,EAAM+F,gBAAkB/F,EAAM4F,SAC5BqC,GAAYyP,EAAsB1X,GACpCiI,EAASjI,GACc,WAAdA,EAAMqF,KAAoB6S,EAAQxc,SAC3Cwc,EAAQxc,QAAQkJ,QAGhBoT,GACFA,EAAQhY,EACV,EAuDAyH,IAAK0Q,EACLrQ,SAAUmQ,GAAyBlb,GAAY,EAAI+K,EACnDyB,WAAYA,GACXgP,EAAWrT,EAAO,CACnB6N,SAAU,CAAC8C,GAAUX,GAAmB,SAAKuC,EAAW,CACtD/L,WAAW,OAAKE,EAAQpO,OACxB+L,WAAYA,EACZwJ,SAAUvV,IACRsY,KAER,G,sLCzYA,MAAM5M,EAAY,CAAC,aAAc,YAAa,YAAa,WAAY,QAAS,iBAAkB,UAAW,wBAAyB,WAAY,aAoC5IyP,GAAqB,QAAO,IAAY,CAC5CxE,kBAAmBC,IAAQ,QAAsBA,IAAkB,YAATA,EAC1D1U,KAAM,oBACNqJ,KAAM,OACNM,kBA1B+B,CAACrN,EAAOsN,KACvC,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAAMD,EAAWqP,OAAStP,EAAOsP,MAAiC,eAA1BrP,EAAWoG,YAA+BrG,EAAOuP,oBAAqBtP,EAAWuP,SAAWxP,EAAOwP,SAAUvP,EAAWI,gBAAkBL,EAAOM,QAAQ,GAkBvL,EAKxB,EACDI,QACAT,iBACI,OAAS,CACbkG,QAAS,OACT/B,SAAU,EACVgC,eAAgB,aAChBC,WAAY,SACZzE,SAAU,WACVwL,eAAgB,OAChBzJ,SAAU,EACVhD,UAAW,aACX8O,UAAW,OACXvL,WAAY,EACZL,cAAe,EACfoJ,WAAYvM,EAAMwM,YAAYC,OAAO,mBAAoB,CACvDuC,SAAUhP,EAAMwM,YAAYwC,SAASC,WAEvC,UAAW,CACTvC,eAAgB,OAChBrL,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOC,MAEtD,uBAAwB,CACtB7E,gBAAiB,gBAGrB,CAAC,KAAK,gBAAmC,CACvCA,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,oBAAqB,QAAMtG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,iBACxL,CAAC,KAAK,oBAAuC,CAC3CjF,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,sBAAsBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOO,kBAAmB,QAAMxG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOO,gBAGrR,CAAC,KAAK,sBAAyC,CAC7CnF,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,sBAAsBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,qBAAqBtG,EAAMI,KAAKC,QAAQ4F,OAAOM,kBAAmB,QAAMvG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOM,cAEjR,uBAAwB,CACtBlF,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQS,QAAQuF,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOK,oBAAqB,QAAMtG,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,mBAG5L,CAAC,KAAK,oBAAuC,CAC3CjF,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOlP,OAExD,CAAC,KAAK,gBAAmC,CACvC6M,SAAU5D,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOE,kBAE/C5G,EAAWuP,SAAW,CACvBI,aAAc,cAAclP,EAAMI,MAAQJ,GAAOK,QAAQyO,UACzDK,eAAgB,eACW,eAA1B5P,EAAWoG,YAA+B,CAC3CA,WAAY,eACVpG,EAAWI,gBAAkB,CAC/BqB,YAAa,GACbC,aAAc,IACb1B,EAAWqP,OAAS,CACrBpL,WAAY,EACZL,cAAe,MAEXiM,EAA8B,cAAiB,SAAwB5N,EAAS/D,GACpF,MAAMzL,GAAQ,OAAc,CAC1BA,MAAOwP,EACP9L,KAAM,uBAEF,WACFiQ,EAAa,SAAQ,UACrB0J,GAAY,EAAK,UACjB1N,EAAY,MAAK,SACjBoH,EAAQ,MACR6F,GAAQ,EAAK,eACbjP,GAAiB,EAAK,QACtBmP,GAAU,EAAK,sBACfN,EAAqB,SACrBpQ,GAAW,EAAK,UAChBsD,GACE1P,EACJkJ,GAAQ,OAA8BlJ,EAAOkN,GACzCoQ,EAAU,aAAiB,KAC3BC,EAAe,WAAc,KAAM,CACvCX,MAAOA,GAASU,EAAQV,QAAS,EACjCjJ,aACAhG,oBACE,CAACgG,EAAY2J,EAAQV,MAAOA,EAAOjP,IACjC6P,EAAc,SAAa,OACjC,QAAkB,KACZH,GACEG,EAAY9d,SACd8d,EAAY9d,QAAQqF,OAIxB,GACC,CAACsY,IACJ,MAAM9P,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC2T,aACAiJ,MAAOW,EAAaX,MACpBjP,iBACAmP,UACA1Q,aAEIwD,EAvHkBrC,KACxB,MAAM,WACJoG,EAAU,QACV/D,EAAO,MACPgN,EAAK,SACL7b,EAAQ,eACR4M,EAAc,QACdmP,EAAO,SACP1Q,GACEmB,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQoP,GAAS,SAAUjP,GAAkB,UAAWmP,GAAW,UAAW/b,GAAY,WAA2B,eAAf4S,GAA+B,sBAAuBvH,GAAY,aAE3KkN,GAAkB,OAAezJ,EAAO,IAA+BD,GAC7E,OAAO,OAAS,CAAC,EAAGA,EAAS0J,EAAgB,EAyG7BvJ,CAAkBxC,GAC5B4O,GAAY,OAAWqB,EAAa/R,GAC1C,OAAoB,SAAK,aAAsB,CAC7CzJ,MAAOub,EACPxG,UAAuB,SAAK4F,GAAoB,OAAS,CACvDlR,IAAK0Q,EACLsB,KAAMvU,EAAMuU,MAAQvU,EAAMwU,GAC1B/N,WAAYzG,EAAMuU,MAAQvU,EAAMwU,KAAqB,QAAd/N,EAAsB,IAAMA,EACnE6M,uBAAuB,OAAK5M,EAAQ6M,aAAcD,GAClDjP,WAAYA,EACZmC,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,EAAO,CACR0G,QAASA,EACTmH,SAAUA,MAGhB,IA+EA,K,+LC1OO,SAAS4G,EAA0B5Q,GACxC,OAAO,EAAAC,EAAA,GAAqB,oBAAqBD,EACnD,EAC0B,EAAAE,EAAA,GAAuB,oBAAqB,CAAC,OAAQ,UAAW,WAAY,QAAS,YAAa,YAC5H,I,WCJA,MAAMC,EAAY,CAAC,YAAa,UAAW,cAAe,YAAa,iBAAkB,WAAY,qBAAsB,OAAQ,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,SA2B1P0Q,GAAiB,EAAAxQ,EAAA,IAAOkP,EAAA,EAAP,EAAmB,EACxC/O,iBACI,OAAS,CACb6D,QAAS,EACTiJ,aAAc,OACO,UAApB9M,EAAWsQ,MAAoB,CAChChD,WAAgC,UAApBtN,EAAWkD,MAAoB,GAAK,IAC3B,QAApBlD,EAAWsQ,MAAkB,CAC9B3L,YAAiC,UAApB3E,EAAWkD,MAAoB,GAAK,OAE7CqN,GAAkB,EAAA1Q,EAAA,IAAO,QAAP,CAAgB,CACtCwG,OAAQ,UACR1E,SAAU,WACV0C,QAAS,EACTf,MAAO,OACPuJ,OAAQ,OACRjL,IAAK,EACL4O,KAAM,EACNjN,OAAQ,EACRM,QAAS,EACThC,OAAQ,IA4NV,MAtNgC,cAAiB,SAAoBpP,EAAOyL,GAC1E,MAAM,UACF4R,EACAW,QAASC,EAAW,YACpBhF,EAAW,UACXvJ,EAAS,eACTwO,EACAnd,SAAUC,EAAY,mBACtBmd,GAAqB,EAAK,KAC1BN,GAAO,EAAK,KACZ3E,EAAI,GACJvX,EAAE,WACF+V,EAAU,SACV1U,EAAQ,KACRU,EAAI,OACJ4H,EAAM,SACNrJ,EAAQ,QACRsJ,EAAO,SACP9I,EAAQ,SACR2b,GAAW,EAAK,SAChBtS,EAAQ,KACRyN,EAAI,MACJvX,GACEhC,EACJkJ,GAAQ,OAA8BlJ,EAAOkN,IACxC8Q,EAASK,IAAmB,EAAAC,EAAA,GAAc,CAC/C9a,WAAYya,EACZxa,QAAS8a,QAAQL,GACjBxa,KAAM,aACNE,MAAO,YAEH4a,GAAiB,EAAAC,EAAA,KA6BvB,IAAI1d,EAAWC,EACXwd,QACsB,IAAbzd,IACTA,EAAWyd,EAAezd,UAG9B,MAAM2d,EAAuB,aAATnF,GAAgC,UAATA,EACrChM,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCge,UACAjd,WACAod,qBACAN,SAEIjO,EAhHkBrC,KACxB,MAAM,QACJqC,EAAO,QACPoO,EAAO,SACPjd,EAAQ,KACR8c,GACEtQ,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQwQ,GAAW,UAAWjd,GAAY,WAAY8c,GAAQ,QAAO,EAAAnQ,EAAA,GAAWmQ,MACvFrf,MAAO,CAAC,UAEV,OAAO,EAAAsR,EAAA,GAAeD,EAAO8N,EAA2B/N,EAAQ,EAqGhDG,CAAkBxC,GAClC,OAAoB,UAAMqQ,GAAgB,OAAS,CACjDjO,UAAW,OACXD,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9BiP,cAAc,EACdC,aAAcT,EACdpd,SAAUA,EACV+K,SAAU,KACVF,UAAMJ,EACND,QAlDkBvH,IACduH,GACFA,EAAQvH,GAENwa,GAAkBA,EAAejT,SACnCiT,EAAejT,QAAQvH,EACzB,EA6CAsH,OA3CiBtH,IACbsH,GACFA,EAAOtH,GAELwa,GAAkBA,EAAelT,QACnCkT,EAAelT,OAAOtH,EACxB,EAsCAuJ,WAAYA,EACZ9B,IAAKA,GACJvC,EAAO,CACR6N,SAAU,EAAc,SAAK+G,GAAiB,OAAS,CACrDT,UAAWA,EACXW,QAASC,EACTC,eAAgBA,EAChBxO,UAAWE,EAAQpR,MACnBuC,SAAUA,EACVY,GAAI+c,GAAe/c,EACnB+B,KAAMA,EACNzB,SA/CsB+B,IAExB,GAAIA,EAAM6a,YAAYC,iBACpB,OAEF,MAAMC,EAAa/a,EAAM4F,OAAOoU,QAChCK,EAAgBU,GACZ9c,GAEFA,EAAS+B,EAAO+a,EAClB,EAsCEtc,SAAUA,EACVgJ,IAAKzI,EACLob,SAAUA,EACV7Q,WAAYA,EACZzB,SAAUA,EACVyN,KAAMA,GACI,aAATA,QAAiC/N,IAAVxJ,EAAsB,CAAC,EAAI,CACnDA,SACC0V,IAAcsG,EAAU/E,EAAcC,KAE7C,G,2DC1JA,KAAe,QAA4B,SAAK,OAAQ,CACtDrM,EAAG,uDACD,oB,2DCFJ,KAAe,QAA4B,SAAK,OAAQ,CACtDA,EAAG,qDACD,qB,wNCNG,MAAMmS,GAAiB,EAAA5R,EAAA,IAAO,MAAO,CAC1C1J,KAAM,cACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,IAAW,CAAC,CACrC,CAAC,KAAK,kBAA2BA,EAAO2R,YACvC,CACD,CAAC,KAAK,+BAAwC3R,EAAO4R,yBACpD,CACD,CAAC,KAAK,6CAAsD5R,EAAO,uCAClE,CACD,CAAC,KAAK,+CAAwDA,EAAO,yCACpE,CACD,CAAC,KAAK,8CAAuDA,EAAO,wCACnE,CACD,CAAC,KAAK,oCAA6CA,EAAO6R,8BACzD,CACD,CAAC,MAAM,uBAAgC7R,EAAO8R,iBAC7C,CACD,CAAC,MAAM,wBAAiC9R,EAAO,kBAC9C,CACD,CAAC,MAAM,2BAAoCA,EAAO,qBACjD,CACD,CAAC,MAAM,yBAAkCA,EAAO,mBAC/C,CACD,CAAC,MAAM,0BAAmCA,EAAO,oBAEnD,CACE,CAAC,MAAM,6BAAsCA,EAAO,uBACnD,CACD,CAAC,MAAM,YAAqBA,EAAO+R,MAClC,CACD,CAAC,MAAM,mBAA4B/R,EAAOgS,aACzC,CACD,CAAC,MAAM,oBAA6BhS,EAAOiS,cAC1C,CACD,CAAC,MAAM,oBAA6BjS,EAAOkS,cAC1C,CACD,CAAC,MAAM,qBAA8BlS,EAAOmS,eAC3C,CACD,CAAC,MAAM,oCAA6CnS,EAAO,8BAC1D,CACD,CAAC,MAAM,kCAA2CA,EAAO,4BACxD,CACD,CAAC,MAAM,mCAA4CA,EAAO,6BACzD,CACD,CAAC,MAAM,iCAA0CA,EAAO,2BACvD,CACD,CAAC,MAAM,+BAAwCA,EAAO,yBACrD,CACD,CAAC,MAAM,gCAAyCA,EAAO,0BACtD,CACD,CAAC,MAAM,iCAA0CA,EAAO,2BACvD,CACD,CAAC,MAAM,+BAAwCA,EAAO,yBACrD,CACD,CAAC,MAAM,oBAA6BA,EAAOoS,cAC1C,CACD,CAAC,MAAM,4BAAqCpS,EAAOqS,sBAClD,CACD,CAAC,MAAM,sCAA+CrS,EAAOsS,gCAC5D,CACD,CAAC,MAAM,kCAA2CtS,EAAOuS,4BACxD,CACD,CAAC,MAAM,qCAA8CvS,EAAO,+BAC3D,CACD,CAAC,MAAM,oCAA6CA,EAAO,8BAC1D,CACD,CAAC,MAAM,uBAAgCA,EAAOwS,iBAC7C,CACD,CAAC,MAAM,kBAA2BxS,EAAOyS,YACxC,CACD,CAAC,MAAM,qBAA8BzS,EAAO0S,eAC3C,CACD,CAAC,MAAM,gBAAyB1S,EAAO2S,UACtC,CACD,CAAC,MAAM,sBAA+B3S,EAAO4S,gBAC5C,CACD,CAAC,MAAM,gBAAyB5S,EAAO6S,UACtC,CACD,CAAC,MAAM,gBAAyB7S,EAAO8S,UACtC,CACD,CAAC,MAAM,wBAAiC9S,EAAO,kBAC9C,CACD,CAAC,MAAM,uBAAgCA,EAAO,iBAC7C,CACD,CAAC,MAAM,wBAAiCA,EAAO,kBAC9C,CACD,CAAC,MAAM,WAAoBA,EAAO+S,KACjC,CACD,CAAC,MAAM,iCAA0C/S,EAAOgT,2BACvD,CACD,CAAC,MAAM,sBAA+BhT,EAAOiT,gBAC5C,CACD,CAAC,MAAM,oCAA6CjT,EAAO,8BAC1D,CACD,CAAC,MAAM,gBAAyBA,EAAOkT,UACtC,CACD,CAAC,MAAM,kBAA2BlT,EAAOmT,YACxC,CACD,CAAC,MAAM,4BAAqCnT,EAAOoT,sBAClD,CACD,CAAC,MAAM,kCAA2CpT,EAAOqT,4BACxD,CACD,CAAC,MAAM,6BAAsCrT,EAAOsT,uBACnD,CACD,CAAC,MAAM,0CAAmDtT,EAAO,oCAChEA,EAAOE,OA1GkB,EA2G3B,EACDQ,YAEA,MAAM6S,EAAqC,UAAvB7S,EAAMK,QAAQ6L,MAAmB,SAAQ,QAAMlM,EAAMK,QAAQyO,QAAS,GAAI,MAAQ,SAAO,QAAM9O,EAAMK,QAAQyO,QAAS,GAAI,KAkT9I,OAhTkB,OAAS,CACzBgE,KAAM,EACN7S,UAAW,aACXiB,SAAU,WACVyL,OAAQ,aAAakG,IACrBxG,aAAcrM,EAAM+S,MAAM1G,aAC1B5M,MAAOO,EAAMK,QAAQC,KAAKQ,SACzBd,EAAMS,WAAWuS,MAAO,CACzBnN,QAAS,OACTuG,OAAQ,OACR3G,QAAS,OACTwN,cAAe,SACf,CAAC,KAAK,kBAA2B,CAC/B7G,OAAQ,OACR,CAAC,MAAM,4BAAoC,YAAqB,CAC9D8G,kBAAmB,gBAGvB,CAAC,MAAM,8CAAsD,4BAAoC,YAAqB,CACpHA,kBAAmB,eAErB,CAAC,MAAM,wBAAgC,YAAqB,CAC1DpN,wBAAyB,cACzB5F,WAAY,KACZkD,QAAS,SACTnD,UAAW,cAEb,CAAC,MAAM,qCAA6C,yBAAkC,CACpF4F,QAAS,UAAS,QAAM7F,EAAMK,QAAQS,QAAQC,KAAM,UACpDoS,aAAc,EACdC,eAAgB,GAElB,CAAC,MAAM,8BAAsC,kBAA2B,CACtEvN,QAAS,SAAS7F,EAAMK,QAAQS,QAAQC,YAE1C,CAAC,MAAM,gCAAwC,oBAA6B,CAC1EqC,QAAS,EACTsC,eAAgB,SAChBC,WAAY,UAEd,CAAC,MAAM,oBAA6B,CAClCzE,SAAU,WACVuE,QAAS,OACTE,WAAY,UAEd,CAAC,MAAM,gCAAwC,+BAAuC,kCAA0C,2BAAoC,CAClK/C,WAAY,UACZC,MAAO,QAET,CAAC,MAAM,yBAAiC,iCAAyC,gBAAyB,CACxGe,QAAS,EACT2I,WAAYvM,EAAMwM,YAAYC,OAAO,CAAC,WAAY,CAChDuC,SAAUhP,EAAMwM,YAAYwC,SAASqE,WAGzC,CAAC,MAAM,yBAAiC,uCAA+C,gBAAyB,CAC9GzP,QAAS,IAEX,CAAC,MAAM,kCAA2C,CAChD6B,QAAS,OACTE,WAAY,SACZ1C,SAAU,EACV6P,KAAM,EACNxG,WAAY,SACZtH,SAAU,UAEZ,CAAC,MAAM,yCAAkD,CACvDA,SAAU,SACVS,QAAS,OACTE,WAAY,UAEd,CAAC,MAAM,qCAA6C,kCAA2C,CAC7FuJ,aAAc,SAAS2D,QACvB5S,UAAW,cAEb,CAAC,MAAM,oCAA4C,0CAAkD,kCAA2C,CAC9IiP,aAAc,QAEhB,CAAC,MAAM,oCAA4C,yCAAkD,CACnGA,aAAc,SAAS2D,QACvB5S,UAAW,cAEb,CAAC,MAAM,oBAA4B,kBAA2B,CAC5DW,SAAU,WAEZ,CAAC,MAAM,iCAA0C,CAC/CgF,OAAQ,WAEV,CAAC,MAAM,qCAA6C,kCAA2C,CAC7FF,eAAgB,UAElB,CAAC,MAAM,oCAA4C,0CAAkD,oCAA4C,kCAA2C,CAC1LuN,cAAe,eAEjB,CAAC,MAAM,qCAA6C,oBAA4B,oCAA4C,gBAAyB,CACnJ/O,YAAa,OACb2I,YAAa,GAEf,CAAC,MAAM,oCAA4C,oBAA4B,oCAA4C,gBAAyB,CAClJ3I,YAAa,OACb2I,YAAa,IAEf,CAAC,MAAM,+BAAwC,CAC7CxL,gBAAiBrB,EAAMK,QAAQ4F,OAAOC,OAExC,CAAC,MAAM,uBAAgC,CACrChF,SAAU,WACVE,OAAQ,IACRqE,QAAS,OACTwN,cAAe,SACfvN,eAAgB,SAChBjG,MAAOoT,GAET,CAAC,MAAM,oCAA6C,CAClD9C,MAAO,IAET,CAAC,MAAM,qCAA8C,CACnDxM,OAAQ,IAEV,CAAC,MAAM,qCAA8C,CACnDqC,OAAQ,aACR0N,YAAa,OACb,UAAW,CACT7T,MAAOO,EAAMK,QAAQC,KAAKQ,QAE1B,uBAAwB,CACtBrB,MAAOoT,IAGX,CAAC,KAAK,oCAA6C,CACjDpT,MAAOO,EAAMK,QAAQC,KAAKQ,SAE5B,QAAS,CACPsF,cAAe,SAGnB,CAAC,MAAM,qBAA8B,CACnC3G,MAAO,WAET,CAAC,MAAM,gBAAyB,CAC9BoD,MAAO,EACPD,WAAY,SACZhC,SAAU,GACVsD,aAAc,GACduB,QAAS,OACTE,WAAY,UAEd,CAAC,MAAM,0BAAmC,CACxC,CAAC,MAAM,2BAAoC,CACzC/C,WAAY,UACZC,MAAO,QAET,CAAC,MAAM,gBAAyB,CAC9BA,MAAO,OACPD,WAAY,YAGhB,CAAC,IAAI,gBAAyB,CAC5BA,WAAY,UACZC,MAAO,QAET,CAAC,MAAM,WAAoB,CACzB4C,QAAS,OACT5C,MAAO,cACP0Q,YAAa,QAEb,yBAA0B,CACxBlS,gBAAiBrB,EAAMK,QAAQ4F,OAAOC,MAEtC,uBAAwB,CACtB7E,gBAAiB,gBAGrB,iBAAkB,CAChBA,iBAAiB,QAAMrB,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,iBACxE,yBAA0B,CACxBjF,iBAAiB,QAAMrB,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,gBAAkBtG,EAAMK,QAAQ4F,OAAOM,cAE/G,uBAAwB,CACtBlF,iBAAiB,QAAMrB,EAAMK,QAAQS,QAAQC,KAAMf,EAAMK,QAAQ4F,OAAOK,qBAKhF,CAAC,MAAM,YAAqB,CAC1Bb,QAAS,OACTE,WAAY,SACZuJ,aAAc,aAAa2D,KAE7B,CAAC,MAAM,gBAAwB,iCAAyC,YAAqB,CAC3F7N,SAAU,SACVsH,WAAY,UAEd,CAAC,MAAM,mBAA4B,CACjCtH,SAAU,SACVrB,aAAc,YAEhB,CAAC,MAAM,YAAoB,wBAAiC,CAC1DP,QAAS,EACTqC,QAAS,OACT6H,UAAWtN,EAAMuN,QAAQ,GACzBlM,gBAAiBrB,EAAMK,QAAQiB,WAAWC,MAC1C,iBAAkB,CAChBsE,QAAS,SAAS7F,EAAMK,QAAQS,QAAQC,WACxCqS,cAAe,SAGnB,CAAC,MAAM,uBAAgC,CACrC9F,UAAWtN,EAAMuN,QAAQ,IAE3B,CAAC,MAAM,wBAAgC,YAAqB,CAC1DD,UAAWtN,EAAMuN,QAAQ,GACzBlM,gBAAiBrB,EAAMK,QAAQiB,WAAWC,OAE5C,CAAC,MAAM,uBAAgC,CACrCkE,QAAS,OACT2G,OAAQ,OACRvJ,MAAO,OACP8C,WAAY,SACZD,eAAgB,UAElB,CAAC,MAAM,sCAA+C,CACpDjG,MAAOO,EAAMK,QAAQC,KAAKC,WAE5B,CAAC,MAAM,uCAAgD,CACrDd,MAAOO,EAAMK,QAAQC,KAAKvN,UAE5B,CAAC,MAAM,mBAA4B,CACjC0S,QAAS,cACTE,WAAY,SACZ6N,QAASxT,EAAMyT,QAAQ,IAEzB,CAAC,MAAM,sBAA+B,CACpChO,QAAS,cACTqN,KAAM,EACNnN,WAAY,SACZD,eAAgB,SAChB9B,QAAS5D,EAAMK,QAAQ4F,OAAOE,iBAEhC,CAAC,MAAM,oCAA6C,CAClDP,OAAQ,OACRhC,QAAS,GAEX,CAAC,MAAM,+BAAwC,CAC7CR,QAAS,EACTuC,WAAY,WAEd,CAAC,MAAM,kBAA2B,CAChC+N,YAAa,aAAab,KAE5B,CAAC,MAAM,yBAAkC,CACvCnN,eAAgB,cAElB,CAAC,MAAM,0BAAmC,CACxCA,eAAgB,YAElB,CAAC,MAAM,2BAAoC,CACzCA,eAAgB,UAElB,CAAC,MAAM,sCAA+C,CACpDD,QAAS,OACT5C,MAAO,OACPuJ,OAAQ,QAEV,CAAC,MAAM,iCAA0C,CAC/C3G,QAAS,QAEX,CAAC,MAAM,qCAA6C,wBAAiC,CACnFnE,WAAYtB,EAAMK,QAAQiB,WAAWC,MACrC6B,QAAS,SACTiJ,aAAcrM,EAAM+S,MAAM1G,aAC1BzI,QAAS5D,EAAMK,QAAQ4F,OAAOE,iBAEhC,CAAC,MAAM,wBAAiC,CACtC7E,WAAYtB,EAAMK,QAAQiB,WAAWC,MACrC6B,QAAS,SACTiJ,aAAcrM,EAAM+S,MAAM1G,aAC1BzI,QAAS5D,EAAMK,QAAQ4F,OAAOE,gBAC9B,CAAC,MAAM,iCAA0C,CAC/CV,QAAS,SAGb,CAAC,MAAM,4BAAqC,CAC1CA,QAAS,OACTE,WAAY,SACZ9C,MAAO,QAET,CAAC,MAAM,kCAA2C,CAChDiQ,KAAM,WACNa,UAAW,UACXzP,YAAalE,EAAMyT,QAAQ,IAE7B,CAAC,MAAM,4BAAqC,CAC1ChO,QAAS,OACTE,WAAY,SACZ9C,MAAO,QAET,CAAC,MAAM,kCAA2C,CAChDiQ,KAAM,WACNa,UAAW,UACXzP,YAAalE,EAAMyT,QAAQ,KAIf,I,2DClaX,MAAMG,EAAsBhe,GAASA,EAAMie,QACrCC,GAA2B,EAAAC,EAAA,GAAeH,GAAqBC,GAAWA,EAAQ7f,QAClFggB,GAA+B,EAAAD,EAAA,GAAeH,GAAqBC,GAAWA,EAAQI,YACtFC,GAAkC,EAAAH,EAAA,GAAeH,GAAqBC,GAAWA,EAAQM,eACzFC,GAA4C,EAAAL,EAAA,GAAeH,GAAqBC,GAAWA,EAAQQ,yBACnGC,GAA4B,EAAAP,EAAA,GAAeH,GAAqBC,GAAWA,EAAQU,SACnFC,GAAuC,EAAAT,EAAA,GAAeH,GAAqBC,GAAWA,EAAQM,cAAgB,EAAIN,EAAQQ,0B,0BCLvI,MAAMnV,EAAY,CAAC,WAAY,aA4BzBuV,EAAwB,cAAiB,SAAkBziB,EAAOyL,GACtE,MAAMiX,GAAY,EAAAC,EAAA,MAEZ,SACJ5L,EAAQ,UACRrH,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAOkN,GAE7C0V,GAAS,SACTC,GAAiB,EAAAC,EAAA,GAAgBF,EAAQ,MACzCG,GAAgB,EAAAD,EAAA,GAAgBF,EAAQ,MACxCI,GAAe,EAAAF,EAAA,GAAgBF,EAAQd,GACvCO,GAAyB,EAAAS,EAAA,GAAgBF,EAAQR,GACjDa,EAAmB,SAAa,MAChC9G,GAAY,EAAAC,EAAA,GAAW6G,EAAkBxX,GACzCyX,GAAkB,EAAAJ,EAAA,GAAgBF,EAAQ,MAM1ChT,EAlCkBrC,KACxB,MAAM,WACJ0R,EAAU,QACV4C,EAAO,QACPjS,GACErC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQyR,GAAc,aAAc,iBAAgB,EAAAvR,EAAA,GAAWmU,OAExE,OAAO,EAAA/R,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAyB9CG,CALG,CACjB8R,QAASmB,EACTpT,QAAS8S,EAAU9S,QACnBqP,WAAYyD,EAAUzD,aAGxB2D,EAAOljB,QAAQyjB,eAAiBF,EAEhC,MAAOG,EAAcC,GAAmB,YAAe,GAUvD,OATA,EAAAC,EAAA,IAAkB,KAChBD,GAAgB,EAAK,GACpB,KACH,EAAAC,EAAA,IAAkB,KACZF,GACFR,EAAOljB,QAAQ6jB,kCACjB,GACC,CAACX,EAAQQ,IAEPA,GAIe,SAAKpE,GAAgB,OAAS,CAChDvT,IAAK0Q,EACLzM,WAAW,OAAKA,EAAWE,EAAQpC,MACnC5B,KAAM,OACN,gBAAiBiX,EAAezjB,OAChC,gBAAiBijB,EAAyB,EAAIa,EAAkBH,EAChE,wBAAyBL,EAAUc,yBACnC,aAAcd,EAAU,cACxB,kBAAmBA,EAAU,oBAC5BxZ,EAAO,CACR6N,SAAUA,KAbH,IAeX,IChFO,SAAS0M,EAAcb,EAAQlf,GACpC,MAAMggB,EAAS,SAAa,MAE5B,GAAIA,EAAOhkB,QACT,OAAOgkB,EAAOhkB,QAGhB,MAAMikB,EAAYf,EAAOljB,QAAQkkB,UAAUlgB,GAE3C,OADAggB,EAAOhkB,QAAUikB,EACVA,CACT,CCJA,MAAM,EAAoBpW,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,SAEoB,IAAyBoC,EAAQ,EAG1DiU,GAAwB,EAAAzW,EAAA,IAAO,MAAO,CAC1C1J,KAAM,cACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOyB,MAHjB,EAI3B,KAAM,CACPG,SAAU,WACVwC,SAAU,EACV+B,QAAS,OACTwN,cAAe,SACfjO,SAAU,aAEL,SAAS8Q,EAAkB9jB,GAChC,MACMuN,EAAa,CACjBqC,SAFgB,EAAA+S,EAAA,KAEG/S,SAEfA,EAAU,EAAkBrC,GAClC,OAAoB,SAAKsW,EAAuB,CAC9CnU,UAAWE,EAAQpC,KACnBuJ,SAAU/W,EAAM+W,UAEpB,CCrCO,MAAMgN,UAAsB,YACjCC,gCAAgCC,GAE9B,MAAO,CACLC,UAAU,EACVD,QAEJ,CAEAE,kBAAkBF,EAAOG,GACnBC,KAAKrkB,MAAMskB,IAAI5kB,UACjB2kB,KAAKE,SAASN,GAEdI,KAAKrkB,MAAMskB,IAAI5kB,QAAQ8kB,UAAU,CAC/BP,QACAG,cAGN,CAEAG,SAASN,EAAOG,GACdC,KAAKrkB,MAAM0jB,OAAOO,MAAM,wCAAwCA,GAASA,EAAMQ,YAAaR,EAAOG,EACrG,CAEAM,SACE,IAAIC,EAEJ,OAAIN,KAAKrkB,MAAMkkB,UAA0C,OAA7BS,EAAcN,KAAKzgB,QAAkB+gB,EAAYT,SAEpEG,KAAKrkB,MAAM0kB,OAAOL,KAAKzgB,OAGzBygB,KAAKrkB,MAAM+W,QACpB,ECxBF,SAAS6N,EAAiB5kB,GACxB,MAAM,SACJ+W,GACE/W,EACE4iB,GAAS,SACTc,EAASD,EAAcb,EAAQ,oBAC/BF,GAAY,EAAAC,EAAA,KACZkC,EAAajC,EAAOljB,QAAQkE,MAAMqgB,MACxC,OAAoB,SAAKF,EAAe,CACtCG,SAAwB,MAAdW,EACVP,IAAK1B,EACLc,OAAQA,EACRgB,OAAQI,IACN,IAAIC,EAEJ,OAAoB,SAAKjB,EAAmB,CAC1C/M,UAAuB,SAAK2L,EAAUsC,WAAWC,cAAc,OAAS,CAAC,EAAGH,EAAYD,EAAmE,OAAtDE,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBG,gBACjM,EAEJnO,SAAUA,GAEd,CC1BO,SAASoO,IACd,IAAIJ,EAEJ,MAAMnC,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZyC,EAAY,SAAa,MAE/B,OADAxC,EAAOljB,QAAQ0lB,UAAYA,GACP,SAAK,MAAO,CAC9B3Z,IAAK2Z,EACLrO,UAAuB,SAAK2L,EAAUsC,WAAWK,QAAQ,OAAS,CAAC,EAA0D,OAAtDN,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBO,UAEvK,C,wBCFe,SAASC,EAA0BC,EAAOC,GACvD,IAAIC,EAAgB,SAAuB5f,GACzC,IAAI6f,EAAW7f,EAAQ8f,mBACnBC,EAASF,EAASG,kBAClBC,EAAWJ,EAASK,iBACpBC,EAAcJ,EAAOC,kBACzBC,EAASG,WAAaH,EAASI,YAC/BJ,EAASrgB,UAAYqgB,EAASngB,aAC9BqgB,EAAYtO,MAAM9G,MAAQgV,EAAOO,YAAc,EAAI,KACnDH,EAAYtO,MAAMyC,OAASyL,EAAO3f,aAAe,EAAI,KACrD2f,EAAOK,WAAaL,EAAOM,YAC3BN,EAAOngB,UAAYmgB,EAAOjgB,YAC5B,EAMIygB,EAAiB,SAAwBC,GAE3C,KAAIA,EAAE1c,OAAO8F,UAAU5Q,QAAQ,oBAAsB,GAAKwnB,EAAE1c,OAAO8F,UAAU5Q,QAAQ,kBAAoB,GAAzG,CAIA,IAAIgH,EAAUue,KACdqB,EAAcrB,MAEVA,KAAKkC,eACPd,EAAWe,qBAAqBnC,KAAKkC,eAGvClC,KAAKkC,cAAgBd,EAAWgB,uBAAsB,YAjBpC,SAAuB3gB,GACzC,OAAOA,EAAQsgB,aAAetgB,EAAQ4gB,eAAe7V,OAAS/K,EAAQI,cAAgBJ,EAAQ4gB,eAAetM,MAC/G,EAgBQuM,CAAc7gB,KAChBA,EAAQ4gB,eAAe7V,MAAQ/K,EAAQsgB,YACvCtgB,EAAQ4gB,eAAetM,OAAStU,EAAQI,aAExCJ,EAAQ8gB,oBAAoBC,SAAQ,SAAUC,GAC5CA,EAAGC,KAAKjhB,EAASwgB,EACnB,IAEJ,GAlBA,CAmBF,EAIIU,GAAY,EACZC,EAAiB,GACjBC,EAAsB,iBACtBC,EAAc,kBAAkBC,MAAM,KACtCC,EAAc,uEAAuED,MAAM,KAGzFE,EAAMznB,SAAS0nB,cAAc,eAMjC,QAJgC/b,IAA5B8b,EAAI3P,MAAM6P,gBACZR,GAAY,IAGI,IAAdA,EACF,IAAK,IAAI7nB,EAAI,EAAGA,EAAIgoB,EAAY/nB,OAAQD,IACtC,QAAoDqM,IAAhD8b,EAAI3P,MAAMwP,EAAYhoB,GAAK,iBAAgC,CAE7D8nB,EAAiB,IADXE,EAAYhoB,GACSV,cAAgB,IAC3CyoB,EAAsBG,EAAYloB,GAClC6nB,GAAY,EACZ,KACF,CAIN,IAAIQ,EAAgB,aAChBC,EAAqB,IAAMR,EAAiB,aAAeO,EAAgB,gDAC3EE,EAAiBT,EAAiB,kBAAoBO,EAAgB,KA6E1E,MAAO,CACLG,kBArDsB,SAA2B7hB,EAASghB,GAC1D,IAAKhhB,EAAQ8f,mBAAoB,CAC/B,IAAIgC,EAAM9hB,EAAQ+hB,cACdC,EAAerC,EAAWsC,iBAAiBjiB,GAE3CgiB,GAAyC,UAAzBA,EAAa5Y,WAC/BpJ,EAAQ6R,MAAMzI,SAAW,YA7BZ,SAAsB0Y,EAAKpa,GAC5C,IAAKA,EAAKwa,eAAe,0BAA2B,CAElD,IAAIC,GAAOR,GAA0C,IAAM,0BAA4BC,GAAkC,IAA/G,sWACNQ,EAAsC,eAA1B1a,EAAK2a,YAAYzkB,KAAwB8J,EAAOoa,EAAIQ,MAAQR,EAAIS,qBAAqB,QAAQ,GACzG1Q,EAAQiQ,EAAIL,cAAc,SAC9B5P,EAAMhW,GAAK,yBACXgW,EAAM4B,KAAO,WAEA,MAATiM,GACF7N,EAAMtS,aAAa,QAASmgB,GAG1B7N,EAAM2Q,WACR3Q,EAAM2Q,WAAWC,QAAUN,EAE3BtQ,EAAM6Q,YAAYZ,EAAIa,eAAeR,IAGvCC,EAAUM,YAAY7Q,EACxB,CACF,CAWI+Q,CAAad,EAAK9hB,EAAQ6iB,eAC1B7iB,EAAQ4gB,eAAiB,CAAC,EAC1B5gB,EAAQ8gB,oBAAsB,IAC7B9gB,EAAQ8f,mBAAqBgC,EAAIL,cAAc,QAAQ7X,UAAY,qBACpE5J,EAAQ8f,mBAAmBgD,UAAY,oFACvC9iB,EAAQ0iB,YAAY1iB,EAAQ8f,oBAC5BF,EAAc5f,GACdA,EAAQ+iB,iBAAiB,SAAUxC,GAAgB,GAG/Ca,IACFphB,EAAQ8f,mBAAmBkD,sBAAwB,SAA2BxC,GACxEA,EAAEkB,eAAiBA,GACrB9B,EAAc5f,EAElB,EAEAA,EAAQ8f,mBAAmBiD,iBAAiB3B,EAAqBphB,EAAQ8f,mBAAmBkD,uBAEhG,CAEAhjB,EAAQ8gB,oBAAoBpe,KAAKse,EACnC,EAuBEiC,qBArByB,SAA8BjjB,EAASghB,GAGhE,GAFAhhB,EAAQ8gB,oBAAoBne,OAAO3C,EAAQ8gB,oBAAoB9nB,QAAQgoB,GAAK,IAEvEhhB,EAAQ8gB,oBAAoBxnB,OAAQ,CACvC0G,EAAQkjB,oBAAoB,SAAU3C,GAAgB,GAElDvgB,EAAQ8f,mBAAmBkD,wBAC7BhjB,EAAQ8f,mBAAmBoD,oBAAoB9B,EAAqBphB,EAAQ8f,mBAAmBkD,uBAE/FhjB,EAAQ8f,mBAAmBkD,sBAAwB,MAGrD,IACEhjB,EAAQ8f,oBAAsB9f,EAAQmjB,YAAYnjB,EAAQ8f,mBAE5D,CADE,MAAOU,GACT,CACF,CACF,EAMF,CCrKA,MAAM,EAAY,CAAC,WAAY,gBAAiB,eAAgB,gBAAiB,eAAgB,QAAS,WAAY,SAOhH4C,EAA6B,cAAiB,SAAmBlpB,EAAOyL,GAC5E,MAAM,SACJsL,EAAQ,cACRoS,EAAgB,KAAI,aACpBC,EAAe,KAAI,cACnBC,GAAgB,EAAK,aACrBC,GAAe,EAAK,MACpB9D,EAAK,SACL+D,EAAQ,MACR5R,GACE3X,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE5C4D,EAAO4lB,GAAY,WAAe,CACvCpP,OAAQ+O,EACRtY,MAAOuY,IAEHK,EAAU,SAAa,MACvB9pB,EAAgB,SAAa,MAC7B+pB,GAAe,EAAAC,EAAA,IAAiB,KAIpC,GAAIhqB,EAAcD,QAAS,CACzB,MAAM0a,EAASza,EAAcD,QAAQwG,cAAgB,EAC/C2K,EAAQlR,EAAcD,QAAQ0mB,aAAe,EAE7CwD,GADM,EAAAC,EAAA,GAAYlqB,EAAcD,SACZqoB,iBAAiBpoB,EAAcD,SACnDsP,EAAc8a,SAASF,EAAc5a,YAAa,KAAO,EACzDC,EAAe6a,SAASF,EAAc3a,aAAc,KAAO,EAG3D8a,EAAY3P,GAFC0P,SAASF,EAAcpY,WAAY,KAAO,IACvCsY,SAASF,EAAczY,cAAe,KAAO,GAE7D6Y,EAAWnZ,EAAQ7B,EAAcC,IAElCoa,GAAiBzlB,EAAMwW,SAAW2P,IAAcT,GAAgB1lB,EAAMiN,QAAUmZ,KACnFR,EAAS,CACPpP,OAAQ2P,EACRlZ,MAAOmZ,IAGLT,GACFA,EAAS,CACPnP,OAAQ2P,EACRlZ,MAAOmZ,IAIf,MAEF,EAAA1G,EAAA,IAAkB,KAChB,IAAI2G,EAIJ,GAFAtqB,EAAcD,QAAU+pB,EAAQ/pB,QAAQC,eAEnCA,EACH,OAGF,MAAMuqB,GAAM,EAAAL,EAAA,GAA+D,OAAlDI,EAAwBtqB,EAAcD,SAAmBuqB,OAAwBze,GACpG2e,EAAsB5E,EAA0BC,EAAO0E,GAG7D,OAFAC,EAAoBxC,kBAAkBhoB,EAAcD,QAASgqB,GAC7DA,IACO,KACLS,EAAoBpB,qBAAqBppB,EAAcD,QAASgqB,EAAa,CAC9E,GACA,CAAClE,EAAOkE,IAIX,MAAMU,EAAa,CACjBpX,SAAU,WAENqX,EAAc,CAAC,EAEhBhB,IACHe,EAAWhQ,OAAS,EACpBiQ,EAAYjQ,OAASxW,EAAMwW,QAGxBkP,IACHc,EAAWvZ,MAAQ,EACnBwZ,EAAYxZ,MAAQjN,EAAMiN,OAG5B,MAAMsL,GAAY,EAAAC,EAAA,GAAWqN,EAAShe,GACtC,OAAoB,SAAK,OAAO,OAAS,CACvCA,IAAK0Q,EACLxE,OAAO,OAAS,CAAC,EAAGyS,EAAYzS,IAC/BzO,EAAO,CACR6N,SAA2B,OAAjBnT,EAAMwW,QAAmC,OAAhBxW,EAAMiN,MAAiB,KAAOkG,EAASsT,KAE9E,I,eC1FA,SAASC,EAAmBtqB,GAC1B,IAAIuqB,EAAuBC,EAE3B,MAAM5H,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ8H,GAAoB,EAAA3H,EAAA,GAAgBF,EAAQJ,IAC3CkI,EAAmBC,GAAwB,YAAe,KAC/D,IAAIC,EAAuBC,EAE3B,OAA8J,OAAtJD,EAAyF,OAAhEC,EAAyBjI,EAAOljB,QAAQorB,0BAA+B,EAASD,EAAuBH,mBAA6BE,EAAwB,IAAI,IAE7LG,EAA2B,eAAkB,KACjD,IAAIC,EAAwBC,EAE5BN,EAA6K,OAAvJK,EAA0F,OAAhEC,EAAyBrI,EAAOljB,QAAQorB,0BAA+B,EAASG,EAAuBP,mBAA6BM,EAAyB,KAAK,GACjN,CAACpI,KACJ,EAAAU,EAAA,IAAkB,IACTV,EAAOljB,QAAQwrB,eAAe,0BAA2BH,IAC/D,CAACnI,EAAQmI,IACZ,IAAI3Q,EAAoG,OAA1FmQ,EAA6C,MAArBG,OAA4B,EAASA,EAAkBtQ,QAAkBmQ,EAAwB,EAMvI,OAJI7H,EAAUzD,YAAyB,IAAX7E,IAC1BA,EAAS,QAGNsQ,GAIe,SAAK,OAAO,OAAS,CACvC/S,MAAO,CACLyC,SACAvJ,MAAiG,OAAzF2Z,EAA6C,MAArBE,OAA4B,EAASA,EAAkB7Z,OAAiB2Z,EAAwB,EAChItb,SAAU,WACVC,IAAKsb,EACLU,OAAmB,SAAX/Q,EAAoB,OAAI5O,IAEjCxL,IAXM,IAYX,CAEO,SAASorB,IACd,MAAMxI,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZI,GAAgB,EAAAD,EAAA,GAAgBF,EAAQ,MACxCyI,GAAkB,EAAAvI,EAAA,GAAgBF,EAAQ,MAC1C1P,GAAU,EAAA4P,EAAA,GAAgBF,EAAQ,MAElC0I,GAAwBpY,GAAW6P,EAAgB,GAAyB,IAApBsI,EAC9D,IAAIE,EAAU,KAGZ,IAAIxG,EAMAyG,EAMAC,EAjBqBvY,GAA6B,IAAlB6P,IAOpCwI,GAAuB,SAAK7I,EAAUsC,WAAW0G,eAAe,OAAS,CAAC,EAA0D,OAAtD3G,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB4G,iBAGxKL,IAGFC,GAAuB,SAAK7I,EAAUsC,WAAW4G,kBAAkB,OAAS,CAAC,EAA2D,OAAvDJ,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBK,oBAG7K3Y,IAGFqY,GAAuB,SAAK7I,EAAUsC,WAAW8G,gBAAgB,OAAS,CAAC,EAA2D,OAAvDL,EAAyB/I,EAAUrN,sBAA2B,EAASoW,EAAuBM,kBAG/K,OAAgB,OAAZR,EACK,MAGW,SAAKjB,EAAoB,CAC3CvT,SAAUwU,GAEd,CC1EA,SAASS,EAAShsB,GAChB,MAAM,SACJ+W,EAAQ,yBACRkV,EAAwB,uBACxBC,GACElsB,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ8H,GAAoB,EAAA3H,EAAA,GAAgBF,EAAQJ,IAC3C2J,EAA0BC,GAA+B,WAAe1J,EAAU2J,uBACnFA,EAAwB,eAAkB,KAC9CD,GAA4B,EAAK,GAChC,IACGE,EAAuB,eAAkB,KAC7CF,GAA4B,EAAM,GACjC,IACH,aAAgB,KACdA,EAA4B1J,EAAU2J,sBAAsB,GAC3D,CAAC3J,EAAU2J,wBAOdzJ,EAAOljB,QAAQ6sB,+BAAiCF,EAChDzJ,EAAOljB,QAAQ8sB,8BAAgCF,EAC/C,MAAMG,EAAmB,SAAa,MAChCC,EAAsB,SAAa,MACnCC,EAAY,SAAa,MACzBC,EAAmB,SAAa,MACtChK,EAAOljB,QAAQmtB,iCAAmCH,EAClD9J,EAAOljB,QAAQotB,wBAA0BL,EACzC7J,EAAOljB,QAAQitB,UAAYA,EAE3B/J,EAAOljB,QAAQktB,iBAAmBA,EAElC,MAAMlD,EAAe,eAAkBjZ,IACrCmS,EAAOljB,QAAQqtB,aAAa,SAAUtc,EAAK,GAC1C,CAACmS,IACJ,OAAoB,UAAMkB,EAAmB,CAC3C/M,SAAU,EAAc,SAAKqU,EAAc,CAAC,IAAiB,SAAKc,EAAwB,CACxFzgB,IAAKihB,EACLM,SAAUP,KACK,SAAKvD,EAAe,CACnC1D,MAAO9C,EAAU8C,MACjB6D,cAAe3G,EAAUzD,WACzBsK,SAAUG,EACV3S,SAAUtG,IACR,MAAMkH,EAAQ,CACZ9G,MAAOJ,EAAKI,MAGZuJ,OAAQ3J,EAAK2J,OAAS3J,EAAK2J,OAASqQ,EAAoB,OACxDwC,UAAWxC,GAEb,OAAoB,SAAKwB,EAA0B,CACjDxgB,IAAKkhB,EACLhV,MAAOA,EACP0U,sBAAuBF,GACvB,IAEFpV,IAER,CCvEO,SAASmW,IACd,IAAInI,EAEJ,MAAMnC,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZwK,EAAY,SAAa,MAG/B,OAFAvK,EAAOljB,QAAQytB,UAAYA,EAEvBzK,EAAU0K,WACL,MAGW,SAAK,MAAO,CAC9B3hB,IAAK0hB,EACLpW,UAAuB,SAAK2L,EAAUsC,WAAWqI,QAAQ,OAAS,CAAC,EAA0D,OAAtDtI,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBuI,UAEvK,C,yBCjBO,MAAMC,EAAsB,EACjC3K,SACA5iB,QACA+W,eAEoB,SAAKyW,EAAAC,EAAA,SAA+B,CACtDzrB,MAAOhC,EACP+W,UAAuB,SAAK2W,EAAA,WAAyB,CACnD1rB,MAAO4gB,EACP7L,SAAUA,M,gBCXhB,MAAM4W,IAAa,YAAmE,MAAxCC,OAAOC,aAAaC,QAAQ,SAEpEC,GAAO,OAEPC,GAAa,CACjBC,MAAOF,GACPG,KAAMH,GACNI,KAAMJ,GACN9J,MAAO8J,IAEHK,GAAa,CAAC,QAAS,OAAQ,OAAQ,SAE7C,SAASC,GAAY3qB,EAAM4qB,EAAUC,EAAWC,SAC9C,MAAMC,EAAiBL,GAAWtvB,QAAQwvB,GAE1C,IAAwB,IAApBG,EACF,MAAM,IAAIC,MAAM,kBAAkBJ,qBAepC,OAZeF,GAAWvjB,QAAO,CAAC8jB,EAAWC,EAAQC,KAEjDF,EAAUC,GADRC,GAAOJ,EACW,IAAIK,KACtB,MAAOrK,KAAYvb,GAAS4lB,EAC5BP,EAASK,GAAQ,QAAQlrB,OAAU+gB,OAAcvb,EAAM,EAGrC6kB,GAGfY,IACN,CAAC,EAEN,CCjCO,SAASI,GAAiBnM,EAAQoM,EAEzCC,GACE,MAAMC,EAAgB,SAAaF,IAC5BG,GAAmB,WAAeC,OAAOC,KAAKL,IAC/CM,EAAiB,eAAkB,KAClC1M,EAAOljB,SAIZyvB,EAAgBtI,SAAQ0I,IACjB3M,EAAOljB,QAAQ8vB,eAAeD,KACjC3M,EAAOljB,QAAQ6vB,GAAc,IAAIT,IAASI,EAAcxvB,QAAQ6vB,MAAeT,GACjF,GACA,GACD,CAACK,EAAiBvM,IACrB,aAAgB,KACdsM,EAAcxvB,QAAUsvB,CAAU,GACjC,CAACA,IACJ,aAAgB,KACdM,GAAgB,GACf,CAACA,IACJA,GACF,CCtBO,MAAMG,GACXtH,YAAYuH,EAFoB,KAG9BrL,KAAKsL,SAAW,IAAI/kB,IACpByZ,KAAKuL,eAJyB,IAK9BvL,KAAKuL,eAAiBF,CACxB,CAEAG,SAASC,EAAQC,EAAaC,GACvB3L,KAAKsL,WACRtL,KAAKsL,SAAW,IAAI/kB,KAGtB,MAAM8kB,EAAUO,YAAW,KACE,mBAAhBF,GACTA,IAGF1L,KAAKsL,SAASO,OAAOF,EAAgBG,aAAa,GACjD9L,KAAKuL,gBACRvL,KAAKsL,SAASS,IAAIJ,EAAgBG,aAAcT,EAClD,CAEAW,WAAWL,GACT,MAAMN,EAAUrL,KAAKsL,SAASW,IAAIN,EAAgBG,cAE9CT,IACFrL,KAAKsL,SAASO,OAAOF,EAAgBG,cACrCI,aAAab,GAEjB,CAEAc,QACMnM,KAAKsL,WACPtL,KAAKsL,SAAS9I,SAAQ,CAAC7kB,EAAOqH,KAC5Bgb,KAAKgM,WAAW,CACdF,aAAc9mB,GACd,IAEJgb,KAAKsL,cAAWnkB,EAEpB,EC1CK,MAAMilB,GACXtI,cACE9D,KAAKqM,SAAW,IAAIC,sBAAqBZ,IACZ,mBAAhBA,GACTA,GACF,GAEJ,CAEAF,SAASC,EAAQC,EAAaC,GAC5B3L,KAAKqM,SAASb,SAASC,EAAQC,EAAaC,EAC9C,CAEAK,WAAWL,GACT3L,KAAKqM,SAASL,WAAWL,EAC3B,CAGAQ,QAAS,ECVX,IAAII,IAEJ,SAAWA,GACTA,EAAwB,SAAI,WAC5BA,EAA2B,YAAI,aAChC,CAHD,CAGGA,KAAkBA,GAAgB,CAAC,IAGtC,MAAMC,IA8EN,MAAMC,GAAoB,CACxBJ,SAAU,MAUCK,GArFN,SAAsCD,GAC3C,IAAIE,EAAuB,EAC3B,OAAO,SAAgCpO,EAAQqO,EAAWC,EAAS7yB,GAC9B,OAA/ByyB,EAAkBJ,WACpBI,EAAkBJ,SAA2C,oBAAzBC,qBAAuC,IAAIF,GAA6C,IAAIhB,IAGlI,MAAO0B,GAAyB,WAAe,IAAIN,IAC7CO,EAAe,SAAa,MAC5BC,EAAa,WACnBA,EAAW3xB,QAAUwxB,EACrB,MAAMI,EAAkB,SAAa,MAErC,IAAKF,EAAa1xB,SAAW2xB,EAAW3xB,QAAS,CAC/C,MAAM6xB,EAAkB,CAAC3a,EAAQ5S,EAAOiE,KAEpC,IAAIupB,EADDxtB,EAAMoF,sBAGqC,OAA7CooB,EAAsBH,EAAW3xB,UAA4B8xB,EAAoBzK,KAAKsK,EAAYza,EAAQ5S,EAAOiE,GACpH,EAGFmpB,EAAa1xB,QAAUkjB,EAAOljB,QAAQwrB,eAAe+F,EAAWM,EAAiBlzB,GACjF2yB,GAAwB,EACxBM,EAAgB5xB,QAAU,CACxBywB,aAAca,GAEhBF,EAAkBJ,SAASb,SAASsB,GACpC,KACE,IAAIM,EAE8C,OAAjDA,EAAwBL,EAAa1xB,UAA4B+xB,EAAsB1K,KAAKqK,GAC7FA,EAAa1xB,QAAU,KACvB4xB,EAAgB5xB,QAAU,IAAI,GAC7B4xB,EAAgB5xB,QACrB,MAAY2xB,EAAW3xB,SAAW0xB,EAAa1xB,UAC7C0xB,EAAa1xB,UACb0xB,EAAa1xB,QAAU,KAEnB4xB,EAAgB5xB,UAClBoxB,EAAkBJ,SAASL,WAAWiB,EAAgB5xB,SACtD4xB,EAAgB5xB,QAAU,OAI9B,aAAgB,KACd,IAAK0xB,EAAa1xB,SAAW2xB,EAAW3xB,QAAS,CAC/C,MAAM6xB,EAAkB,CAAC3a,EAAQ5S,EAAOiE,KAEpC,IAAIypB,EADD1tB,EAAMoF,sBAGsC,OAA9CsoB,EAAuBL,EAAW3xB,UAA4BgyB,EAAqB3K,KAAKsK,EAAYza,EAAQ5S,EAAOiE,GACtH,EAGFmpB,EAAa1xB,QAAUkjB,EAAOljB,QAAQwrB,eAAe+F,EAAWM,EAAiBlzB,EACnF,CASA,OAPIizB,EAAgB5xB,SAAWoxB,EAAkBJ,WAG/CI,EAAkBJ,SAASL,WAAWiB,EAAgB5xB,SACtD4xB,EAAgB5xB,QAAU,MAGrB,KACL,IAAIiyB,EAE+C,OAAlDA,EAAyBP,EAAa1xB,UAA4BiyB,EAAuB5K,KAAKqK,GAC/FA,EAAa1xB,QAAU,IAAI,CAC5B,GACA,CAACkjB,EAAQqO,EAAW5yB,GACzB,CACF,CAYsCuzB,CAA6Bd,IAC7De,GAA2B,CAC/BC,SAAS,GAEJ,SAASC,GAAwBnP,EAAQqO,EAAWC,GAEzDH,GAAuBnO,EAAQqO,EAAWC,EAASW,GACrD,CC7GO,MAAMG,GACX7J,cACE9D,KAAK4N,aAAe,GACpB5N,KAAK6N,UAAW,EAChB7N,KAAK8N,OAAS,CAAC,CACjB,CAEAC,GAAGnB,EAAWoB,EAAUh0B,EAAU,CAAC,GACjC,IAAIi0B,EAAajO,KAAK8N,OAAOlB,GAExBqB,IACHA,EAAa,CACXC,aAAc,IAAI3nB,IAClB4nB,QAAS,IAAI5nB,KAEfyZ,KAAK8N,OAAOlB,GAAaqB,GAGvBj0B,EAAQyzB,QACVQ,EAAWC,aAAanC,IAAIiC,GAAU,GAEtCC,EAAWE,QAAQpC,IAAIiC,GAAU,EAWrC,CAEAI,eAAexB,EAAWoB,GACpBhO,KAAK8N,OAAOlB,KACd5M,KAAK8N,OAAOlB,GAAWuB,QAAQtC,OAAOmC,GACtChO,KAAK8N,OAAOlB,GAAWsB,aAAarC,OAAOmC,GAE/C,CAEAK,qBACErO,KAAK8N,OAAS,CAAC,CACjB,CAEAQ,KAAK1B,KAAcnC,GACjB,MAAMwD,EAAajO,KAAK8N,OAAOlB,GAE/B,IAAKqB,EACH,OAGF,MAAMM,EAAwBtqB,MAAMuqB,KAAKP,EAAWC,aAAalD,QAC3DyD,EAAmBxqB,MAAMuqB,KAAKP,EAAWE,QAAQnD,QAEvD,IAAK,IAAIlwB,EAAIyzB,EAAsBxzB,OAAS,EAAGD,GAAK,EAAGA,GAAK,EAAG,CAC7D,MAAMkzB,EAAWO,EAAsBzzB,GAEnCmzB,EAAWC,aAAaQ,IAAIV,IAC9BA,EAASW,MAAM3O,KAAMyK,EAEzB,CAEA,IAAK,IAAI3vB,EAAI,EAAGA,EAAI2zB,EAAiB1zB,OAAQD,GAAK,EAAG,CACnD,MAAMkzB,EAAWS,EAAiB3zB,GAE9BmzB,EAAWE,QAAQO,IAAIV,IACzBA,EAASW,MAAM3O,KAAMyK,EAEzB,CACF,CAEAmE,KAAKhC,EAAWoB,GAEd,MAAMa,EAAO7O,KACbA,KAAK+N,GAAGnB,GAAW,SAASkC,KAAmBrE,GAC7CoE,EAAKT,eAAexB,EAAWkC,GAC/Bd,EAASW,MAAME,EAAMpE,EACvB,GACF,EC5EF,MAAMsE,GAAmBpvB,QACewH,IAA/BxH,EAAMqvB,qBAGf,IAAIC,GAAW,ECVA,SAASC,GAAQC,GAG9B,OAAOD,GAAU,mBAAqBE,QAAU,iBAAmBA,OAAOC,SAAW,SAAUF,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBC,QAAUD,EAAIrL,cAAgBsL,QAAUD,IAAQC,OAAOE,UAAY,gBAAkBH,CAC1H,EAAGD,GAAQC,EACb,CCNe,SAASI,GAAeC,GACrC,IAAIxqB,ECFS,SAAsB7K,EAAOs1B,GAC1C,GAAuB,WAAnBP,GAAQ/0B,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIu1B,EAAOv1B,EAAMi1B,OAAOO,aACxB,QAAaxoB,IAATuoB,EAAoB,CACtB,IAAIE,EAAMF,EAAKhN,KAAKvoB,EAAOs1B,GAAQ,WACnC,GAAqB,WAAjBP,GAAQU,GAAmB,OAAOA,EACtC,MAAM,IAAIC,UAAU,+CACtB,CACA,OAAiB,WAATJ,EAAoBjxB,OAASiH,QAAQtL,EAC/C,CDPY,CAAYq1B,EAAK,UAC3B,MAAwB,WAAjBN,GAAQlqB,GAAoBA,EAAMxG,OAAOwG,EAClD,CE6BO,MC9BM8qB,GAAwB,OACxBC,GAA6B,CACxCC,gBAAiB,UACjBC,UAAW,UACXC,QAAS,WCNL,GAAY,CAAC,WCSNC,GAAwB,CAACC,EAAaz0B,KACjD,MAAM4iB,EPDD,SAAkC6R,EAAaz0B,GACpD,MAAM4iB,EAAS,WAEVA,EAAOljB,UACVkjB,EAAOljB,QAAU,CACfg1B,sBAAuB,IAAI1C,GAC3B2C,gBAAiB,CAAC,EAClB/wB,MAAO,CAAC,EACRgxB,WAAYtB,IAEdA,IAAY,GAGd,sBAA0BmB,GAAa,IAAM7R,EAAOljB,SAAS,CAACkjB,IAC9D,MAAMmK,EAAe,eAAkB,IAAI+B,KACzC,MAAOprB,EAAMkT,EAAQ5S,EAAQ,CAAC,GAAK8qB,EAGnC,GAFA9qB,EAAMoF,qBAAsB,EAExBgqB,GAAiBpvB,IAAUA,EAAMqvB,uBACnC,OAGF,MAAMprB,EAAUjI,EAAM60B,YAAcjE,GAAckE,YAAc,CAC9DxQ,IAAK1B,EAAOljB,SACV,CAAC,EACLkjB,EAAOljB,QAAQg1B,sBAAsB/B,KAAKjvB,EAAMkT,EAAQ5S,EAAOiE,EAAQ,GACtE,CAAC2a,EAAQ5iB,EAAM60B,YACZ3J,EAAiB,eAAkB,CAAClnB,EAAOktB,EAAS7yB,KACxDukB,EAAOljB,QAAQg1B,sBAAsBtC,GAAGpuB,EAAOktB,EAAS7yB,GACxD,MAAMimB,EAAM1B,EAAOljB,QACnB,MAAO,KACL4kB,EAAIoQ,sBAAsBjC,eAAezuB,EAAOktB,EAAQ,CACzD,GACA,CAACtO,IACE4B,EAAY,eAAkBsK,IAClClM,EAAOljB,QAAQqtB,aAAa,iBAAkB+B,EAAK,GAClD,CAAClM,IAaJ,OAZAmM,GAAiBnM,EAAQ,CACvBsI,iBACA6B,eACAvI,cAEF,aAAgB,KACd,MAAMF,EAAM1B,EAAOljB,QACnB,MAAO,MACL,OAAkC4kB,EAAIsQ,YACtCtQ,EAAIyI,aAAa,UAAU,CAC5B,GACA,CAACnK,IACGA,CACT,COjDiBmS,CAAyBN,EAAaz0B,GAOrD,MbiBkC,EAAC4iB,EAAQ5iB,KAC3C4iB,EAAOljB,QAAQkkB,UAAY,eAAkBlgB,GACvCiqB,GACKU,GAAY3qB,EAAM,QAAS1D,EAAM0jB,QAGrC1jB,EAAMsuB,SAIJD,GAAY3qB,EAAM1D,EAAMsuB,SAAS0G,WAAYh1B,EAAM0jB,QAHjDsK,IAIR,CAAChuB,EAAMsuB,SAAUtuB,EAAM0jB,QAAQ,EalClCuR,CAAqBrS,EAAQ5iB,GCVxB,SAA6B4iB,EAAQ5iB,GAC1C,MAAMk1B,EAAc,eAAkBpG,IAEpClM,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDqgB,MAAO6K,KACN,GACF,CAAClM,IACJ,aAAgB,KACV5iB,EAAMikB,MACRiR,EAAY,CACVjR,MAAOjkB,EAAMikB,QAGfiR,EAAY,KACd,GACC,CAACA,EAAal1B,EAAMikB,QACvB8M,GAAuBnO,EAAQ,iBAAkBsS,EACnD,CDNEC,CAAoBvS,EAAQ5iB,GDPY,EAAC4iB,EAAQ5iB,KACjD,MAAMo1B,EAAqB,SAAa,CAAC,IAClC,CAAEC,GAAkB,aACrBC,EAAuB,eAAkBC,IAC7C,MAAM,QACJC,GACED,EACEE,GAAS,OAA8BF,EAAkB,IAE/DH,EAAmB11B,QAAQ81B,IAAW,OAAS,CAAC,EAAGC,EAAQ,CACzDD,WACA,GACD,IACGhM,EAAW,eAAkB,CAAC5lB,EAAOuB,KACzC,IAAIuwB,EAQJ,GALEA,GADE,SAAW9xB,GACFA,EAAMgf,EAAOljB,QAAQkE,OAErBA,EAGTgf,EAAOljB,QAAQkE,QAAU8xB,EAC3B,OAAO,EAGT,IAAIC,GAAiB,EAErB,MAAMC,EAAyB,GAoB/B,GAnBAxG,OAAOC,KAAK+F,EAAmB11B,SAASmnB,SAAQ2O,IAC9C,MAAMK,EAAeT,EAAmB11B,QAAQ81B,GAC1CM,EAAcD,EAAaE,cAAcnT,EAAOljB,QAAQkE,MAAOgf,EAAOljB,QAAQk1B,YAC9EoB,EAAcH,EAAaE,cAAcL,EAAU9S,EAAOljB,QAAQk1B,YAEpEoB,IAAgBF,IAIpBF,EAAuBptB,KAAK,CAC1BgtB,QAASK,EAAaL,QACtBS,eAAgBD,IAAgBH,EAAaK,iBAGhB1qB,IAA3BqqB,EAAaK,WAA2BF,IAAgBH,EAAaK,YACvEP,GAAiB,GACnB,IAGEC,EAAuBx2B,OAAS,EAIlC,MAAM,IAAIsvB,MAAM,0FAA0FkH,EAAuB,GAAGJ,oDAAoDI,EAAuB/e,KAAIsf,GAAMA,EAAGX,UAASY,KAAK,kCAY5O,GATKT,IAEH/S,EAAOljB,QAAQkE,MAAQ8xB,EAEnB9S,EAAOljB,QAAQqtB,cACjBnK,EAAOljB,QAAQqtB,aAAa,cAAe2I,IAIT,IAAlCE,EAAuBx2B,OAAc,CACvC,MAAM,QACJo2B,EAAO,eACPS,GACEL,EAAuB,GACrBC,EAAeT,EAAmB11B,QAAQ81B,GAC1Ca,EAAQR,EAAaE,cAAcL,EAAU9S,EAAOljB,QAAQk1B,YAElE,GAAIiB,EAAaS,cAAgBL,EAAgB,CAC/C,MAAMhuB,EAAUjI,EAAM60B,YAAcjE,GAAckE,YAAc,CAC9DxQ,IAAK1B,EAAOljB,QACZyF,UACE,CACFA,UAEF0wB,EAAaS,aAAaD,EAAOpuB,EACnC,CAEK0tB,GACH/S,EAAOljB,QAAQqtB,aAAa8I,EAAaU,YAAaF,EAAO,CAC3DlxB,UAGN,CAEA,OAAQwwB,CAAc,GACrB,CAAC/S,EAAQ5iB,EAAM60B,YACZ2B,EAAqB,eAAkB,CAACntB,EAAKzF,EAAOuB,IACjDyd,EAAOljB,QAAQ8pB,UAASiN,IACtB,OAAS,CAAC,EAAGA,EAAe,CACjC,CAACptB,GAAMzF,EAAM6yB,EAAcptB,OAE5BlE,IACF,CAACyd,IACE8T,EAAc,eAAkB,IAAMrB,GAAe,IAAMzS,EAAOljB,QAAQkE,SAAQ,CAACgf,IAOzFmM,GAAiBnM,EANA,CACf4G,WACAkN,cACAC,4BAA6BH,EAC7BI,8BAA+BtB,GAEiB,ECjGlDuB,CAA2BjU,EAAQ5iB,GHmBA4iB,KACnC,MAAMkU,EAAkB,SAAa,CAAC,GAChCC,EAAc,eAAkBC,IAC/BA,GAIL5H,OAAO6H,OAAOD,EAAWE,UAAUrQ,SAAQsQ,IACzCA,GAAU,GACV,GACD,IA+DHpI,GAAiBnM,EANQ,CACvBwU,+BAzD4B,eAAkB,CAACrsB,EAAOpJ,EAAI01B,KACrDP,EAAgBp3B,QAAQqL,KAC3B+rB,EAAgBp3B,QAAQqL,GAAS,CAC/BusB,WAAY,IAAI1sB,IAChBssB,SAAU,CAAC,IAIf,MAAMF,EAAaF,EAAgBp3B,QAAQqL,GAQ3C,OAPqBisB,EAAWM,WAAWhH,IAAI3uB,KAE1B01B,IACnBL,EAAWM,WAAWlH,IAAIzuB,EAAI01B,GAC9BN,EAAYC,IAGP,KACLF,EAAgBp3B,QAAQqL,GAAOusB,WAAWlH,IAAIzuB,EAAI,KAAK,CACxD,GACA,CAACo1B,IAuCFQ,6BAtC0B,eAAkB,CAACxsB,EAAOpJ,EAAI61B,KACnDV,EAAgBp3B,QAAQqL,KAC3B+rB,EAAgBp3B,QAAQqL,GAAS,CAC/BusB,WAAY,IAAI1sB,IAChBssB,SAAU,CAAC,IAIfJ,EAAgBp3B,QAAQqL,GAAOmsB,SAASv1B,GAAM61B,EACvC,KACL,MAAMC,EAAYX,EAAgBp3B,QAAQqL,GAAOmsB,SAC3CQ,GAAgB,OAA8BD,EAAW,CAAC91B,GAAIkV,IAAI+c,KAExEkD,EAAgBp3B,QAAQqL,GAAOmsB,SAAWQ,CAAa,IAExD,IAwBDC,0CAvBuC,eAAkB5sB,IACzD,MAAMisB,EAAaF,EAAgBp3B,QAAQqL,GAC3CgsB,EAAYC,EAAW,GACtB,CAACD,IAqBFa,6BApB0B,eAAkB,IAAI9I,KAChD,MAAO/jB,EAAO/I,EAAOsb,GAAWwR,EAEhC,OAAKgI,EAAgBp3B,QAAQqL,GAIPzC,MAAMuqB,KAAKiE,EAAgBp3B,QAAQqL,GAAOusB,WAAWL,UACtDpsB,QAAO,CAACC,EAAK+sB,IAC3BA,EAIEA,EAAa/sB,EAAKwS,GAHhBxS,GAIR9I,GAVMA,CAUA,GACR,KAOgE,EG3FnE81B,CAAsBlV,GFmCiBA,KACvC,MAAMmV,EAAsB,SAAa,IAAIntB,KACvCotB,EAAkB,SAAa,CAAC,GAChCC,EAA4B,eAAkB,CAACC,EAAcC,EAAed,KAChF,MAAMe,EAAU,KACd,MAAMC,EAAOL,EAAgBt4B,QAAQy4B,GAC/BG,GAAkB,OAA8BD,EAAM,CAACH,GAAcrhB,IAAI+c,KAE/EoE,EAAgBt4B,QAAQy4B,GAAiBG,CAAe,EAGrDN,EAAgBt4B,QAAQy4B,KAC3BH,EAAgBt4B,QAAQy4B,GAAiB,CAAC,GAG5C,MAAMI,EAAqBP,EAAgBt4B,QAAQy4B,GAC7CK,EAAoBD,EAAmBL,GAG7C,OAFAK,EAAmBL,GAAgBb,EAE9BmB,GAAqBA,IAAsBnB,GAI5Ca,IAAiBtV,EAAOljB,QAAQ+4B,2BAA2BrE,GAA2B+D,KACxFvV,EAAOljB,QAAQqtB,aAAa,gCAAiCoL,GAGxDC,GAPEA,CAOK,GACb,CAACxV,IACE8V,EAAyB,eAAkB,CAACP,EAAevhB,KAC/D,MAAM+hB,EAAiB/V,EAAOljB,QAAQ+4B,2BAA2BrE,GAA2B+D,IAE5F,GAAsB,MAAlBQ,EACF,MAAM,IAAIjK,MAAM,uEAGlB,MAAMsI,EAAagB,EAAgBt4B,QAAQy4B,GAE3C,IAAKnB,IAAeA,EAAW2B,GAC7B,MAAM,IAAIjK,MAAM,qCAAqCyJ,mBAA+BQ,MAItF,OAAOtB,EADWL,EAAW2B,IACZ/hB,EAAO,GACvB,CAACgM,IACEgW,EAAoB,eAAkBC,IAC1C,IAAIC,EAEJ,MACMC,EADkBzwB,MAAMuqB,KAAKkF,EAAoBr4B,QAAQs5B,WAChBC,MAAK,EAAE,CAAEC,KAClDA,EAASnuB,QAAU8tB,GAIhBK,EAASC,gBAElB,OAAwG,OAAhGL,EAAkD,MAA1BC,OAAiC,EAASA,EAAuB,IAAcD,EAAwB3E,EAAqB,GAC3J,IACGiF,EAA0B,eAAkB,CAACP,EAAeX,EAAciB,KAC9EpB,EAAoBr4B,QAAQ0wB,IAAI8H,EAAc,CAC5CntB,MAAO8tB,EACPM,gBAEFvW,EAAOljB,QAAQqtB,aAAa,6BAA6B,GACxD,CAACnK,IAOJmM,GAAiBnM,EANa,CAC5ByW,mCAAoCpB,EACpCqB,gCAAiCZ,EACjCD,2BAA4BG,EAC5BW,iCAAkCH,GAEqC,EEzGzEI,CAA0B5W,GEfK,EAACA,EAAQ5iB,KAWxC+uB,GAAiBnM,EAHK,CACpB6W,cARoB,eAAkBpwB,IACtC,GAA6B,MAAzBrJ,EAAM05B,WAAWrwB,GACnB,MAAM,IAAIqlB,MAAM,+BAA+BrlB,MAGjD,OAAOrJ,EAAM05B,WAAWrwB,EAAI,GAC3B,CAACrJ,EAAM05B,cAI8C,EFKxDC,CAAkB/W,EAAQ5iB,GACnB4iB,CAAM,EGlBFgX,GAAyB,CAACC,EAAajX,EAAQ5iB,KAC1D,MAAM85B,EAAgB,UAAa,GAE9BA,EAAcp6B,UACjBkjB,EAAOljB,QAAQkE,MAAQi2B,EAAYjX,EAAOljB,QAAQkE,MAAO5D,EAAO4iB,GAChEkX,EAAcp6B,SAAU,EAC1B,ECJF,SAASq6B,GAAyBC,GAChC,MAAMC,EAAOp6B,SAAS0nB,cAAc,QACpC0S,EAAKtiB,MAAM2C,WAAa,MACxB2f,EAAKtiB,MAAM0D,WAAa,MACxB4e,EAAKtiB,MAAM/F,QAAU,MACrBqoB,EAAKC,YAAcF,EACnBn6B,SAASs6B,KAAK3R,YAAYyR,GAC1B,MAAMG,EAAQv6B,SAASw6B,cACvBD,EAAME,WAAWL,GACjB,MAAMM,EAAY3M,OAAO4M,eACzBD,EAAUE,kBACVF,EAAUG,SAASN,GAEnB,IACEv6B,SAAS86B,YAAY,OAGvB,CAFE,QACA96B,SAASs6B,KAAKlR,YAAYgR,EAC5B,CACF,CAyBO,MAAMW,GAAmBhY,IAC9B,MAAMiY,EAA8B,eAAkB,CAACC,GAAiB,KACtE,GAA8C,IAA1ClY,EAAOljB,QAAQq7B,kBAAkBtqB,KACnC,OAGF,MAAMupB,EAAOpX,EAAOljB,QAAQs7B,aAAa,CACvCF,iBACAG,UAAW,OAGTC,UAAUC,UACZD,UAAUC,UAAUC,UAAUpB,GAAMqB,OAAM,KACxCtB,GAAyBC,EAAK,IAGhCD,GAAyBC,EAC3B,GACC,CAACpX,IACE0Y,EAAgB,eAAkBt3B,IACtC,MAAMu3B,EAAuBv3B,EAAM0E,SAAW1E,EAAM2E,SAAW3E,EAAMw3B,OA3CzE,IAA4B11B,EACtB21B,EA8CyC,MAAvC54B,OAAO64B,aAAa13B,EAAM23B,UAAqBJ,IA/C3Bz1B,EAoDD9B,EAAM4F,OAjD6E,MAArD,OAAjD6xB,EAAuB7N,OAAO4M,qBAA0B,EAASiB,EAAqBzG,aAIvFlvB,IAIAA,EAAQwE,cAAgB,IAAMxE,EAAQyE,gBAAkB,GAAK,GA6ChEqY,EAAOljB,QAAQk8B,qCAAqC53B,EAAMw3B,QAAO,GAChE,CAAC5Y,IC7EoC,EAACA,EAAQnX,EAAKwlB,EAAWC,EAAS7yB,KAC1E,MAAMqlB,EAASD,EAAcb,EAAQ,2BAC9BiZ,EAAOC,GAAY,YAAe,GACnCzK,EAAa,SAAaH,GAC1B6K,EAAc,eAAkB/3B,GAC7BqtB,EAAW3xB,SAAW2xB,EAAW3xB,QAAQsE,IAC/C,IACH,aAAgB,KACdqtB,EAAW3xB,QAAUwxB,CAAO,GAC3B,CAACA,IACJ,aAAgB,KACd,IAAI8K,EAQJ,GALEA,GADE,SAAWvwB,GACGA,IAEAA,GAAOA,EAAI/L,QAAU+L,EAAI/L,QAAU,KAGjDs8B,GAAiB/K,IAAc4K,EAAO,CACxCnY,EAAOuK,MAAM,kBAAkBgD,WAC/B+K,EAAcnT,iBAAiBoI,EAAW8K,EAAa19B,GACvD,MAAM49B,EAAYD,EAClBF,GAAS,GAET,MAAM/L,EAAc,KAClBrM,EAAOuK,MAAM,mBAAmBgD,WAChCgL,EAAUjT,oBAAoBiI,EAAW8K,EAAa19B,EAAQ,EAGhEukB,EAAOljB,QAAQwrB,eAAe,UAAW6E,EAC3C,IACC,CAACtkB,EAAKswB,EAAa9K,EAAW4K,EAAOnY,EAAQrlB,EAASukB,GAAQ,ED8CjEsZ,CAA2BtZ,EAAQA,EAAOljB,QAAQyjB,eAAgB,UAAWmY,GAI7EvM,GAAiBnM,EAHI,CACnBgZ,qCAAsCf,GAEkB,EErF/CsB,GAAyBv4B,GAASA,EAAMw4B,WCKxCC,GAA6Bz4B,IAAS,OAAS,CAAC,EAAGA,EAAO,CACrEw4B,WAAY,CACV95B,MAAM,KCNGg6B,GAAiBnF,IAC5B,MAAMoF,EAAgB,UAAa,GAE/BA,EAAc78B,UAChB68B,EAAc78B,SAAU,EACxBy3B,IACF,ECLWqF,GAA+B,CAAC5Z,EAAQ7X,EAAOosB,KAC1D,MAAMiB,EAAU,WACVz2B,EAAK,SAAa,OAAOmF,KAAK21B,MAAsB,IAAhB31B,KAAK41B,aACzCC,EAAuB,eAAkB,KAC7CvE,EAAQ14B,QAAUkjB,EAAOljB,QAAQ03B,+BAA+BrsB,EAAOpJ,EAAGjC,QAASy3B,EAAS,GAC3F,CAACvU,EAAQuU,EAAUpsB,IACtBuxB,IAAe,KACbK,GAAsB,IAExB,MAAMJ,EAAgB,UAAa,GACnC,aAAgB,KACVA,EAAc78B,QAChB68B,EAAc78B,SAAU,EAExBi9B,IAGK,KACDvE,EAAQ14B,UACV04B,EAAQ14B,UACR04B,EAAQ14B,QAAU,KACpB,IAED,CAACi9B,GAAsB,ECvBfC,GAA6B,CAACha,EAAQ7X,EAAOosB,KACxD,MAAMiB,EAAU,WACVz2B,EAAK,SAAa,OAAOmF,KAAK21B,MAAsB,IAAhB31B,KAAK41B,aACzCC,EAAuB,eAAkB,KAC7CvE,EAAQ14B,QAAUkjB,EAAOljB,QAAQ63B,6BAA6BxsB,EAAOpJ,EAAGjC,QAASy3B,EAAS,GACzF,CAACvU,EAAQuU,EAAUpsB,IACtBuxB,IAAe,KACbK,GAAsB,IAExB,MAAMJ,EAAgB,UAAa,GACnC,aAAgB,KACVA,EAAc78B,QAChB68B,EAAc78B,SAAU,EAExBi9B,IAGK,KACDvE,EAAQ14B,UACV04B,EAAQ14B,UACR04B,EAAQ14B,QAAU,KACpB,IAED,CAACi9B,GAAsB,E,gECrB5B,MAAME,GAAoB76B,GACX,MAATA,EACK,KAGF8H,OAAO9H,GAcH86B,GAA0B,IAAM,CAAC,CAC5Ct7B,MAAO,IACPQ,MAAO,IACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAiB8H,OAAOmzB,MAAMD,EAAWh7B,OAC/C,KAGF,EACLA,WAEO66B,GAAkB76B,KAAWg7B,EAAWh7B,MAGnDk7B,eAAgBC,GAAA,EAChBC,oBAAqB,CACnB7jB,KAAM,WAEP,CACD/X,MAAO,KACPQ,MAAO,KACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAiB8H,OAAOmzB,MAAMD,EAAWh7B,OAC/C,KAGF,EACLA,WAEO66B,GAAkB76B,KAAWg7B,EAAWh7B,MAGnDk7B,eAAgBC,GAAA,EAChBC,oBAAqB,CACnB7jB,KAAM,WAEP,CACD/X,MAAO,IACPQ,MAAO,IACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAiB8H,OAAOmzB,MAAMD,EAAWh7B,OAC/C,KAGF,EACLA,WAEa,MAATA,GAIG66B,GAAkB76B,GAASg7B,EAAWh7B,MAGjDk7B,eAAgBC,GAAA,EAChBC,oBAAqB,CACnB7jB,KAAM,WAEP,CACD/X,MAAO,KACPQ,MAAO,KACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAiB8H,OAAOmzB,MAAMD,EAAWh7B,OAC/C,KAGF,EACLA,WAEa,MAATA,GAIG66B,GAAkB76B,IAAUg7B,EAAWh7B,MAGlDk7B,eAAgBC,GAAA,EAChBC,oBAAqB,CACnB7jB,KAAM,WAEP,CACD/X,MAAO,IACPQ,MAAO,IACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAiB8H,OAAOmzB,MAAMD,EAAWh7B,OAC/C,KAGF,EACLA,WAEa,MAATA,GAIG66B,GAAkB76B,GAASg7B,EAAWh7B,MAGjDk7B,eAAgBC,GAAA,EAChBC,oBAAqB,CACnB7jB,KAAM,WAEP,CACD/X,MAAO,KACPQ,MAAO,KACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAiB8H,OAAOmzB,MAAMD,EAAWh7B,OAC/C,KAGF,EACLA,WAEa,MAATA,GAIG66B,GAAkB76B,IAAUg7B,EAAWh7B,MAGlDk7B,eAAgBC,GAAA,EAChBC,oBAAqB,CACnB7jB,KAAM,WAEP,CACDvX,MAAO,UACP+6B,iBAAkB,IACT,EACL/6B,WAEgB,MAATA,EAGXq7B,qBAAqB,GACpB,CACDr7B,MAAO,aACP+6B,iBAAkB,IACT,EACL/6B,WAEgB,MAATA,EAGXq7B,qBAAqB,GACpB,CACDr7B,MAAO,UACP+6B,iBAAkBC,GACX10B,MAAMC,QAAQy0B,EAAWh7B,QAAsC,IAA5Bg7B,EAAWh7B,MAAM5C,OAIlD,EACL4C,WAEgB,MAATA,GAAiBg7B,EAAWh7B,MAAMs7B,SAASxzB,OAAO9H,IANlD,KASXk7B,eAAgBK,GAAA,EAChBH,oBAAqB,CACnB7jB,KAAM,YCjLGikB,KDwLgC,QAAsBV,GAAyB,CAAC,6GAA8G,0CCxLvK,OAAS,CAAC,EAAG,KAAqB,CACpEvjB,KAAM,SACNkkB,MAAO,QACPC,YAAa,QACbC,eAAgB,MAChBC,YAAa57B,GAAmB,KAAVA,EAAe,KAAO8H,OAAO9H,GACnD67B,eAAgB,EACd77B,YACI,SAASA,GAASA,EAAM87B,iBAAmB97B,GAAS,GAC1D+7B,gBAAiBjB,KACjBkB,sBDHyCh8B,GAC5B,MAATA,GAAiB8H,OAAOmzB,MAAMj7B,IAAoB,KAAVA,EACnC,KAGF,EACLA,MAAOi8B,KAEApB,GAAkBoB,KAAiBpB,GAAkB76B,M,4BElBhE,MAAM,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,cAOjEk8B,GAAiC,IAE9C,SAASC,GAAoBn+B,GAC3B,IAAIo+B,EAAarZ,EAEjB,MAAM,KACJsZ,EAAI,WACJC,EAAU,KACV/kB,EAAI,OACJqJ,EAAM,gBACN2b,EAAe,WACf/mB,GACExX,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7Cw+B,EAAgB,YACfC,EAAkBC,GAAuB,WAA6C,OAA7BN,EAAcC,EAAKr8B,OAAiBo8B,EAAc,KAC3GO,EAAUC,GAAiB,YAAe,GAC3Cj9B,GAAK,EAAAk9B,GAAA,KACLnc,GAAY,EAAAC,EAAA,KACZmc,EAAiB,eAAkB96B,IACvC,MAAMhC,EAAQgC,EAAM4F,OAAO5H,MAC3BuuB,aAAaiO,EAAc9+B,SAC3Bg/B,EAAoB77B,OAAOb,IAC3B48B,GAAc,GACdJ,EAAc9+B,QAAUuwB,YAAW,KACjCqO,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,WAEF48B,GAAc,EAAM,GACnBV,GAA+B,GACjC,CAACI,EAAYD,IAYhB,OAXA,aAAgB,IACP,KACL9N,aAAaiO,EAAc9+B,QAAQ,GAEpC,IACH,aAAgB,KACd,IAAIq/B,EAEJ,MAAMC,EAA2C,OAA9BD,EAAeV,EAAKr8B,OAAiB+8B,EAAe,GACvEL,EAAoB77B,OAAOm8B,GAAW,GACrC,CAACX,EAAKr8B,SACW,SAAK0gB,EAAUsC,WAAWia,eAAe,OAAS,CACpEt9B,GAAIA,EACJH,MAAOohB,EAAOljB,QAAQ+5B,cAAc,yBACpCyF,YAAatc,EAAOljB,QAAQ+5B,cAAc,+BAC1Cz3B,MAAOy8B,EACPx8B,SAAU68B,EACVllB,QAAS,WACTL,KAAMA,GAAQ,OACdhC,gBAAiB,CACf4nB,QAAQ,GAEVn8B,SAAUu7B,EACV/mB,YAAY,OAAS,CAAC,EAAGmnB,EAAW,CAClC7sB,cAA2B,SAAK,MAAc,CAAC,IAC7C,CAAC,EAAG0F,EAAY,CAClBE,YAAY,OAAS,CACnB0nB,IAAc,mBAAT7lB,EAA4B,mBAAqB,cACvC,MAAd/B,OAAqB,EAASA,EAAWE,eAE7CxO,EAA8D,OAAtD6b,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBsa,eACzG,CCvEA,MAAMC,GAAY,oBACZC,GAAgB,gCAEtB,SAASC,GAAmBxC,EAAYyC,EAAWC,EAAUC,GAC3D,IAAK3C,EAAWh7B,MACd,OAAO,KAGT,MAAO49B,EAAMC,EAAOC,EAAKC,EAAMC,GAAUhD,EAAWh7B,MAAMi+B,MAAMP,EAAWH,GAAgBD,IAAWvgC,MAAM,GAAG8X,IAAI/M,QAC7Go2B,EAAO,IAAIC,KAAKP,EAAMC,EAAQ,EAAGC,EAAKC,GAAQ,EAAGC,GAAU,GAAGI,UACpE,MAAO,EACLp+B,YAEA,IAAKA,EACH,OAAO,EAGT,MAAMq+B,EAAcr+B,aAAiBm+B,KAAOn+B,EAAQ,IAAIm+B,KAAKn+B,EAAMgzB,YAEnE,GAAI2K,EACF,OAAOF,EAAUY,EAAYD,UAAWF,GAI1C,MACMI,GADWt+B,aAAiBm+B,KAAO,IAAIA,KAAKE,GAAeA,GAClCE,SAASb,EAAWW,EAAYG,WAAa,EAAGd,EAAWW,EAAYI,aAAe,EAAG,EAAG,GAC3H,OAAOhB,EAAUa,EAAeJ,EAAK,CAEzC,CAEO,MAAMQ,GAAuBhB,GAAY,CAAC,CAC/C19B,MAAO,KACP+6B,iBAAkBC,GACTwC,GAAmBxC,GAAY,CAAC2D,EAAQl8B,IAAWk8B,IAAWl8B,GAAQi7B,GAE/ExC,eAAgBiB,GAChBf,oBAAqB,CACnB7jB,KAAMmmB,EAAW,iBAAmB,SAErC,CACD19B,MAAO,MACP+6B,iBAAkBC,GACTwC,GAAmBxC,GAAY,CAAC2D,EAAQl8B,IAAWk8B,IAAWl8B,GAAQi7B,GAE/ExC,eAAgBiB,GAChBf,oBAAqB,CACnB7jB,KAAMmmB,EAAW,iBAAmB,SAErC,CACD19B,MAAO,QACP+6B,iBAAkBC,GACTwC,GAAmBxC,GAAY,CAAC2D,EAAQl8B,IAAWk8B,EAASl8B,GAAQi7B,GAE7ExC,eAAgBiB,GAChBf,oBAAqB,CACnB7jB,KAAMmmB,EAAW,iBAAmB,SAErC,CACD19B,MAAO,YACP+6B,iBAAkBC,GACTwC,GAAmBxC,GAAY,CAAC2D,EAAQl8B,IAAWk8B,GAAUl8B,GAAQi7B,GAE9ExC,eAAgBiB,GAChBf,oBAAqB,CACnB7jB,KAAMmmB,EAAW,iBAAmB,SAErC,CACD19B,MAAO,SACP+6B,iBAAkBC,GACTwC,GAAmBxC,GAAY,CAAC2D,EAAQl8B,IAAWk8B,EAASl8B,GAAQi7B,GAAWA,GAExFxC,eAAgBiB,GAChBf,oBAAqB,CACnB7jB,KAAMmmB,EAAW,iBAAmB,SAErC,CACD19B,MAAO,aACP+6B,iBAAkBC,GACTwC,GAAmBxC,GAAY,CAAC2D,EAAQl8B,IAAWk8B,GAAUl8B,GAAQi7B,GAE9ExC,eAAgBiB,GAChBf,oBAAqB,CACnB7jB,KAAMmmB,EAAW,iBAAmB,SAErC,CACD19B,MAAO,UACP+6B,iBAAkB,IACT,EACL/6B,WAEgB,MAATA,EAGXq7B,qBAAqB,GACpB,CACDr7B,MAAO,aACP+6B,iBAAkB,IACT,EACL/6B,WAEgB,MAATA,EAGXq7B,qBAAqB,I,gBCtGvB,MAAM,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,WAAY,aAAc,eAAgB,oBAAqB,iBAW3MuD,IAAkB,EAAAxzB,EAAA,IAAOyzB,GAAA,GAAP,CAAkB,CACxCjyB,SAAU,YAGN,GAAoBrB,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,kBAEoB,IAAyBoC,EAAQ,EAGhE,SAASkxB,GAAiB9gC,GACxB,MAAM,GACJ2B,EACAK,MAAOW,EAAS,MAChBo+B,EAAK,OACLC,EAAM,SACNC,EAAQ,WACRvpB,EAAU,cACVwpB,GACElhC,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7CmhC,EAA6B,aAAhBH,EAAOznB,KACpBqJ,GAAS,SACT5f,EAAW,WACXo+B,EAAmB,WAAc,KACrC,IAAIC,EAUAC,EAEJ,GATED,EADe,MAAb1+B,EACW,KACJA,aAAqBw9B,KACjBx9B,EAEA,IAAIw9B,MAAmB,MAAbx9B,EAAoBA,EAAY,IAAIqyB,YAK3C,MAAdqM,GAAsBv3B,OAAOmzB,MAAMoE,EAAWjB,WAChDkB,EAAgB,OACX,CAELA,EADkB,IAAInB,KAAKkB,EAAWjB,UAA6C,GAAjCiB,EAAWE,oBAA2B,KAC9DC,cAAcC,OAAO,EAAGN,EAAa,GAAK,GACtE,CAEA,MAAO,CACLO,OAAQL,EACRM,UAAWL,EACZ,GACA,CAAC3+B,EAAWw+B,KACRS,EAAYr+B,GAAiB,WAAe69B,GAE7C7zB,EAAa,CACjBqC,SAFgB,EAAA+S,EAAA,KAEG/S,SAEfA,EAAU,GAAkBrC,GAC5Bs0B,EAAe,eAAkBC,UACrC,MAAMC,EAAmB/9B,EAAM4F,OAAO5H,MACtC,IAAIggC,EAEJ,GAAyB,KAArBD,EACFC,EAAgB,SACX,CACL,MAAOC,EAAM/B,GAAQ6B,EAAiB3a,MAAM,MACrCwY,EAAMC,EAAOC,GAAOmC,EAAK7a,MAAM,KAKtC,GAJA4a,EAAgB,IAAI7B,KACpB6B,EAAcE,YAAYp4B,OAAO81B,GAAO91B,OAAO+1B,GAAS,EAAG/1B,OAAOg2B,IAClEkC,EAAczB,SAAS,EAAG,EAAG,EAAG,GAE5BL,EAAM,CACR,MAAOiC,EAAOC,GAAWlC,EAAK9Y,MAAM,KACpC4a,EAAczB,SAASz2B,OAAOq4B,GAAQr4B,OAAOs4B,GAAU,EAAG,EAC5D,CACF,CAEIlB,SACIA,EAAcl9B,EAAOg+B,GAG7Bz+B,EAAc,CACZm+B,OAAQM,EACRL,UAAWI,IAEbnf,EAAOljB,QAAQ2iC,iBAAiB,CAC9B1gC,KACAo/B,QACA/+B,MAAOggC,GACNh+B,EAAM,GACR,CAAC4e,EAAQme,EAAOp/B,EAAIu/B,IAiBvB,OAhBA,aAAgB,KACd39B,GAAcK,IACZ,IAAI0+B,EAAuBC,EAE3B,OAAInB,EAAiBM,SAAW99B,EAAM89B,SAAgE,OAApDY,EAAwBlB,EAAiBM,aAAkB,EAASY,EAAsBlC,cAAkD,OAAjCmC,EAAgB3+B,EAAM89B,aAAkB,EAASa,EAAcnC,WACnNgB,EAGFx9B,CAAK,GACZ,GACD,CAACw9B,KACJ,EAAA9d,EAAA,IAAkB,KACZ2d,GACFj+B,EAAStD,QAAQqF,OACnB,GACC,CAACk8B,KACgB,SAAKL,IAAiB,OAAS,CACjD59B,SAAUA,EACVqN,WAAW,EACXX,UAAWE,EAAQpC,KACnB+L,KAAM4nB,EAAa,iBAAmB,OACtCzpB,YAAY,OAAS,CACnB0nB,IAAK+B,EAAa,mBAAqB,cACtCzpB,GACH1V,MAAO4/B,EAAWD,UAClB1/B,SAAU4/B,GACT34B,GACL,CA2FO,MAAMs5B,GAAqB5rB,IAAuB,SAAKkqB,IAAkB,OAAS,CAAC,EAAGlqB,ICzMtF,MAAM6rB,IAAoB,OAAS,CAAC,EAAG,KAAqB,CACjElpB,KAAM,OACNokB,eAAgB,MAChBE,eArBK,UAA2B,MAChC77B,IAEA,OAAIA,aAAiBm+B,KACZn+B,EAAM0gC,qBAGC,MAAT1gC,EAAgBA,EAAQ,EACjC,EAcE+7B,gBAAiB2C,KACjBiC,eAAgBH,GAChBxE,2BAAuBxyB,IAEZo3B,IAAwB,OAAS,CAAC,EAAG,KAAqB,CACrErpB,KAAM,WACNokB,eAAgB,MAChBE,eApBK,UAA+B,MACpC77B,IAEA,OAAIA,aAAiBm+B,KACZn+B,EAAM87B,iBAGC,MAAT97B,EAAgBA,EAAQ,EACjC,EAaE+7B,gBAAiB2C,IAAqB,GACtCiC,eAAgBH,GAChBxE,2BAAuBxyB,I,ICpCrBq3B,GAOAC,GAOAC,G,qCAZJ,SAAWF,GACTA,EAAoB,KAAI,OACxBA,EAAmB,IAAI,KACxB,CAHD,CAGGA,KAAkBA,GAAgB,CAAC,IAItC,SAAWC,GACTA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,MACzB,CAHD,CAGGA,KAAkBA,GAAgB,CAAC,IAItC,SAAWC,GACTA,EAAmB,KAAI,OACvBA,EAAmB,KAAI,MACxB,CAHD,CAGGA,KAAiBA,GAAe,CAAC,I,gBClBpC,MAAM,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,WAAY,eAAgB,oBAAqB,QAAS,gBAAiB,eAYpOC,GAA4B,CAACpkC,EAAQqkC,KACzC,MAAMC,EAAuC,iBAAXtkC,EAC5ByK,EAAM65B,EAAqBtkC,EAAOoD,MAAQpD,EAC1CoD,EAAQkhC,EAAqBtkC,EAAOoD,MAAQpD,EAC5CukC,EAAUD,EAAqBtkC,EAAO4C,MAAQ5C,EACpD,OAAoB,SAAKqkC,EAAiB,CACxCjhC,MAAOA,EACP+U,SAAUosB,GACT95B,EAAI,EAOT,SAAS+5B,GAAyBpjC,GAChC,IAAI+kB,EAAuBse,EAAuB7X,EAElD,MAAM9I,GAAY,EAAAC,EAAA,MAEZ,GACJhhB,EAAE,MACFK,EAAK,IACLsiB,EAAG,MACHyc,EAAK,IACL1gB,EAAG,OACH2gB,EAAM,SACNC,EAAQ,MACRhd,EAAK,cACLid,EAAa,YACboC,EAAc5gB,EAAU6gB,WAAaV,GAAcW,MACjDxjC,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACTnX,EAAM,WACNzI,EAAW,YACVV,EAAMmhC,GAAW,WAAeH,GAEjCI,EAAqE,OAAnDL,IADwD,OAAtDte,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB4e,aAAe,CAAC,GACtEC,SAAkBP,EAClF,IAAIQ,EAGFA,EADiC,mBAAxB7C,EAAO8C,aACQ9C,EAAO8C,aAAa,CAC1CniC,KACA0e,MACA0gB,UAGsBC,EAAO8C,aAG7B9C,EAAOnD,iBACTgG,EAAwBA,EAAsBhtB,KAAIjY,IAChD,GAAsB,iBAAXA,EACT,OAAOA,EAGT,MAAMgY,EAAS,CACbmqB,QACAzc,MACAtiB,MAAOpD,GAET,MAAO,CACLoD,MAAOpD,EACP4C,MAAOqB,OAAOm+B,EAAOnD,eAAejnB,IACrC,KAiFL,OALA,EAAA0M,EAAA,IAAkB,KACZ2d,GACFj+B,EAAStD,QAAQqF,OACnB,GACC,CAACk8B,KACgB,SAAKve,EAAUsC,WAAW+e,YAAY,OAAS,CACjEt4B,IAAKA,EACLzI,SAAUA,EACVhB,MAAOA,EACPC,SAjFmB6/B,UACnB,IAAIkC,EAEJP,GAAQ,GACR,MAAM75B,EAAS5F,EAAM4F,OAEfq6B,GAAuB,QAAyBr6B,EAAO5H,MAAO6hC,GAEhE3C,SACIA,EAAcl9B,EAAOigC,GAG7B,MAAMC,QAAgBthB,EAAOljB,QAAQ2iC,iBAAiB,CACpD1gC,KACAo/B,QACA/+B,MAAOiiC,GACNjgC,GAEH,GAAgE,OAA3DggC,EAAwBthB,EAAUyhB,uBAAiCH,EAAsBI,cAC5F,OAIF,GAAI1hB,EAAU6gB,WAAaV,GAAcwB,MAAmB,IAAZH,EAC9C,OAQF,SALwBI,QAAQC,QAAQ3hB,EAAOljB,QAAQ8kC,iBAAiB,CACtE7iC,KACAo/B,SACC/8B,MAGD4e,EAAOljB,QAAQ+kC,YAAY9iC,EAAIo/B,EAAO,QAElC/8B,EAAMqF,KAAK,CAEb,MAAMuN,EAASgM,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,GAChDne,EAAOljB,QAAQqtB,aAAa,wBAAyBnW,EAAQ5S,EAC/D,CACF,EA0CA1B,KAAMA,EACND,OAnBiB2B,KA3HrB,SAAyBA,GACvB,QAASA,EAAMqF,GACjB,EA0HQs7B,CAAgB3gC,IAAwB,UAAdA,EAAMqF,KAIpCo6B,GAAQ,EAAK,EAebmB,UAAW,CACT1iC,QA1CgB,CAAC8B,EAAOmB,KAOxB,IAAI0/B,EANFniB,EAAU6gB,WAAaV,GAAcwB,KAK1B,kBAAXl/B,IAA8B,SAAYnB,EAAMqF,QAGe,OAA5Dw7B,EAAyBniB,EAAUyhB,uBAAiCU,EAAuBT,cAC9FxhB,EAAOljB,QAAQolC,iBAAiB,CAC9BnjC,KACAo/B,QACAgE,qBAAqB,IAGvBniB,EAAOljB,QAAQ+kC,YAAY9iC,EAAIo/B,EAAO,SAdxC0C,GAAQ,EAgBV,GA0BAxf,MAAOA,EACP2f,OAAQF,EACRrzB,WAAW,GACVnH,EAA+D,OAAvDsiB,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBmY,WAAY,CACnH5sB,SAAU8sB,EAAsBhtB,KAAIitB,GAAgBd,GAA0Bc,EAAcJ,EAAiB,SAAWsB,GAAA,OAE5H,CAgGO,MC/QD,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,mBASrD,GAA4B,EAChClB,eACAjG,iBACAkD,SACCzc,EAAK2e,KAC+C,mBAAjBa,EAA8B,CAAC,MAAOA,EAAa,CACrF/C,WACI,CAAC,MAAQ+C,GAAgB,KACHjtB,KAAIjY,IAC9B,MAAMskC,EAAuC,iBAAXtkC,EAC5ByK,EAAM65B,EAAqBtkC,EAAOoD,MAAQpD,EAC1CoD,EAAQkhC,EAAqBtkC,EAAOoD,MAAQpD,EAC5CqmC,EAAiBpH,GAA6B,KAAXj/B,EAAgBi/B,EAAe,CACtE77B,MAAOpD,EACPmiC,QACAzc,QACG1lB,EACCukC,EAAUD,EAAqBtkC,EAAO4C,MAAQyjC,EACpD,OAAoB,SAAKhC,EAAiB,CACxCjhC,MAAOA,EACP+U,SAAUosB,GACT95B,EAAI,IAIX,SAAS67B,GAA4BllC,GACnC,IAAIo+B,EAAarZ,EAAuBse,EAAuB7X,EAAwBC,EAEvF,MAAM,KACJ4S,EAAI,WACJC,EAAU,KACV/kB,EAAI,OACJqJ,EAAM,gBACN2b,GACEv+B,EACEy1B,GAAS,OAA8Bz1B,EAAO,KAE7Cy+B,EAAkBC,GAAuB,WAA6C,OAA7BN,EAAcC,EAAKr8B,OAAiBo8B,EAAc,IAC5Gz8B,GAAK,EAAAk9B,GAAA,KACLnc,GAAY,EAAAC,EAAA,KAEZ+gB,EAAqE,OAAnDL,IADwD,OAAtDte,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB4e,aAAe,CAAC,GACtEC,SAAkBP,EAC5E8B,EAAgB9G,EAAK+G,YAAcxiB,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aAAe,KAChFE,EAAsB,WAAc,KACxC,GAAsB,OAAlBH,EAIJ,MAA6C,mBAA/BA,EAAcrB,aAA8BqB,EAAcrB,aAAa,CACnF/C,MAAOoE,EAAcpE,QAClBoE,EAAcrB,YAAY,GAC9B,CAACqB,IACErG,EAAiB,eAAkB96B,IACvC,IAAIhC,EAAQgC,EAAM4F,OAAO5H,MAEzBA,GAAQ,QAAyBA,EAAOsjC,GACxC5G,EAAoB77B,OAAOb,IAC3Bs8B,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,UACC,GACF,CAACs8B,EAAYD,EAAMiH,IAuBtB,OAtBA,aAAgB,KACd,IAAIC,EAEJ,IAAIvG,EAEJ,QAA4BxzB,IAAxB85B,GAIF,GAFAtG,GAAY,QAAyBX,EAAKr8B,MAAOsjC,GAE7CtG,IAAcX,EAAKr8B,MAIrB,YAHAs8B,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,MAAOg9B,UAKXA,EAAYX,EAAKr8B,MAGnBg9B,EAAwC,OAA3BuG,EAAavG,GAAqBuG,EAAa,GAC5D7G,EAAoB77B,OAAOm8B,GAAW,GACrC,CAACX,EAAMiH,EAAqBhH,KACX,SAAK5b,EAAUsC,WAAWia,eAAe,OAAS,CACpEt9B,GAAIA,EACJH,MAAOohB,EAAOljB,QAAQ+5B,cAAc,yBACpCyF,YAAatc,EAAOljB,QAAQ+5B,cAAc,+BAC1Cz3B,MAAOy8B,EACPx8B,SAAU68B,EACVllB,QAAS,WACTL,KAAMA,GAAQ,OACdhC,gBAAiB,CACf4nB,QAAQ,GAEVn8B,SAAUu7B,EACV/zB,QAAQ,EACRg7B,aAAa,OAAS,CACpB5B,OAAQF,GACiD,OAAvDlY,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBmY,aACjGlO,EAAgE,OAAvDhK,EAAyB/I,EAAUrN,sBAA2B,EAASoW,EAAuB4T,cAAe,CACvHtoB,SAAU,GAA0B6L,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aAAcxiB,EAAOljB,QAASgkC,EAAiB,SAAWsB,GAAA,KAEhI,C,uCC/GA,MAAM,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,WAUhHjjC,GAAuB,CAACnD,EAAQoD,KAAU,QAAmBpD,MAAY,QAAmBoD,GAE5FrD,IAAS,UAEf,SAAS8mC,GAAoCzlC,GAC3C,MAAM,KACJq+B,EAAI,WACJC,EAAU,OACV1b,EAAM,gBACN2b,EAAe,MACf9wB,EAAK,MACLwW,EAAK,WACLyhB,EAAU,KACVj1B,EAAI,QACJmJ,EAAU,YACR5Z,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C2lC,EAAiB,CACrBl4B,QACAwW,QACAyhB,aACAj1B,OACAmJ,WAEIjY,GAAK,EAAAk9B,GAAA,KACLnc,GAAY,EAAAC,EAAA,KACZijB,EAAiBvH,EAAK+G,YAAcxiB,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aAAe,KACjFS,EAAuB,WAAc,IACjB,MAAlBD,GAA0BA,EAAe9B,aAIJ,mBAAhC8B,EAAe9B,aACjB8B,EAAe9B,aAAa,CACjC/C,MAAO6E,EAAe7E,QAInB6E,EAAe9B,aATb,IAUR,CAAC8B,IACEE,EAAgC,WAAc,IACnB,MAAxBD,OAA+B,EAASA,EAAqBhvB,IAAI,OACvE,CAACgvB,KACE,eACJhI,EAAc,MACdkD,GACEne,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aAE5BW,EAA6BnnC,GACX,iBAAXA,EACFA,EAAO4C,MAGTq8B,GAA6B,KAAXj/B,EAAgBi/B,EAAe,CACtD77B,MAAOpD,EACPmiC,QACAzc,IAAK1B,EAAOljB,UACTd,EAKDonC,EAAe,WAAc,KACjC,IAAK19B,MAAMC,QAAQ81B,EAAKr8B,OACtB,MAAO,GAGT,QAA6BwJ,IAAzBq6B,EAAoC,CAOtC,OANyBxH,EAAKr8B,MAAM6U,KAAI/Q,IAEtC,MAAMmgC,GAAmB,QAAmBngC,GAE5C,OADgD,MAAjCggC,OAAwC,EAASA,EAA8B9mC,WAAUknC,GAAkBA,IAAmBD,MAAsB,CACvJ,IAEUtnC,QAAOuG,GAASA,GAAS,IAAG2R,KAAI3R,GAAS2gC,EAAqB3gC,IACxF,CAEA,OAAOm5B,EAAKr8B,KAAK,GAChB,CAACq8B,EAAKr8B,MAAO6jC,EAAsBC,IACtC,aAAgB,KACTx9B,MAAMC,QAAQ81B,EAAKr8B,QAAUgkC,EAAa5mC,SAAWi/B,EAAKr8B,MAAM5C,QAEnEk/B,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,MAAOgkC,EAAanvB,IAAI,QAE5B,GACC,CAACwnB,EAAM2H,EAAc1H,IACxB,MAAMuD,EAAe,eAAkB,CAAC79B,EAAOhC,KAC7Cs8B,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,MAAO,IAAIA,EAAM6U,IAAI,SACpB,GACF,CAACynB,EAAYD,IAChB,OAAoB,SAAK8H,GAAA,GAAc,OAAS,CAC9CvlC,UAAU,EACVvC,QAASwnC,EACT9jC,qBAAsBA,GACtBZ,cAAexC,GACfgD,GAAIA,EACJK,MAAOgkC,EACP/jC,SAAU4/B,EACVrrB,WAAY,CAACxU,EAAOgK,IAAgBhK,EAAM6U,KAAI,CAACjY,EAAQsG,KAAuB,SAAK4R,GAAA,GAAM,OAAS,CAChG8C,QAAS,WACTnJ,KAAM,QACNjP,MAAOukC,EAA2BnnC,IACjCoN,EAAY,CACb9G,cAEFmR,YAAaO,IACX,IAAImO,EAEJ,OAAoB,SAAKrC,EAAUsC,WAAWia,eAAe,OAAS,CAAC,EAAGroB,EAAQ,CAChFpV,MAAOohB,EAAOljB,QAAQ+5B,cAAc,yBACpCyF,YAAatc,EAAOljB,QAAQ+5B,cAAc,+BAC1CliB,iBAAiB,OAAS,CAAC,EAAGX,EAAOW,gBAAiB,CACpD4nB,QAAQ,IAEVn8B,SAAUu7B,EACVhlB,KAAM,gBACLosB,EAAuE,OAAtD5gB,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBsa,eAAe,GAEhIn2B,GACL,CCnIA,MAAMk9B,GAAmBpkC,GACV,MAATA,GAAkC,iBAAVA,EACnBA,EAGFA,EAAMA,MCJFqkC,IAA6B,OAAS,CAAC,EAAG,KAAqB,CAC1E9sB,KAAM,eACNopB,eJ2QwC/rB,IAAuB,SAAKwsB,IAA0B,OAAS,CAAC,EAAGxsB,II1Q3GmnB,gBDwDgD,CAAC,CACjD/7B,MAAO,KACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAsC,KAArBg7B,EAAWh7B,MAClC,KAGF,EACLA,WACIokC,GAAiBpkC,KAAWokC,GAAiBpJ,EAAWh7B,OAEhEk7B,eAAgBgI,IACf,CACDljC,MAAO,MACP+6B,iBAAkBC,GACQ,MAApBA,EAAWh7B,OAAsC,KAArBg7B,EAAWh7B,MAClC,KAGF,EACLA,WACIokC,GAAiBpkC,KAAWokC,GAAiBpJ,EAAWh7B,OAEhEk7B,eAAgBgI,IACf,CACDljC,MAAO,UACP+6B,iBAAkBC,IAChB,IAAK10B,MAAMC,QAAQy0B,EAAWh7B,QAAsC,IAA5Bg7B,EAAWh7B,MAAM5C,OACvD,OAAO,KAGT,MAAMknC,EAAmBtJ,EAAWh7B,MAAM6U,IAAIuvB,IAC9C,MAAO,EACLpkC,WACIskC,EAAiBhJ,SAAS8I,GAAiBpkC,GAAO,EAE1Dk7B,eAAgBuI,KC3FhBzH,sBDG8C,CAACh8B,EAAOukC,EAAQ3jB,KAC9D,IAAK5gB,EACH,OAAO,KAGT,MAAM,aACJ8hC,EAAY,eACZjG,EAAc,MACdkD,GACEwF,EACEC,EAAkB,CAACJ,GAAiBpkC,GAAOgzB,YAC3CyR,EAA+C,mBAAjB3C,EAA8BA,EAAa,CAC7E/C,UACG+C,GAAgB,GAiCrB,OA/BI2C,GACFA,EAAqB5f,SAAQjoB,IAE3B,IAAI8nC,EACA9jC,EAEkB,iBAAXhE,GACT8nC,EAAc9nC,EAAOoD,MACrBY,EAAchE,EAAO4C,QAErBklC,EAAc9nC,EAGZgE,EADEi7B,EACYA,EAAe,CAC3B77B,MAAOpD,EACPmiC,QACAzc,IAAK1B,EAAOljB,UAGAd,GAIdgE,EAAY7D,MAAM,EAAGiD,EAAM5C,QAAQX,gBAAkBuD,EAAMvD,gBACxD+nC,EAAgBlJ,SAASoJ,IAC5BF,EAAgBh+B,KAAKk+B,EAAY1R,YAErC,IAIG,EACLhzB,MAAOi8B,KAEe,MAAfA,GAAsBuI,EAAgBlJ,SAAS8I,GAAiBnI,GAAajJ,WACrF,I,2EE3DH,MAAM,GAAY,CAAC,OAAQ,SAAU,cAAe,WAAY,WAAY,YAAa,YA0BnF2R,IAAe,EAAAv5B,EAAA,IAAOoF,GAAA,EAAQ,CAClC9O,KAAM,cACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOs5B,MAH1B,EAIlB,EACD54B,YACI,CACJoB,OAAQpB,EAAMoB,OAAOwD,MACrB,CAAC,MAAM,gBAAyB,CAC9BiB,QAAS,OAGPgzB,GAAkB,CACtB,eAAgB,WAChB,aAAc,aAGVC,GAAW9mC,IACf,IAAI+kB,EAEJ,MAAM,KACJziB,EAAI,OACJsH,EAAM,YACNm9B,EAAW,SACXhwB,EAAQ,SACR7H,EAAQ,UACRQ,EAAS,SACTs3B,GACEhnC,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACTqkB,EAAa,SAAar9B,GAC1Bs9B,EAAW,SAAa5kC,GACxBogB,GAAY,EAAAC,EAAA,KAIZ/S,EAhDkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,SAEoB,IAAyBoC,EAAQ,EAyC9C,CAHG,CACjBA,QAAS8S,EAAU9S,UAGrB,aAAgB,KACVs3B,EAASxnC,SAAWunC,EAAWvnC,SACjCunC,EAAWvnC,QAAQqF,QAIrB,MAAMksB,EAAY3uB,EAAO,WAAa,YACtCsgB,EAAOljB,QAAQqtB,aAAakE,EAAW,CACrCrnB,WAEFs9B,EAASxnC,QAAU4C,EACnB2kC,EAAWvnC,QAAUkK,CAAM,GAC1B,CAACgZ,EAAQtgB,EAAMsH,IAYlB,OAAoB,SAAK+8B,IAAc,OAAS,CAC9C32B,GAAI0S,EAAUsC,WAAWmiB,WACzBz3B,WAAW,OAAKA,EAAWE,EAAQpC,MACnClL,KAAMA,EACNW,SAAU2G,EACV2Q,YAAY,EACZ6sB,UAAWl4B,GACVhG,EAA8D,OAAtD6b,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBsiB,WAAY,CACjHtwB,SAAU,EACRuwB,kBACAF,gBACiB,gBAAKG,GAAA,EAAmB,CACzCR,YAAaA,EACbS,WAAY,cACZzwB,UAAuB,SAAK0wB,GAAA,GAAM,OAAS,CAAC,EAAGH,EAAiB,CAC9D3vB,MAAO,CACLkvB,gBAAiBA,GAAgBO,IAEnCJ,UA5BeU,EA4B2B,MAAnBJ,OAA0B,EAASA,EAAgBN,SA5BzCn/B,IACjC6/B,GACFA,IAGEV,GACFA,EAASn/B,EACX,GAsBIkP,UAAuB,SAAKjE,GAAA,EAAO,CACjCiE,SAAUA,SA9BG2wB,KAkCrB,IAAG,ECjHC,GAAY,CAAC,SAAU,KAAM,MAAO,WAAY,aAAc,QAAS,QAAS,iBAAkB,MAAO,UAAW,WAAY,WAAY,WAAY,WAAY,mBAepKC,GAAkB3nC,IACtB,MAAM,OACJghC,EAAM,GACNr/B,EAAE,SACFs/B,EAAQ,SACRn1B,EAAQ,SACRoD,EAAW,aAAY,gBACvBqvB,GACEv+B,EACEkJ,GAAQ,OAA8BlJ,EAAO,KAE5C4nC,EAAoBC,GAAyB,YAAgB,IAC7DvlC,EAAMmhC,GAAW,YAAe,GACjC7gB,GAAS,SACT6G,EAAU,SAAa,MACvBqe,EAAY,SAAa,MACzBC,EAAoB,UAAa,GACjCC,EAAkB,SAAa,CAAC,GAChCC,GAAS,EAAApJ,GAAA,KACTqJ,GAAW,EAAArJ,GAAA,KACXnc,GAAY,EAAAC,EAAA,KAwClB,GAvCA,mBAAsB,KACfse,GACH7R,OAAO4J,QAAQgP,EAAgBtoC,SAASmnB,SAAQ,EAAE3hB,EAAOuG,MAChD,MAAPA,GAAuBA,EAAI08B,KAAK,CAAC,GAAG,YAC3BH,EAAgBtoC,QAAQwF,EAAM,GACrC,GAEN,GACC,CAAC+7B,IACJ,aAAgB,KACd,GAAI2G,EAAqB,IAAMne,EAAQ/pB,QACrC,OAGF,GAAIkoC,GAAsBne,EAAQ/pB,QAAQqX,SAAS3X,OACjD,OAGYqqB,EAAQ/pB,QAAQqX,SAAS6wB,GACjC7iC,MAAM,CACVqjC,eAAe,GACf,GACD,CAACR,IACJ,aAAgB,KACT3G,IACH4G,GAAuB,GACvBE,EAAkBroC,SAAU,EAC9B,GACC,CAACuhC,IACJ,sBAA0B1C,GAAiB,KAAM,CAC/Cx5B,QAEOgjC,EAAkBroC,SACrBmoC,EAAsB,EAE1B,KAEE,KA5Da7G,IAAuC,mBAAtBA,EAAOqH,WA8DpCC,CAAWtH,GACd,MAAM,IAAItS,MAAM,+DAGlB,MAAMrwB,EAAU2iC,EAAOqH,WAAWzlB,EAAOljB,QAAQ6oC,aAAa5mC,IACxD6mC,EAAcnqC,EAAQM,QAAOC,IAAWA,EAAOoB,MAAMyoC,aACrDC,EAAcrqC,EAAQM,QAAOC,GAAUA,EAAOoB,MAAMyoC,aACpDE,EAAkBH,EAAYppC,QAAUspC,EAAYtpC,OAAS,EAAI,GACvE,aAAgB,KACVwoC,GAAsBe,GACxBd,EAAsBc,EAAkB,EAC1C,GACC,CAACf,EAAoBe,IAExB,MAMMC,EAAW,KACfnF,GAAQ,EAAM,EAGVoF,EAAuB3jC,GAAS4jC,IACpCd,EAAgBtoC,QAAQwF,GAAS4jC,CAAQ,EAGrCC,EAAoB,CAAC7jC,EAAOgG,IAAYlH,IAC5C6jC,EAAsB3iC,GACtB6iC,EAAkBroC,SAAU,EAExBwL,GACFA,EAAQlH,EACV,EAuCF,OAAoB,UAAM,OAAO,OAAS,CACxC4H,KAAM,OACNH,IAAKge,EACL3d,UAAW,EACX4D,UAAW,gBACXvG,UAzCwBnF,IACxB,GAAI2kC,GAAmB,EACrB,OAGF,IAAI9hC,EAAW+gC,EAEG,eAAd5jC,EAAMqF,IACRxC,GAAY,EACW,cAAd7C,EAAMqF,MACfxC,GAAY,GAGVA,EAAW,GAAKA,GAAY8hC,GAI5B9hC,IAAa+gC,IACf5jC,EAAMuF,iBAENvF,EAAMwF,kBAENq+B,EAAsBhhC,GACxB,GAmBCqC,EAAO,CACR6N,SAAU,CAACyxB,EAAY3xB,KAAI,CAACmyB,EAAQ9jC,IAAuB,eAAmB8jC,EAAQ,CACpF3/B,IAAKnE,EACL+jC,eAAgBJ,EAAqB3jC,GACrCgG,QAAS69B,EAAkB7jC,EAAO8jC,EAAOhpC,MAAMkL,SAC/CY,SAAU87B,IAAuB1iC,EAAQ4G,GAAY,MAClD48B,EAAYtpC,OAAS,GAAK8oC,IAAyB,SAAKl2B,GAAA,EAAY,CACvEvG,IAAKq8B,EACLnmC,GAAIumC,EACJ,aAActlB,EAAOljB,QAAQ+5B,cAAc,mBAC3C,gBAAiBwO,EACjB,gBAAiB3lC,EAAO,YAASkJ,EACjC,gBAAiB,OACjBI,KAAM,WACN6E,KAAM,QACNvF,QAhFa,KACfu4B,GAAQ,GACRoE,EAAsBc,EAAkB,GACxCZ,EAAkBroC,SAAU,CAAI,EA8E9BupC,eAAgBJ,EAAqBX,GACrCp8B,SAAU87B,IAAuBY,EAAYppC,OAAS0M,GAAY,EAClEiL,UAAuB,SAAK2L,EAAUsC,WAAWkkB,gBAAiB,CAChEt6B,SAAU,YAEV85B,EAAYtpC,OAAS,IAAkB,SAAK0nC,GAAU,CACxDC,YAAa6B,EACb19B,QAAS09B,EACTtmC,KAAMA,EACNsH,OAAQk+B,EAAUpoC,QAClBwP,SAAUA,EACV6H,UAAuB,SAAKoyB,GAAA,EAAU,CACpCxnC,GAAIsmC,EACJv4B,UAAW,aACXvG,UA9CoBnF,IACN,QAAdA,EAAMqF,KACRrF,EAAMuF,iBAGJ,CAAC,MAAO,QAAS,UAAU+zB,SAASt5B,EAAMqF,MAC5Cu/B,GACF,EAwCI,kBAAmBV,EACnBtuB,QAAS,OACTwvB,eAAe,EACfryB,SAAU2xB,EAAY7xB,KAAI,CAACmyB,EAAQ9jC,IAAuB,eAAmB8jC,EAAQ,CACnF3/B,IAAKnE,aAIV,EChMQmkC,GAA2B,UAC3BC,IAAuB,OAAS,CAAC,EAAG,KAAqB,CACpEC,UAAU,EACVC,YAAY,EAEZC,YAAY,EACZ54B,MAAO,IACP4sB,MAAO,SACPC,YAAa,SACbgM,WAAY,GACZC,mBAAmB,EACnBC,eAAe,EACfC,WDwQ+BjzB,IAAuB,SAAK+wB,IAAiB,OAAS,CAAC,EAAG/wB,ICvQzFonB,2BAAuBxyB,ICVZs+B,GAA4B,cCF5BC,GAA+B,CAAC,WAAY,WAAY,QAAS,QACjEC,GAAqB,CAACC,EAAoB,CAAC,KACtD,MAAMC,GAAoB,OAAS,CAAC,EDEV,CACxBxsC,OAAQ,KACRysC,OAAQ3M,GACRyE,KAAMQ,GACN2H,SAAUxH,GACVyH,QAAS,KACTC,aAAcjE,GACd,CAACgD,IAA2BC,GAC5B,CAACQ,IAA4B,OCD/B,OAPA1a,OAAO4J,QAAQiR,GAAmBpjB,SAAQ,EAAE0jB,EAASC,MAC/CN,EAAkBK,GACpBL,EAAkBK,IAAW,OAAS,CAAC,EAAGL,EAAkBK,GAAUC,GAEtEN,EAAkBK,IAAW,OAAS,CAAC,EAAGL,EAAkBM,EAAWC,YAAcX,IAA4BU,EACnH,IAEKN,CAAiB,EA4GnB,MAAMQ,GAAsB,CAACC,EAAUC,KAC5C,MAAMC,EAAgB,CAAC,EACvB,IAAIC,EAAiB,EACjBC,EAA2B,EAC/B,MAAMC,EAAc,GAGpBL,EAASM,IAAIpkB,SAAQue,IACnB,MAAM8F,GAAY,OAAS,CAAC,EAAGP,EAASQ,OAAO/F,IAE/C,IAAoD,IAAhDuF,EAASS,sBAAsBhG,GACjC8F,EAAUG,cAAgB,MACrB,CACL,IAAIA,EAEAH,EAAUpqB,MAAQoqB,EAAUpqB,KAAO,GACrCgqB,GAAkBI,EAAUpqB,KAC5BuqB,EAAgB,EAChBL,EAAYxiC,KAAK0iC,IAEjBG,GAAgB,SAAMH,EAAUr6B,MAAOq6B,EAAUj6B,SAAUi6B,EAAUn6B,UAGvEg6B,GAA4BM,EAC5BH,EAAUG,cAAgBA,CAC5B,CAEAR,EAAczF,GAAe8F,CAAS,IAExC,MAAMI,EAAmBxkC,KAAKs4B,IAAIwL,EAAqBG,EAA0B,GAEjF,GAAID,EAAiB,GAAKF,EAAqB,EAAG,CAChD,MAAMW,EApIH,UAAiC,iBACtCD,EAAgB,eAChBR,EAAc,YACdE,IAEA,MAAMQ,EAAoB,CACxBP,IAAK,CAAC,EACNQ,aAAc,GACdC,OAAQ3K,IACN,MAAM/+B,EAAQwpC,EAAkBP,IAAIlK,GAEhC/+B,IAA0B,IAAjBA,EAAM2pC,SACjBH,EAAkBP,IAAIlK,GAAO4K,QAAS,EACtCH,EAAkBC,aAAajjC,KAAKu4B,GACtC,GA6EJ,OAzEA,SAAS6K,IAEP,GAAIJ,EAAkBC,aAAarsC,SAAW4rC,EAAY5rC,OACxD,OAGF,MAAMysC,EAAmB,CACvBC,IAAK,CAAC,EACN1M,IAAK,CAAC,GAER,IAAI2M,EAAqBT,EACrBU,EAAYlB,EACZmB,EAAiB,EAErBT,EAAkBC,aAAa5kB,SAAQka,IACrCgL,GAAsBP,EAAkBP,IAAIlK,GAAOsK,cACnDW,GAAaR,EAAkBP,IAAIlK,GAAOjgB,IAAI,IAGhD,IAAK,IAAI3hB,EAAI,EAAGA,EAAI6rC,EAAY5rC,OAAQD,GAAK,EAAG,CAC9C,MAAMonC,EAASyE,EAAY7rC,GAE3B,GAAIqsC,EAAkBP,IAAI1E,EAAOxF,SAAyD,IAA/CyK,EAAkBP,IAAI1E,EAAOxF,OAAO4K,OAE7E,SAKF,IAAIN,EADqBU,EAAqBC,EACPzF,EAAOzlB,KAE1CuqB,EAAgB9E,EAAOt1B,UACzBg7B,GAAkB1F,EAAOt1B,SAAWo6B,EACpCA,EAAgB9E,EAAOt1B,SACvB46B,EAAiBC,IAAIvF,EAAOxF,QAAS,GAC5BsK,EAAgB9E,EAAOx1B,WAChCk7B,GAAkB1F,EAAOx1B,SAAWs6B,EACpCA,EAAgB9E,EAAOx1B,SACvB86B,EAAiBzM,IAAImH,EAAOxF,QAAS,GAGvCyK,EAAkBP,IAAI1E,EAAOxF,OAAS,CACpC4K,QAAQ,EACRN,gBACAvqB,KAAMylB,EAAOzlB,KAEjB,CAGImrB,EAAiB,EAEnB7c,OAAOC,KAAKwc,EAAiBzM,KAAKvY,SAAQka,IACxCyK,EAAkBE,OAAO3K,EAAM,IAExBkL,EAAiB,EAE1B7c,OAAOC,KAAKwc,EAAiBC,KAAKjlB,SAAQka,IACxCyK,EAAkBE,OAAO3K,EAAM,IAIjCiK,EAAYnkB,SAAQ,EAClBka,YAEAyK,EAAkBE,OAAO3K,EAAM,IAKnC6K,GACF,CAEAA,GACOJ,EAAkBP,GAC3B,CAwCiCiB,CAAwB,CACnDZ,mBACAR,iBACAE,gBAEF5b,OAAOC,KAAKkc,GAAsB1kB,SAAQka,IACxC8J,EAAc9J,GAAOsK,cAAgBE,EAAqBxK,GAAOsK,aAAa,GAElF,CAEA,OAAO,OAAS,CAAC,EAAGV,EAAU,CAC5BQ,OAAQN,GACR,EAQG,MAwEMsB,GAAqB,EAChCvpB,SACAwpB,kBACAC,eACAC,cACAC,gCAA+B,QAAkC3pB,GACjE4pB,8CACAC,2BAA0B,MAE1B,IAAI7hB,EAAuBC,EAAwB6hB,EAAiB1hB,EAEpE,MAAM2hB,GAA4B/pB,EAAOljB,QAAQkE,MAAMgpC,QACvD,IAAIC,EAEJ,GAAIF,EACFE,EAA2C,CACzC5B,IAAK,GACLE,OAAQ,CAAC,OAEN,CACL,MAAM2B,GAAe,EAAAC,EAAA,IAAoBnqB,EAAOljB,QAAQkE,OACxDipC,EAA2C,CACzC5B,IAAKwB,EAA0B,GAAK,IAAIK,EAAa7B,KACrDE,QAAQ,OAAS,CAAC,EAAG2B,EAAa3B,QAGtC,CAEA,IAAI6B,EAAgB,CAAC,EAEjBP,IAA4BE,IAC9BK,EAAgB5d,OAAOC,KAAKwd,EAAyC1B,QAAQtgC,QAAO,CAACC,EAAKzB,KAAQ,OAAS,CAAC,EAAGyB,EAAK,CAClH,CAACzB,IAAM,KACL,CAAC,IAGP,MAAM4jC,EAAwB,CAAC,EAC/Bb,EAAgBvlB,SAAQqkB,IACtB,MAAM,MACJnK,GACEmK,EACJ+B,EAAsBlM,IAAS,EAC/BiM,EAAcjM,IAAS,EACvB,IAAImM,EAAgBL,EAAyC1B,OAAOpK,GAE/C,MAAjBmM,GAEFA,GAAgB,OAAS,CAAC,EAjEH,EAACZ,EAAa/yB,IACpCA,GAWA+yB,EAAY/yB,GAIV+yB,EAAY/yB,GAdV+yB,EAAYxC,IA+DYqD,CAAcb,EAAapB,EAAU3xB,MAAO,CAEvEwnB,QACAqM,gBAAgB,IAElBP,EAAyC5B,IAAIziC,KAAKu4B,IACzC0L,GACTI,EAAyC5B,IAAIziC,KAAKu4B,GAGpD,IAAIqM,EAAiBF,EAAcE,eACnCrD,GAA6BljB,SAAQxd,SACZmC,IAAnB0/B,EAAU7hC,KACZ+jC,GAAiB,GAEO,IAApBlC,EAAU7hC,KACZ6hC,EAAU7hC,GAAOgkC,KAErB,IAEFR,EAAyC1B,OAAOpK,IAAS,OAAS,CAAC,EAAGmM,EAAe,CACnFI,KAAwB,MAAlBpC,EAAUoC,MAAuBpC,EAAUoC,MAChDpC,EAAW,CACZkC,kBACA,IAGAX,IAA4BE,GAC9Bvd,OAAOC,KAAKwd,EAAyC1B,QAAQtkB,SAAQka,IAC9DiM,EAAcjM,WACV8L,EAAyC1B,OAAOpK,EACzD,IAIJ,MAAMwM,GAAmC,OAAS,CAAC,EAAGV,EAAyC1B,QAEzFqC,EAAgC5qB,EAAOljB,QAAQk4B,6BAA6B,iBAAkBiV,GAEpG,IAAIzB,EAAwB,CAAC,EAE7B,GAAIoB,EAA6C,CAC/C,IAAIiB,GAAkB,EAEtB,MAAMC,GAA2B,OAAS,CAAC,EAAGnB,GAE1CI,EACFa,EAA8BvC,IAAIpkB,SAAQka,IACxC2M,EAAyB3M,IAAU8L,EAAyC1B,OAAOpK,GAAOuM,IAAI,IAEvFb,GAKTrd,OAAOC,KAAKqe,GAA0B7mB,SAAQka,IACvCyM,EAA8BrC,OAAOpK,YACjC2M,EAAyB3M,GAChC0M,GAAkB,EACpB,IAIJD,EAA8BvC,IAAIpkB,SAAQka,IAGxC,IAAKkM,EAAsBlM,IAAUwM,EAAiCxM,KAAWyM,EAA8BrC,OAAOpK,GACpH,OAOF,IAAI4M,EAAkBpB,EAA6BxL,GAEnD,QAAwBv1B,IAApBmiC,EACF,GAAIhB,EACFgB,GAAkB,MACb,CAELA,KADqB,EAAAZ,EAAA,IAAoBnqB,EAAOljB,QAAQkE,OACvBunC,OAAOpK,EAC1C,CAGF,MAAM6M,GAAkBJ,EAA8BrC,OAAOpK,GAAOuM,KAEhEM,IAAmBD,IACrBF,GAAkB,EAClBC,EAAyB3M,GAAS6M,EACpC,IAIAxC,EADEqC,GAAmBd,EACGe,EAEAnB,CAE5B,MACEnB,EAAwBmB,EAG1B,MAAMsB,EA7NyB,EAACC,EAAczB,KAC9C,IAAKA,EACH,OAAOyB,EAGT,MAAM,cACJC,EAAgB,GAAE,WAClBC,EAAa,CAAC,GACZ3B,EACE4B,EAA+B7e,OAAOC,KAAK2e,GAEjD,GAA4C,IAAxCC,EAA6B7uC,QAAyC,IAAzB2uC,EAAc3uC,OAC7D,OAAO0uC,EAGT,MAAMI,EAAsB,CAAC,EACvBC,EAAqB,GAE3B,IAAK,IAAIhvC,EAAI,EAAGA,EAAI4uC,EAAc3uC,OAAQD,GAAK,EAAG,CAChD,MAAM4hC,EAAQgN,EAAc5uC,GAExB2uC,EAAa3C,OAAOpK,KACtBmN,EAAoBnN,IAAS,EAC7BoN,EAAmB3lC,KAAKu4B,GAE5B,CAEA,MAAMqN,EAAiD,IAA9BD,EAAmB/uC,OAAe0uC,EAAa7C,IAAM,IAAIkD,KAAuBL,EAAa7C,IAAItsC,QAAOoiC,IAAUmN,EAAoBnN,MAEzJsN,GAAkB,OAAS,CAAC,EAAGP,EAAa3C,QAElD,IAAK,IAAIhsC,EAAI,EAAGA,EAAI8uC,EAA6B7uC,OAAQD,GAAK,EAAG,CAC/D,MAAM4hC,EAAQkN,EAA6B9uC,GAErCmvC,GAAY,OAAS,CAAC,EAAGD,EAAgBtN,GAAQ,CACrDqM,gBAAgB,IAGlBhe,OAAO4J,QAAQgV,EAAWjN,IAAQla,SAAQ,EAAExd,EAAKrH,MAC/CssC,EAAUjlC,IAAkB,IAAXrH,EAAeqrC,IAAWrrC,CAAK,IAElDqsC,EAAgBtN,GAASuN,CAC3B,CAMA,MAJwB,CACtBrD,IAAKmD,EACLjD,OAAQkD,EAEY,EA6KkBE,CAAkBf,EAA+BnB,GAEnFyB,GAAe,OAAS,CAAC,EAAGD,EAAiC,CACjEzC,0BAGF,OAAOV,GAAoBoD,EAAwR,OAAzQljB,EAA2G,OAAlFC,GAA0B6hB,EAAkB9pB,EAAOljB,SAASorB,oBAAiH,OAA1EE,EAAyBH,EAAuB9D,KAAK2lB,SAA/D,EAAoG1hB,EAAuBN,kBAAkB7Z,OAAiB+Z,EAAwB,EAAE,EAEzU4jB,GAAoBV,GAAgBlqC,IAAS,OAAS,CAAC,EAAGA,EAAO,CAC5EgpC,QAASkB,IAEJ,SAASW,IAAiC,oBAC/CC,EAAmB,OACnB9rB,EAAM,iBACN+rB,EAAgB,gBAChBC,EAAe,YACfC,IAEA,IAAIC,EAAgCJ,EAEpC,IAAK,IAAIvvC,EAAIwvC,EAAkBxvC,EAAIyvC,EAAiBzvC,GAAK,EAAG,CAG1D,GAFY0vC,EAAY1vC,GAEf,CACP,MAAM4vC,EAAQF,EAAY1vC,GAAGwC,GACvBqtC,EAAkBpsB,EAAOljB,QAAQuvC,4BAA4BF,EAAOL,GAEtEM,GAAmBA,EAAgBE,mBACrCJ,EAAgCE,EAAgBG,qBAEpD,CACF,CAEA,OAAOL,CACT,CACO,SAASM,IAA4B,iBAC1CC,EAAgB,eAChBC,EAAc,aACdC,EAAY,iBACZZ,EAAgB,gBAChBC,EAAe,OACfhsB,EAAM,YACNisB,IAUA,OAP4BJ,GAAiC,CAC3DC,oBAFiC5nC,KAAKs4B,IAAIiQ,EAAmBE,EAAcD,GAG3E1sB,SACA+rB,mBACAC,kBACAC,eAGJ,C,gBCvbO,MAAMW,GAA0B,CAAC5rC,EAAO5D,EAAO4iB,KACpD,IAAI6sB,EAAqBC,EAAuBC,EAAsBtX,EAAMuX,EAAuBC,EAAsBC,EAEzH,MAAMC,IAAiC/vC,EAAMorC,yBAA0E,OAA7CqE,EAAsBzvC,EAAMqsC,eAAkF,OAAxDqD,EAAwBD,EAAoB7C,WAAoB8C,EAAsBtE,uBACtNxoB,EAAOljB,QAAQi1B,gBAAgBiY,QAAU,CACvCmD,gCAEF,MAAMC,EAAehG,GAAmBhqC,EAAMssC,aACxCwB,EAAe3B,GAAmB,CACtCvpB,SACA0pB,YAAa0D,EACb5D,gBAAiBpsC,EAAM4sC,QACvBP,aAA6D,OAA9CsD,EAAuB3vC,EAAMqsC,mBAAwB,EAASsD,EAAqB/C,QAClGJ,6CAA8CuD,EAC9CxD,6BAAuT,OAAxRlU,EAAgE,OAAxDuX,EAAwB5vC,EAAMorC,uBAAiCwE,EAAuE,OAA9CC,EAAuB7vC,EAAMqsC,eAA2F,OAAzDyD,EAAwBD,EAAqBjD,cAAvD,EAAmFkD,EAAsB1E,uBAAiC/S,EAAO,CAAC,EACtUoU,yBAAyB,IAE3B,OAAO,OAAS,CAAC,EAAG7oC,EAAO,CACzBgpC,QAASkB,GACT,ECtBJ,IAAImC,GCPG,SAASC,GAAOroC,GACrB,YAAsB2D,IAAf3D,EAAKk5B,KACd,EDOA,SAAWkP,GACTA,EAA0B,QAAI,UAC9BA,EAA2B,SAAI,WAC/BA,EAA8B,YAAI,aACnC,CAJD,CAIGA,KAAqBA,GAAmB,CAAC,IEPrC,MACME,IAAiC,EAAApuB,EAAA,IADJne,GAASA,EAAMwsC,iBACgCA,GAAkBA,EAAejF,SCLpH,GAAY,CAAC,UAAW,YAW9B,MAAMkF,GAAqC,CAACC,EAAiBC,EAASC,KACpE,GAAIN,GAAOI,GAAkB,CAC3B,QAA+D9kC,IAA3DglC,EAAgCF,EAAgBvP,OAClD,MAAM,IAAIrS,MAAM,CAAC,qDAAsD,gBAAgB4hB,EAAgBvP,iDAAkD,KAAKyP,EAAgCF,EAAgBvP,OAAO3K,KAAK,SAAU,KAAKma,EAAQna,KAAK,UAAUA,KAAK,OAIvQ,YADAoa,EAAgCF,EAAgBvP,OAASwP,EAE3D,CAEA,MAAM,QACJE,EAAO,SACP15B,GACEu5B,EACJv5B,EAAS8P,SAAQ6pB,IACfL,GAAmCK,EAAO,IAAIH,EAASE,GAAUD,EAAgC,GACjG,EAUSG,GAA4BC,IACvC,IAAKA,EACH,MAAO,CAAC,EAGV,MAAMC,EAAmB,CAAC,EAI1B,OAHAD,EAAoB/pB,SAAQypB,IAC1BD,GAAmCC,EAAiB,GAAIO,EAAiB,IAEpEA,CAAgB,EAGnBC,GAAoBF,IACxB,IAAIG,EAAc,CAAC,EAkCnB,OAjCAH,EAAoB/pB,SAAQhf,IAC1B,GAAIqoC,GAAOroC,GACT,OAGF,MAAM,QACJ4oC,EAAO,SACP15B,GACElP,EACEqB,GAAQ,OAA8BrB,EAAM,IAElD,IAAK4oC,EACH,MAAM,IAAI/hB,MAAM,yFAGb3X,GACHyX,QAAQL,KAAK,sBAAsBsiB,sBAGrC,MAAMO,GAAa,OAAS,CAAC,EAAG9nC,EAAO,CACrCunC,YAGIQ,EAAgBH,GAAkB/5B,GAExC,QAA+BvL,IAA3BylC,EAAcR,SAAmDjlC,IAAzBulC,EAAYN,GACtD,MAAM,IAAI/hB,MAAM,oBAAoB+hB,wDAGtCM,GAAc,OAAS,CAAC,EAAGA,EAAaE,EAAe,CACrD,CAACR,GAAUO,GACX,KAEG,OAAS,CAAC,EAAGD,EAAY,EAGrBG,GAA+B,CAACttC,EAAO5D,KAClD,IAAImxC,EAEJ,MAAMJ,EAAcD,GAAyE,OAAtDK,EAAwBnxC,EAAM4wC,qBAA+BO,EAAwB,IAC5H,OAAO,OAAS,CAAC,EAAGvtC,EAAO,CACzBwsC,eAAgB,CACdjF,OAAQ4F,EACRK,oBAAqB,CAAC,IAExB,ECrFEC,GAAyB,CAACC,EAAYC,EAAiBC,EAAcC,KACzE,OAAQH,GACN,KAAKrB,GAAiByB,QACpB,MAAO,CACL1vC,MAAOsvC,EACPnvB,aAAcrb,KAAK6qC,MARW,GAQLJ,GACzBtvB,UAAWnb,KAAK6qC,MATc,GASRH,GACtBnvB,uBAAwBovB,EACxBlvB,OAX8B,IAclC,KAAK0tB,GAAiB2B,YACpB,MAAO,CACL5vC,MAAOsvC,EACPnvB,aAAcrb,KAAK6qC,MAhBe,IAgBTJ,GACzBtvB,UAAWnb,KAAK6qC,MAjBkB,IAiBZH,GACtBnvB,uBAAwBovB,EACxBlvB,OAnBkC,KAsBtC,QACE,MAAO,CACLvgB,MAAOsvC,EACPnvB,aAAcovB,EACdtvB,UAAWuvB,EACXnvB,uBAAwBovB,EACxBlvB,OAAQ,GAEd,EAGWsvB,GAA0B,CAACjuC,EAAO5D,KAG7C,IAAI8xC,EAEJ,GAAiC,MAA7B9xC,EAAM4wC,qBAAiF,IAAlDxhB,OAAOC,KAAKrvB,EAAM4wC,qBAAqBxxC,OAC9E0yC,EAAW,MACN,CACL,MAAMC,EAA+BpB,GAA0B3wC,EAAM4wC,qBAC/D9C,EAAelqC,EAAMgpC,QACrB/pB,EAAiBirB,EAAa7C,IAAItsC,QAAOoiC,IAAuD,IAA9C+M,EAAa1C,sBAAsBrK,KAGzF+Q,EAD4B,IAA1BjvB,EAAezjB,OACN,EAEA0H,KAAKs4B,OAAOvc,EAAehM,KAAIkqB,IACxC,IAAIiR,EAAuBC,EAE3B,OAAoJ,OAA5ID,EAA0F,OAAjEC,EAAyBF,EAA6BhR,SAAkB,EAASkR,EAAuB7yC,QAAkB4yC,EAAwB,CAAC,IAG1L,CAEA,OAAO,OAAS,CAAC,EAAGpuC,EAAO,CACzBie,QAASwvB,GAAuBrxC,EAAM6hB,QAAS7hB,EAAMmiB,aAAcniB,EAAMiiB,UAAW6vB,IACpF,E,gBClEJ,MAAMI,GAAqB,CAAClwC,EAAOmwC,KACjC,GAAqB,iBAAVnwC,EAAoB,CAC7B,MAAMijC,EAAiBjjC,EAAMpE,QAAQ,KAAM,MAE3C,MAAI,CAACu0C,EAAoB,KAAM,MAAM3tC,MAAKy2B,GAAagK,EAAe3H,SAASrC,KACtE,IAAIgK,KAGNA,CACT,CAEA,OAAOjjC,CAAK,EAKRowC,KAF8B,KAAAC,GAAa,CAAC,mIAAoI,gFAEjK,CAAC1wC,EAAIirC,EAASlI,EAAeyN,IAAuBvF,EAAQ/1B,KAAI0vB,IACnF,MAAM+L,EAAa5N,EAAc/iC,EAAI4kC,EAAOxF,OAQ5C,OAAOmR,GAAmBI,EAAWrN,eAAgBkN,EAAmB,KCzBnE,MAAMI,GAAqB,EAChC3vB,SACAvkB,cAEA,MAAMuuC,GAAU,QAA8BhqB,GAE9C,GAAIvkB,EAAQm0C,OACV,OAAOn0C,EAAQm0C,OAAO37B,KAAIkqB,GAAS6L,EAAQ3T,MAAKsN,GAAUA,EAAOxF,QAAUA,MAAQpiC,QAAO4nC,KAAYA,IAIxG,OADqBloC,EAAQo0C,WAAa7F,GAAU,QAAqChqB,IACrEjkB,QAAO4nC,IAAWA,EAAOqD,eAAc,EAEhD8I,GAAyB,EACpC9vB,aAEA,IAAI+vB,EAAiBC,EAErB,MAAMC,GAAuB,QAAiCjwB,GACxDkwB,GAAU,QAAoBlwB,GAC9BmwB,EAAenwB,EAAOljB,QAAQq7B,kBAC9BiY,EAAWH,EAAqBl0C,QAAOgD,IAC3C,IAAIsxC,EAEJ,MAAmG,UAA1C,OAAhDA,EAAuBH,EAAQnxC,GAAIuN,UAAoB+jC,EAAuB,OAAkB,IAErGC,GAAa,QAAuBtwB,GACpCuwB,GAAkC,MAAdD,GAAoE,OAArCP,EAAkBO,EAAW/jC,UAAvC,EAA+DwjC,EAAgB97B,KAAIwJ,GAAOA,EAAI1e,OAAQ,GAC/IyxC,GAAqC,MAAdF,GAA0E,OAA3CN,EAAqBM,EAAW/nB,aAA1C,EAAqEynB,EAAmB/7B,KAAIwJ,GAAOA,EAAI1e,OAAQ,GAIjK,OAHAqxC,EAASK,WAAWF,GACpBH,EAASxqC,QAAQ4qC,GAEbL,EAAatiC,KAAO,EACfuiC,EAASr0C,QAAOgD,GAAMoxC,EAAahgB,IAAIpxB,KAGzCqxC,CAAQ,ECrCX,GAAY,CAAC,WAAY,WACzBM,GAAa,CAAC,WAAY,WAQnBC,GAAwBvzC,IACnC,MAAM4iB,GAAS,UAET,SACJgmB,EAAQ,QACRvqC,GACE2B,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAEnD,OAAoB,SAAKglC,GAAA,GAAU,OAAS,CAC1C95B,QAAS,KACP0X,EAAOljB,QAAQ8zC,gBAAgBn1C,GACnB,MAAZuqC,GAA4BA,GAAU,GAEvC1/B,EAAO,CACR6N,SAAU6L,EAAOljB,QAAQ+5B,cAAc,sBACtC,EAEQga,GAA0BzzC,IACrC,MAAM4iB,GAAS,UAET,SACJgmB,EAAQ,QACRvqC,GACE2B,EACEkJ,GAAQ,OAA8BlJ,EAAOszC,IAEnD,OAAoB,SAAKtO,GAAA,GAAU,OAAS,CAC1C95B,QAAS,KACP0X,EAAOljB,QAAQg0C,kBAAkBr1C,GACrB,MAAZuqC,GAA4BA,GAAU,GAEvC1/B,EAAO,CACR6N,SAAU6L,EAAOljB,QAAQ+5B,cAAc,wBACtC,EC5BQka,GAAmB/wB,IAC9B,MAAMc,EAASD,EAAcb,EAAQ,oBAC/BoY,EAAe,eAAkB,CAAC38B,EAAU,CAAC,KACjD,IAAIu1C,EAAuBC,EAE3BnwB,EAAOuK,MAAM,mBASb,OHAG,SAAkB5vB,GACvB,MAAM,QACJuuC,EAAO,OACPkH,EAAM,cACNpP,EAAa,mBACbyN,EAAkB,eAClBrX,GACEz8B,EACE01C,EAAUD,EAAOjpC,QAAO,CAACC,EAAKnJ,IAAO,GAAGmJ,IAAMsnC,GAAazwC,EAAIirC,EAASlI,EAAeyN,GAAoB/b,KAAK+b,UAA2B,IAAI/zC,OAErJ,OAAK08B,EAKE,GADY8R,EAAQjuC,QAAO4nC,GAAUA,EAAOxF,QAAU,aAAuClqB,KAAI0vB,GAAU2L,GAAmB3L,EAAOmD,YAAcnD,EAAOxF,MAAOoR,KAAqB/b,KAAK+b,SAC9K4B,IAAU31C,OAJrB21C,CAKX,CGhBWC,CAAS,CACdpH,QATsB2F,GAAmB,CACzC3vB,SACAvkB,YAQAy1C,QAN2E,OAApDF,EAAwBv1C,EAAQ41C,iBAA2BL,EAAwBlB,IACrE,CACrC9vB,WAKA8hB,cAAe9hB,EAAOljB,QAAQglC,cAC9ByN,mBAAoB9zC,EAAQ48B,WAAa,IACzCH,eAAoE,OAAnD+Y,EAAwBx1C,EAAQy8B,iBAA0B+Y,GAC3E,GACD,CAACnwB,EAAQd,IACN4wB,EAAkB,eAAkBn1C,IACxCqlB,EAAOuK,MAAM,sBACb,MAAMimB,EAAMlZ,EAAa38B,IC/BtB,SAAkB81C,EAAMC,EAAY,MAAOC,EAAWx0C,SAAS4X,OAAS,YAC7E,MAAM68B,EAAW,GAAGD,KAAYD,IAGhC,GAAI,aAAcG,kBAAkB5gB,UAAW,CAE7C,MAAM6gB,EAAMC,IAAIC,gBAAgBP,GAE1BQ,EAAI90C,SAAS0nB,cAAc,KAWjC,OAVAotB,EAAEl3B,KAAO+2B,EACTG,EAAEC,SAAWN,EAIbK,EAAEE,aAEF5kB,YAAW,KACTwkB,IAAIK,gBAAgBN,EAAI,GAG5B,CAEA,MAAM,IAAI9lB,MAAM,8BAClB,CDYIqmB,CAHa,IAAIC,KAAK,CAAY,MAAX32C,GAAmBA,EAAQ42C,YAAc,IAAIC,WAAW,CAAC,IAAM,IAAM,MAAS,GAAIhB,GAAM,CAC7G36B,KAAM,aAEO,MAAkB,MAAXlb,OAAkB,EAASA,EAAQ82C,SAAS,GACjE,CAACzxB,EAAQsX,IAKZjM,GAAiBnM,EAJI,CACnBoY,eACAwY,oBAOF,MAAM4B,EAAuB,eAAkB,CAACC,EAAch3C,KAC5D,IAAIi3C,EAEJ,OAAkD,OAA7CA,EAAsBj3C,EAAQk3C,aAAuBD,EAAoBE,qBACrEH,EAGF,IAAIA,EAAc,CACvB1lC,WAAwB,SAAK4jC,GAAuB,CAClDl1C,QAASA,EAAQk3C,aAEnB70C,cAAe,aACf,GACD,IACH87B,GAA6B5Z,EAAQ,aAAcwyB,EAAqB,E,eEtEnE,MAAMK,GAAuB7xC,GAASA,EAAM8xC,SCkC5C,MAAMC,GAAqB,CAAC/yB,EAAQ5iB,KACzC,MAAM0jB,EAASD,EAAcb,EAAQ,sBAC/BgF,EAAM,SAAa,MACnBguB,EAAoB,SAAa,MACjCC,EAA2B,SAAa,CAAC,GAC/C,aAAgB,KACdjuB,EAAIloB,SAAU,EAAAmoB,GAAA,GAAcjF,EAAOljB,QAAQyjB,eAAezjB,QAAQ,GACjE,CAACkjB,IAGJ,MAAMkzB,EAA4B,eAAkB,CAACtD,EAAQC,IAAe,IAAInO,SAAQC,IAEtF,IAAKiO,IAAWC,EAEd,YADAlO,IAIF,MAAMwR,EAAuBxD,GAAmB,CAC9C3vB,SACAvkB,QAAS,CACPm0C,SACAC,gBAED57B,KAAI0vB,GAAUA,EAAOxF,QAClB6L,GAAU,QAA8BhqB,GACxC8qB,EAA2B,CAAC,EAClCd,EAAQ/lB,SAAQ0f,IACdmH,EAAyBnH,EAAOxF,OAASgV,EAAqBzY,SAASiJ,EAAOxF,MAAM,IAEtFne,EAAOljB,QAAQs2C,yBAAyBtI,GACxCnJ,GAAS,KACP,CAAC3hB,IAECqzB,EAAmB,eAAkBx+B,IACzC,MAAMy+B,EAAWr2C,SAAS0nB,cAAc,UAKxC,OAJA2uB,EAASv+B,MAAMzI,SAAW,WAC1BgnC,EAASv+B,MAAM9G,MAAQ,MACvBqlC,EAASv+B,MAAMyC,OAAS,MACxB87B,EAASz+B,MAAQA,GAAS5X,SAAS4X,MAC5By+B,CAAQ,GACd,IACGC,EAAwB,eAAkB,CAACC,EAAa/3C,KAC5D,IAAIg4C,EAAgBC,EAEpB,MAAMC,GAAmB,OAAS,CAChCC,YAAY,EACZC,aAAa,EACbrpB,YAAY,GACX/uB,GAEGq4C,EAAWN,EAAYO,gBAE7B,IAAKD,EACH,OAGF,MAAMjsB,EAAoBjI,EAAqCI,GACzD8yB,EAAWD,GAAqB7yB,EAAOljB,QAAQkE,OAC/CgzC,EAAkBh0B,EAAOljB,QAAQyjB,eAAezjB,QAChDm3C,EAAYD,EAAgBE,WAAU,GACtCC,EAAoBF,EAAU7xC,cAAc,IAAI,uBAEtD+xC,EAAkBp/B,MAAMyC,OAAS,OACjC28B,EAAkBp/B,MAAM9G,MAAQ,OAChCkmC,EAAkBp3C,cAAcgY,MAAM9G,MAAQ,OAC9CkmC,EAAkBp3C,cAAcgY,MAAMyC,OAAS,OAE9By8B,EAAU7xC,cAAc,IAAI,YACpC2S,MAAM3E,SAAW,UAC1B,MAAMgkC,EAhFV,WACE,MAAMC,EAAM/b,UAAUgc,UAAUjX,MAAM,4BACtC,OAAOgX,EAAMntB,SAASmtB,EAAI,GAAI,IAAM,IACtC,CA6E0BE,GAElBH,GAAiBA,GAAiB,MAEpCH,EAAUl/B,MAAMy/B,QAAU,QAGNP,EAAU7xC,cAAc,IAAI,qBACTA,cAAc,IAAI,0BACxC2S,MAAM9G,MAAQ,OACjC,IAAIwmC,GAAoH,OAAvFhB,EAAiBO,EAAgB5xC,cAAc,IAAI,8BAA2C,EAASqxC,EAAexwC,eAAiB,EACpKyxC,GAAmH,OAAvFhB,EAAkBM,EAAgB5xC,cAAc,IAAI,6BAA0C,EAASsxC,EAAgBzwC,eAAiB,EAGtK,IAAI0xC,EAOAC,EARFjB,EAAiBE,cAGsE,OAAxFc,EAAwBV,EAAU7xC,cAAc,IAAI,0BAAoDuyC,EAAsB/xC,SAC/H6xC,EAA2B,GAGzBd,EAAiBnpB,aAGsE,OAAxFoqB,EAAyBX,EAAU7xC,cAAc,IAAI,yBAAmDwyC,EAAuBhyC,SAChI8xC,EAA0B,GAI5BT,EAAUl/B,MAAMyC,OAAS,GAAGs7B,EAAS+B,uBAAyBhtB,EAAoB4sB,EAA2BC,MAG7G,MAAMpvB,EAAYroB,SAAS0nB,cAAc,OACzCW,EAAUM,YAAYquB,GACtBH,EAASvc,KAAKvR,UAAYV,EAAUU,UACpC,MAAM8uB,EAAyD,mBAA/BnB,EAAiBoB,UAA2BpB,EAAiBoB,YAAcpB,EAAiBoB,UAE5H,GAAgC,iBAArBD,EAA+B,CAExC,MAAME,EAAelB,EAASnvB,cAAc,SAC5CqwB,EAAapvB,YAAYkuB,EAASjuB,eAAeivB,IACjDhB,EAAStuB,KAAKI,YAAYovB,EAC5B,CAMA,GAJIrB,EAAiBsB,eACnBnB,EAASvc,KAAK50B,UAAUI,OAAO4wC,EAAiBsB,cAAczwB,MAAM,MAGlEmvB,EAAiBC,WAAY,CAC/B,MAAMsB,EAAoBlwB,EAAIloB,QAAQq4C,iBAAiB,iCAEvD,IAAK,IAAI54C,EAAI,EAAGA,EAAI24C,EAAkB14C,OAAQD,GAAK,EAAG,CACpD,MAAM0I,EAAOiwC,EAAkB34C,GAE/B,GAAqB,UAAjB0I,EAAKmwC,QAAqB,CAC5B,MAAMC,EAAuBvB,EAASnvB,cAAc1f,EAAKmwC,SACnDE,EAAQrwC,EAAKqwC,MAEnB,GAAIA,EAAO,CACT,IAAIC,EAAW,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMG,SAASj5C,OAAQg5C,GAAK,EACL,iBAA9BF,EAAMG,SAASD,GAAG7vB,UAC3B4vB,GAAY,GAAGD,EAAMG,SAASD,GAAG7vB,eAIrC0vB,EAAqBzvB,YAAYkuB,EAASjuB,eAAe0vB,IACzDzB,EAAStuB,KAAKI,YAAYyvB,EAC5B,CACF,MAAO,GAAIpwC,EAAKpB,aAAa,QAAS,CAEpC,MAAMwxC,EAAuBvB,EAASnvB,cAAc1f,EAAKmwC,SAEzD,IAAK,IAAII,EAAI,EAAGA,EAAIvwC,EAAKywC,WAAWl5C,OAAQg5C,GAAK,EAAG,CAClD,MAAMG,EAAO1wC,EAAKywC,WAAWF,GAEzBG,GACFN,EAAqB5yC,aAAakzC,EAAKC,SAAUD,EAAKE,WAAa,GAEvE,CAEA/B,EAAStuB,KAAKI,YAAYyvB,EAC5B,CACF,CACF,CAIE7B,EAAYsC,cAAcC,OAC5B,GACC,CAAC/1B,EAAQgF,IACNgxB,EAA8B,eAAkBxC,IACpD,IAAIyC,EAAuBC,EAG3BlxB,EAAIloB,QAAQy6B,KAAKlR,YAAYmtB,GAE7BxzB,EAAOljB,QAAQq5C,aAAanD,EAAkBl2C,SAAW,CAAC,GAEG,OAAtDm5C,EAAwBjD,EAAkBl2C,UAAgF,OAA3Do5C,EAAyBD,EAAsBjM,UAAoBkM,EAAuB1N,uBAE9JxoB,EAAOljB,QAAQs2C,yBAAyBH,EAAyBn2C,SAGnEkjB,EAAOljB,QAAQ8sB,gCAEfopB,EAAkBl2C,QAAU,KAC5Bm2C,EAAyBn2C,QAAU,CAAC,CAAC,GACpC,CAACkjB,IACE8wB,EAAoB,eAAkB5R,UAG1C,GAFApe,EAAOuK,MAAM,yBAERrL,EAAOljB,QAAQyjB,eAAezjB,QACjC,MAAM,IAAIgvB,MAAM,wCAOlB,GAJAknB,EAAkBl2C,QAAUkjB,EAAOljB,QAAQs5C,cAE3CnD,EAAyBn2C,SAAU,QAAkCkjB,GAEjE5iB,EAAMi5C,WAAY,CACpB,MAAM5tB,GAAkB,QAA4BzI,GACpDA,EAAOljB,QAAQw5C,YAAY7tB,EAC7B,OAEMyqB,EAAqC,MAAXz3C,OAAkB,EAASA,EAAQm0C,OAAmB,MAAXn0C,OAAkB,EAASA,EAAQo0C,YAC9G7vB,EAAOljB,QAAQ6sB,uCArNV,IAAI+X,SAAQC,IACjB9d,uBAAsB,KACpB8d,GAAS,GACT,IAqNF,MAAM6R,EAAcH,EAA4B,MAAX53C,OAAkB,EAASA,EAAQ82C,UAQtEiB,EAAY+C,OAAS,KACnBhD,EAAsBC,EAAa/3C,GACZ+3C,EAAYsC,cAAcU,WAAW,SAC7CvwB,iBAAiB,UAAUwwB,KACH,IAAhBA,EAAIC,SAGvBV,EAA4BxC,EAC9B,GACA,EAGJxuB,EAAIloB,QAAQy6B,KAAK3R,YAAY4tB,EAC/B,GACC,CAACp2C,EAAO0jB,EAAQd,EAAQqzB,EAAkBE,EAAuByC,EAA6B9C,IAIjG/mB,GAAiBnM,EAHM,CACrB8wB,sBAOF,MAAM0B,EAAuB,eAAkB,CAACC,EAAch3C,KAC5D,IAAIk7C,EAEJ,OAAsD,OAAjDA,EAAwBl7C,EAAQm7C,eAAyBD,EAAsB/D,qBAC3EH,EAGF,IAAIA,EAAc,CACvB1lC,WAAwB,SAAK8jC,GAAyB,CACpDp1C,QAASA,EAAQm7C,eAEnB94C,cAAe,eACf,GACD,IACH87B,GAA6B5Z,EAAQ,aAAcwyB,EAAqB,ECrR7DqE,GACH,SADGA,GAEH,SCCV,IAAIC,IAEJ,SAAWA,GACTA,EAAsB,IAAI,MAC1BA,EAAqB,GAAI,IAC1B,CAHD,CAGGA,KAAqBA,GAAmB,CAAC,ICPrC,MAAMC,GAA4B,KAAM,CAC7CC,MAAO,GACPC,aAAcH,GAAiBI,IAC/BC,kBAAmB,GACnBC,yBAA0BN,GAAiBI,MCHhCG,GAAmC,CAACr3B,EAAQsV,EAAcntB,EAAOssB,KAC5E,MAAMsF,EAAuB,eAAkB,KAC7C/Z,EAAOljB,QAAQ25B,mCAAmCnB,EAAcntB,EAAOssB,EAAU,GAChF,CAACzU,EAAQyU,EAAWtsB,EAAOmtB,IAC9BoE,IAAe,KACbK,GAAsB,IAExB,MAAMJ,EAAgB,UAAa,GACnC,aAAgB,KACVA,EAAc78B,QAChB68B,EAAc78B,SAAU,EAExBi9B,GACF,GACC,CAACA,GAAsB,ECHfud,GAAkB,CAAC7b,EAAMzb,KACpC,MAAMu3B,GAAY,OAAS,CAAC,EAAG9b,GAM/B,GAJoB,MAAhB8b,EAAUx4C,KACZw4C,EAAUx4C,GAAKmF,KAAK21B,MAAsB,IAAhB31B,KAAK41B,WAGF,MAA3Byd,EAAUC,cAAuB,CAGnC,MAAM7T,GAAS,QAAyB3jB,GAAQu3B,EAAU/U,aAC1D+U,EAAUC,cAAgB7T,GAAUA,EAAOxI,gBAAgB,GAAG/7B,KAChE,CAEA,OAAOm4C,CAAS,EAEZE,IAAiD,KAAAhI,GAAa,CAAC,0HAA2H,yFAA0F,SACpRiI,IAAkC,KAAAjI,GAAa,wFAAyF,SACxIkI,IAAwC,KAAAlI,GAAa,CAAC,oEAAqE,kEACpHmI,GAAsB,CAACnkB,EAAOokB,EAAiC73B,KAC1E,MAAM83B,EAAkBrkB,EAAMujB,MAAMx6C,OAAS,EAC7C,IAAIw6C,EAEAc,GAAmBD,GACrBJ,KACAT,EAAQ,CAACvjB,EAAMujB,MAAM,KAErBA,EAAQvjB,EAAMujB,MAGhB,MAAMe,EAAqBD,GAAmBd,EAAMp1C,MAAK65B,GAAmB,MAAXA,EAAK18B,KAChEi5C,EAAyBhB,EAAMp1C,MAAK65B,GAA8B,MAAtBA,EAAK+b,gBAUvD,OARIO,GACFL,KAGEM,GACFL,KAGEK,GAA0BD,GACrB,OAAS,CAAC,EAAGtkB,EAAO,CACzBujB,MAAOA,EAAM/iC,KAAIwnB,GAAQ6b,GAAgB7b,EAAMzb,OAI/CyT,EAAMujB,QAAUA,GACX,OAAS,CAAC,EAAGvjB,EAAO,CACzBujB,UAIGvjB,CAAK,EAEDwkB,GAA4B,CAACC,EAAaL,EAAiC73B,IAAWm4B,IAAkB,OAAS,CAAC,EAAGA,EAAgB,CAChJD,YAAaN,GAAoBM,EAAaL,EAAiC73B,KAG3Eo4B,GAA4B,CAAChe,EAAYpa,KAC7C,IAAKoa,EAAWoI,cAAgBpI,EAAWod,cACzC,OAAO,KAGT,MAAM7T,EAAS3jB,EAAOljB,QAAQ2lC,UAAUrI,EAAWoI,aAEnD,IAAKmB,EACH,OAAO,KAGT,IAAI0U,EAEJ,GAAI1U,EAAO3I,YAAa,CACtB,IAAIsd,EAEJ,MAAMC,EAAS5U,EAAO3I,YACtBqd,EAAc3yC,MAAMC,QAAQy0B,EAAWh7B,OAAmD,OAAzCk5C,EAAoBle,EAAWh7B,YAAiB,EAASk5C,EAAkBrkC,KAAIukC,GAAKD,EAAOC,KAAMD,EAAOne,EAAWh7B,MACtK,MACEi5C,EAAcje,EAAWh7B,MAG3B,MAAMq5C,GAAgB,OAAS,CAAC,EAAGre,EAAY,CAC7Ch7B,MAAOi5C,IAGHld,EAAkBwI,EAAOxI,gBAE/B,GAAyB,MAAnBA,IAA2BA,EAAgB3+B,OAC/C,MAAM,IAAIsvB,MAAM,8CAA8C6X,EAAOxF,WAGvE,MAAMua,EAAiBvd,EAAgB9E,MAAKsiB,GAAYA,EAASv5C,QAAUq5C,EAAcjB,gBAEzF,IAAKkB,EACH,MAAM,IAAI5sB,MAAM,6CAA6C6X,EAAOxF,8BAA8Bsa,EAAcjB,mBAGlH,MAAMoB,EAAmBF,EAAeve,iBAAiBse,EAAe9U,GAExE,GAAgC,mBAArBiV,EACT,OAAO,KAQT,MAAO,CACL10B,GANSioB,IACT,MAAMuD,EAAa1vB,EAAOljB,QAAQglC,cAAcqK,EAAOsM,EAAcjW,aACrE,OAAOoW,EAAiBlJ,EAAW,EAKnCjU,KAAMgd,EACP,EAyFUI,GAA+B,CAACX,EAAal4B,KACxD,MAAM84B,EAhFyC,EAACZ,EAAal4B,KAC7D,MAAM,MACJg3B,GACEkB,EACE5jB,EAAW0iB,EAAM/iC,KAAIwnB,GAAQ2c,GAA0B3c,EAAMzb,KAASjkB,QAAOw4B,KAAcA,IAEjG,OAAwB,IAApBD,EAAS93B,OACJ,KAGF,CAAC2vC,EAAO4M,KACb,MAAMC,EAAkB,CAAC,EAKzB,OAJyBD,EAAoBzkB,EAASv4B,QAAO64B,GAAWmkB,EAAkBnkB,EAAQ6G,KAAK+G,eAAgBlO,GACtGrQ,SAAQ2Q,IACvBokB,EAAgBpkB,EAAQ6G,KAAK18B,IAAM61B,EAAQ1Q,GAAGioB,EAAM,IAE/C6M,CAAe,CACvB,EA+DgCC,CAAkCf,EAAal4B,GAC1Ek5B,EAvDyC,EAAChB,EAAal4B,KAC7D,MAAM,kBACJm3B,EAAoB,IAClBe,EAEJ,GAAiC,IAA7Bf,EAAkB36C,OACpB,OAAO,KAGT,MAAM28C,GAAgB,QAAyBn5B,GACzCo5B,EAAyB,CAAC,EAChCD,EAAcl1B,SAAQka,IACpB,MAAMwF,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC/C,EAAkC,MAAVuI,OAAiB,EAASA,EAAOvI,sBAE1DA,IAILge,EAAuBjb,GAASgZ,EAAkBljC,KAAI7U,GAASg8B,EAAsBh8B,EAAOukC,EAAQ3jB,KAAQ,IAG9G,MAAMq5B,EAA6BlC,EAAkBp7C,QAAO,CAACqD,EAAOkD,IAAUkqB,OAAOC,KAAK2sB,GAAwBx3C,MAAKu8B,GAAiD,MAAxCib,EAAuBjb,GAAO77B,OAE9J,OAA0C,IAAtC+2C,EAA2B78C,OACtB,KAGF,CAAC2vC,EAAO4M,KACb,MAAMO,EAAiB,CAAC,EAClBC,EAAwB,GAC9B/sB,OAAOC,KAAK2sB,GAAwBn1B,SAAQue,IACrCuW,IAAqBA,EAAkBvW,KAC1C8W,EAAe9W,GAAexiB,EAAOljB,QAAQglC,cAAcqK,EAAO3J,GAClE+W,EAAsB3zC,KAAK48B,GAC7B,IAEF,MAAMgX,EAAyB,CAAC,EAahC,OAZAH,EAA2Bp1B,SAAQ,CAAC7kB,EAAOkD,KACzC,MAAMm3C,EAAYF,EAAsB33C,MAAKu8B,IAC3C,IAAIub,EAAuBC,EAE3B,OAA4C,MAAxCP,EAAuBjb,GAAO77B,KAIkE,OAA5Fo3C,GAAyBC,EAAyBP,EAAuBjb,IAAQ77B,SAAkB,EAASo3C,EAAsBv1B,KAAKw1B,EAAwBL,EAAenb,IAAO,IAE/Lqb,EAAuBp6C,GAASq6C,CAAS,IAEpCD,CAAsB,CAC9B,EAIgCI,CAAkC1B,EAAal4B,GAChF,MAAO,CAACmsB,EAAO4M,KAAsB,CACnCc,mBAAoBf,GAA4BA,EAAyB3M,EAAO4M,GAChFe,yBAA0BZ,GAA4BA,EAAyB/M,EAAO4M,IACtF,EAESgB,GAAkB,CAACC,EAAsBC,EAAuB/B,EAAal4B,KACxF,IAAIk6B,EAAuBC,EAE3B,MAAMC,EAAqBlC,EAAYlB,MAAMj7C,QAAO0/B,GAAoD,OAA5C2c,GAA0B3c,EAAMzb,KACtFq6B,EAA8BL,EAAqBj+C,QAAOu+C,GAAoB,MAAVA,IACpEC,EAA+BN,EAAsBl+C,QAAOu+C,GAAoB,MAAVA,IAEtElD,EAA6F,OAAjE8C,EAAwBhC,EAAYd,0BAAoC8C,EAAwBnD,KAA4BK,yBACxJH,EAAqE,OAArDkD,EAAwBjC,EAAYjB,cAAwBkD,EAAwBpD,KAA4BE,aAEtI,GAAIoD,EAA4B79C,OAAS,EAAG,CAE1C,MAAMg+C,EAAsB/e,GACnB4e,EAA4Bz4C,MAAK64C,GAAoBA,EAAiBhf,EAAK18B,MAGpF,GAAIk4C,IAAiBH,GAAiBI,IAAK,CAGzC,IAFyBkD,EAAmB51C,MAAMg2C,GAGhD,OAAO,CAEX,KAAO,CAGL,IAF0BJ,EAAmBx4C,KAAK44C,GAGhD,OAAO,CAEX,CACF,CAGA,GAAID,EAA6B/9C,OAAS,GAAsC,MAAjC07C,EAAYf,kBAA2B,CAEpF,MAAMuD,EAA4Bt7C,GACzBm7C,EAA6B34C,MAAK43C,GAA0BA,EAAuBp6C,KAG5F,GAAIg4C,IAA6BN,GAAiBI,IAAK,CAGrD,IAFmCgB,EAAYf,kBAAkB3yC,MAAMk2C,GAGrE,OAAO,CAEX,KAAO,CAGL,IAFoCxC,EAAYf,kBAAkBv1C,KAAK84C,GAGrE,OAAO,CAEX,CACF,CAEA,OAAO,CAAI,ECjQAC,GAAyB,CAAC35C,EAAO5D,EAAO4iB,KACnD,IAAIyV,EAAMmlB,EAAoB/N,EAAqBgO,EAEnD,MAAM3C,EAA0Q,OAA3PziB,EAAmD,OAA3CmlB,EAAqBx9C,EAAM86C,aAAuB0C,EAAmE,OAA7C/N,EAAsBzvC,EAAMqsC,eAAyF,OAAvDoR,EAAwBhO,EAAoB9wC,aAAtD,EAAiF8+C,EAAsB3C,aAAuBziB,EAAOshB,KAC9R,OAAO,OAAS,CAAC,EAAG/1C,EAAO,CACzBjF,OAAQ,CACNm8C,YAAaN,GAAoBM,EAAa96C,EAAMy6C,gCAAiC73B,GACrF86B,kBAAmB,CAAC,EACpBC,8BAA+B,CAAC,IAElC,E,4BCxBG,MAAMC,GAAiB,CAACh7B,EAAQ5iB,KACrC,IAAI69C,EACAzjB,EAkBJ,OAhBIp6B,EAAMi5C,YAAuC,WAAzBj5C,EAAM89C,gBAC5B1jB,GAAQ,SAA+BxX,GACvCi7B,GAAO,SAAiDj7B,KAExDi7B,GAAO,QAAoCj7B,GAGzCwX,EADkB,IAAhByjB,EAAKz+C,OACC,KAEA,CACN2+C,cAAe,EACfC,aAAcH,EAAKz+C,OAAS,IAK3B,CACLy+C,OACAzjB,QACD,EAUU6jB,GAAqB,CAACr7B,EAAQ5iB,KACzC,MAAMk+C,EAAWN,GAAeh7B,EAAQ5iB,GACxC,OAAO,WAAc,KAAM,CACzB69C,KAAMK,EAASL,KACfzjB,MAAO8jB,EAAS9jB,SACd,CAAC8jB,EAASL,KAAMK,EAAS9jB,OAAO,EC9BzB+jB,GAAwBv6C,IAAS,OAAS,CAAC,EAAGA,EAAO,CAChEmB,MAAO,CACLsa,KAAM,KACNK,aAAc,MAEhB5T,SAAU,CACRuT,KAAM,KACNK,aAAc,QCjBL0+B,GAAiC,0BC2BvC,MAAMC,GAA4B,CAACz7B,EAAQ5iB,KAChD,MAAM0jB,EAASD,EAAcb,EAAQ,6BAC/B07B,EAAyBL,GAAmBr7B,EAAQ5iB,GAAO69C,KAC3DU,EAAkB,WAAc,IAlBxC,SAAsC37B,EAAQi7B,GAC5C,MAAM3K,GAAa,QAAuBtwB,IAAW,CAAC,EACtD,MAAO,IAAKswB,EAAW/jC,KAAO,MAAQ0uC,KAAU3K,EAAW/nB,QAAU,GACvE,CAe8CqzB,CAA6B57B,EAAQ07B,IAAyB,CAAC17B,EAAQ07B,IAQ7GG,EAAW,eAAkB,CAACC,EAAU3P,EAAO4P,EAAqB,UACxE,MAAMC,GAAoB,QAAoCh8B,GACxDi8B,EAAsBj8B,EAAOljB,QAAQuvC,4BAA4BF,EAAO2P,GAE1EG,GAAuBA,EAAoB3P,mBAClB,SAAvByP,EACFD,EAAWG,EAAoB1P,qBACC,UAAvBwP,IACTD,EAAWG,EAAoBC,wBAMnC,MAAMC,EAA4BH,EAAkB5/C,WAAUqhB,GAAOA,EAAI1e,KAAOotC,IAChFrrB,EAAOuK,MAAM,0BAA0B8wB,UAAkCL,KACzE97B,EAAOljB,QAAQs/C,gBAAgB,CAC7BN,WACAO,SAAUF,IAEZ,MAAMhe,EAAQne,EAAOljB,QAAQw/C,oBAAoBR,GAAU3d,MAC3Dne,EAAOljB,QAAQy/C,aAAapQ,EAAOhO,EAAM,GACxC,CAACne,EAAQc,IACN07B,EAAa,eAAkB,CAACV,EAAU16C,KAC9C0f,EAAOuK,MAAM,4BAA4BywB,KACzC97B,EAAOljB,QAAQs/C,gBAAgB,CAC7BN,aAEF,MAAM3d,EAAQne,EAAOljB,QAAQw/C,oBAAoBR,GAAU3d,MAC3Dne,EAAOljB,QAAQ2/C,qBAAqBte,EAAO/8B,EAAM,GAChD,CAAC4e,EAAQc,IACN47B,EAAoB,eAAkBL,GACnCV,EAAgBU,GAAUt9C,IAChC,CAAC48C,IACEgB,EAA8B,eAAkB,CAAC3oC,EAAQ5S,KAC7D,MAAMgqC,EAAaprB,EAAOljB,QAAQorB,oBAElC,GAA+B,IAA3ByzB,EAAgBn/C,SAAiB4uC,EACnC,OAGF,MAAMwR,EAAmB58B,EAAOljB,QAAQ+/C,+BAClCC,EAAiB9oC,EAAOmqB,MAAQne,EAAOljB,QAAQigD,eAAe/oC,EAAOmqB,OAAS,EAC9E6e,EAAiBrB,EAAgBv/C,WAAUqhB,GAAOA,EAAI1e,KAAOiV,EAAOjV,KAEpEk+C,EAAqBtB,EAAgBn/C,OAAS,EAE9C0gD,GAAe,QAAqCl9B,GAAQxjB,OAAS,EAC3E,IAAI2gD,GAAuB,EAE3B,OAAQ/7C,EAAMqF,KACZ,IAAK,YACL,IAAK,QAIGu2C,EAAiBC,GACnBpB,EAASiB,EAAgBJ,EAAkBM,EAAiB,IAG9D,MAGJ,IAAK,UAEGA,EArBkB,EAsBpBnB,EAASiB,EAAgBJ,EAAkBM,EAAiB,IAE5DR,EAAWM,EAAgB17C,GAG7B,MAGJ,IAAK,aAEG07C,EAAiBI,GACnBrB,EAASiB,EAAiB,EAAGJ,EAAkBM,GAAiB,SAGlE,MAGJ,IAAK,YAEGF,EAvCY,GAwCdjB,EAASiB,EAAiB,EAAGJ,EAAkBM,IAGjD,MAGJ,IAAK,MAGG57C,EAAMg8C,UAAYN,EAjDN,EAkDdjB,EAASiB,EAAiB,EAAGJ,EAAkBM,GAAiB,SACtD57C,EAAMg8C,UAAYN,EAAiBI,GAC7CrB,EAASiB,EAAiB,EAAGJ,EAAkBM,GAAiB,SAGlE,MAGJ,IAAK,IACH,CAGE,GAFchpC,EAAOmqB,QAEPqd,GACZ,MAGF,MAAMpd,EAASpqB,EAAOoqB,OAEtB,GAAIA,GAA0B,kBAAhBA,EAAOznB,KACnB,OAGGvV,EAAMg8C,UAAYJ,EAAiBC,GACtCpB,EAASiB,EAAgBJ,EAAkBx4C,KAAKglC,IAAI8T,EAAiBJ,EAAkBK,KAGzF,KACF,CAEF,IAAK,WAEGD,EAAiBC,GACnBpB,EAASiB,EAAgBJ,EAAkBx4C,KAAKglC,IAAI8T,EAAiBJ,EAAkBK,KAGzF,MAGJ,IAAK,SACH,CAEE,MAAMI,EAAen5C,KAAKs4B,IAAIwgB,EAAiBJ,EA7FzB,GA+FlBS,IAAiBL,GAAkBK,GA/FjB,EAgGpBxB,EAASiB,EAAgBJ,EAAkBW,IAE3Cb,EAAWM,EAAgB17C,GAG7B,KACF,CAEF,IAAK,OAEGA,EAAM0E,SAAW1E,EAAM2E,SAAW3E,EAAMg8C,SAC1CvB,EAzGc,EAyGUa,EA3GJ,IA6GpBb,EA3Gc,EA2GUa,EAAkBM,IAG5C,MAGJ,IAAK,MAEG57C,EAAM0E,SAAW1E,EAAM2E,SAAW3E,EAAMg8C,SAC1CvB,EAASqB,EAAcR,EAAkBO,IAEzCpB,EAASqB,EAAcR,EAAkBM,IAG3C,MAGJ,QAEIG,GAAuB,EAIzBA,GACF/7C,EAAMuF,gBACR,GACC,CAACqZ,EAAQ27B,EAAiBE,EAAUW,EAAYE,IAC7CY,EAA4B,eAAkB,CAACtpC,EAAQ5S,KAC3D,MAAMm8C,EAAkBn8C,EAAM+F,cAAc/E,cAAc,IAAI,yCAG9D,KAF8Bm7C,GAAmBA,EAAgBvgD,SAASoE,EAAM4F,SAErDgN,EAAOmqB,QAAU,WAG1C,OAKF,IAFmBne,EAAOljB,QAAQorB,oBAGhC,OAGF,MAAM00B,EAAmB58B,EAAOljB,QAAQ+/C,+BAClCC,EAAiB9oC,EAAOmqB,MAAQne,EAAOljB,QAAQigD,eAAe/oC,EAAOmqB,OAAS,EAE9E8e,EAAqBtB,EAAgBn/C,OAAS,EAE9C0gD,GAAe,QAAqCl9B,GAAQxjB,OAAS,EAC3E,IAAI2gD,GAAuB,EAE3B,OAAQ/7C,EAAMqF,KACZ,IAAK,YAGCo1C,EAASiB,EAAgBJ,EAVL,IAatB,MAGJ,IAAK,aAEGI,EAAiBI,GACnBV,EAAWM,EAAiB,EAAG17C,GAGjC,MAGJ,IAAK,YAEG07C,EAzBY,GA0BdN,EAAWM,EAAiB,EAAG17C,GAGjC,MAGJ,IAAK,WAE0D,OAAvB67C,GAClCpB,EAASiB,EAAgBJ,EAAkBx4C,KAAKglC,IArC5B,EAqCsD0T,EAAkBK,KAG9F,MAGJ,IAAK,OAEDT,EA3CgB,EA2CUp7C,GAC1B,MAGJ,IAAK,MAEDo7C,EAAWU,EAAc97C,GACzB,MAGJ,IAAK,SAEGA,EAAM0E,SAAW1E,EAAM2E,UACzBia,EAAOljB,QAAQ0gD,iBAAiBxpC,EAAOmqB,OAGzC,MAGJ,IAAK,IAGD,MAGJ,QAEIgf,GAAuB,EAIzBA,GACF/7C,EAAMuF,gBACR,GACC,CAACqZ,EAAQ27B,EAAiBE,EAAUW,EAAYE,IAC7Ce,EAAoB,eAAkB,CAACzpC,EAAQ5S,KAEnD,IAAKA,EAAM+F,cAAcnK,SAASoE,EAAM4F,QACtC,OAIF,MAAM0oC,EAAa1vB,EAAOljB,QAAQglC,cAAc9tB,EAAOjV,GAAIiV,EAAOmqB,OAE9DuR,EAAWgO,WAAaxd,GAAcyd,OAAQ,SAAgBv8C,EAAMqF,MACtEuZ,EAAOljB,QAAQqtB,aAAa,wBAAyBulB,EAAYtuC,EACnE,GACC,CAAC4e,IACJmO,GAAuBnO,EAAQ,wBAAyB28B,GACxDxuB,GAAuBnO,EAAQ,sBAAuBs9B,GACtDnvB,GAAuBnO,EAAQ,cAAey9B,EAAkB,EC1U5D,GAAY,CAAC,4BAcZ,MAAMG,GAAuB,CAACC,EAAUC,EAAUC,KACvD,MAAMh/C,EAAK++C,EAAWA,EAASD,GAAYA,EAAS9+C,GAEpD,OARK,SAA+BA,EAAI0e,EAAKsgC,EAAqB,mDAClE,GAAU,MAANh/C,EACF,MAAM,IAAI+sB,MAAM,CAAC,iFAAkF,sFAAuFiyB,EAAoBC,KAAKziD,UAAUkiB,IAAM+V,KAAK,MAE5O,CAGEyqB,CAAsBl/C,EAAI8+C,EAAUE,GAC7Bh/C,CAAE,EAEEm/C,GAA0B,EACrCjD,OACA6C,WACAxtC,UACA6tC,eAEA,MAAMC,EAAQ,CACZC,yBAA0BpD,EAC1BqD,gCAAiChuC,EACjCiuC,iCAAkCJ,EAClCK,aAAc,CAAC,EACfC,aAAc,CAAC,EACfC,IAAK,IAGP,IAAK,IAAIniD,EAAI,EAAGA,EAAI0+C,EAAKz+C,OAAQD,GAAK,EAAG,CACvC,MAAMkhB,EAAMw9B,EAAK1+C,GACXwC,EAAK6+C,GAAqBngC,EAAKqgC,GACrCM,EAAMI,aAAaz/C,GAAM0e,EACzB2gC,EAAMK,aAAa1/C,GAAMA,EACzBq/C,EAAMM,IAAI94C,KAAK7G,EACjB,CAEA,OAAOq/C,CAAK,EAEDO,GAAwB,EACnC3+B,SACA4+B,eACAC,eACAC,kBAEA,MAAMC,EAAwB/+B,EAAOljB,QAAQi1B,gBAAgBkpB,KACvD+D,GAAmB,OAA8BD,EAAuB,IAExEZ,EAA2B,MAAhBU,EAAuBA,EAAe,EACjDI,EAAmBj/B,EAAOljB,QAAQ45B,gCAAgC,mBAAmB,OAAS,CAAC,EAAGsoB,EAAkB,CACxHJ,kBAEIM,EAA4Bl/B,EAAOljB,QAAQk4B,6BAA6B,cAAeiqB,GACvFE,EAA+D,IAAxCD,EAA0BE,UAAkBF,EAA0BR,IAAIliD,OAASgwB,OAAO6H,OAAO6qB,EAA0BG,MAAMtjD,QAAOkJ,GAAuB,MAAfA,EAAKq6C,SAAmBr6C,EAAKs6C,WAAU/iD,OACpN,OAAO,OAAS,CAAC,EAAG0iD,EAA2B,CAC7CM,mCAAoCP,EACpC3uC,QAASwuC,EACT3+B,cAAejc,KAAKs4B,IAAI2hB,EAAUe,EAA0BR,IAAIliD,QAChEijD,sBAAuBv7C,KAAKs4B,IAAI2hB,EAAUgB,IAC1C,EAESO,GAAyB,CAACL,EAAMM,EAAUC,KACrD,IAAIC,EAEJ,MAAM1rC,EAAgD,OAApC0rC,EAAiBR,EAAKM,SAAqB,EAASE,EAAe1rC,SAErF,GAAgB,MAAZA,EACF,MAAO,GAGT,MAAM2rC,EAAmB,GAEzB,IAAK,IAAIvjD,EAAI,EAAGA,EAAI4X,EAAS3X,OAAQD,GAAK,EAAG,CAC3C,MAAMuxC,EAAQ35B,EAAS5X,GACjBwjD,EAAYV,EAAKvR,GAElB8R,GAA0BG,EAAUC,iBACvCF,EAAiBl6C,KAAKkoC,GAGxBgS,EAAiBl6C,QAAQ85C,GAAuBL,EAAMU,EAAUhhD,GAAI6gD,GACtE,CAEA,OAAOE,CAAgB,EAElB,SAASG,GAA0BjgC,GACxC,IAAI+vB,EAAiBC,EAErB,MAAMM,GAAa,QAAuBtwB,GAS1C,MAAO,CACLzT,KATyC,MAAd+jC,GAAoE,OAArCP,EAAkBO,EAAW/jC,UAAvC,EAA+DwjC,EAAgB9nC,QAAO,CAACC,EAAK9I,IAC5I8I,GAAO8X,EAAOljB,QAAQojD,sBAAsB9gD,EAAML,KAEjD,KAAO,EAORwpB,QAN4C,MAAd+nB,GAA0E,OAA3CN,EAAqBM,EAAW/nB,aAA1C,EAAqEynB,EAAmB/nC,QAAO,CAACC,EAAK9I,IACxJ8I,GAAO8X,EAAOljB,QAAQojD,sBAAsB9gD,EAAML,KAEjD,KAAO,EAKZ,CCrGO,MAAMohD,GAAkBC,GAAgBA,EAAe,EAAI,IAE5DC,GAAyB3jD,GAAYsE,IAAS,OAAS,CAAC,EAAGA,EAAO,CACtEq1C,YAAY,OAAS,CAAC,EAAGr1C,EAAMq1C,WAAY,CACzC35C,eCJS4jD,GAAe,CAACnC,EAAUzhD,IACjCA,EAAW,GAAKyhD,EAAW,EACtBj6C,KAAKq8C,KAAKpC,EAAWzhD,GAGvB,EAGH8jD,GAAiBC,GAChBA,EAAgBC,WAId,OAAS,CAAC,EAAGD,EAAiB,CACnCE,KAAMz8C,KAAKs4B,IAAIt4B,KAAKglC,IAAIuX,EAAgBE,KAAMF,EAAgBC,UAAY,GAAI,KAJvED,EAQLG,GAAqBD,GAAQ3/C,IAAS,OAAS,CAAC,EAAGA,EAAO,CAC9Dq1C,WAAYmK,IAAe,OAAS,CAAC,EAAGx/C,EAAMq1C,WAAY,CACxDsK,YCxBSE,KD4BkB,KAAApR,GAAa,CAAC,4EAA6E,6FAA8F,SC5B9K,CAACzuC,EAAO5D,KAChD,IAAIyvC,EAAqBiU,EAAuBrrB,EAAMsrB,EAAahU,EAAsBiU,EAAuBC,EAAiBC,EAEjI,IAAIxkD,EAUJ,OAPEA,EADoB,MAAlBU,EAAMV,SACGU,EAAMV,SACsK,OAA/H,OAA7CmwC,EAAsBzvC,EAAMqsC,eAA6F,OAA3DqX,EAAwBjU,EAAoBwJ,iBAAtD,EAAqFyK,EAAsBpkD,UAC/JU,EAAMqsC,aAAa4M,WAAW35C,SAE9ByjD,GAAgB/iD,EAAMgjD,eAG5B,OAAS,CAAC,EAAGp/C,EAAO,CACzBq1C,WAAY,CACV35C,WACAikD,KAA4O,OAArOlrB,EAAqC,OAA7BsrB,EAAc3jD,EAAMujD,MAAgBI,EAA6D,OAA9ChU,EAAuB3vC,EAAMqsC,eAA8F,OAA5DuX,EAAwBjU,EAAqBsJ,iBAAvD,EAAsF2K,EAAsBL,MAAgBlrB,EAAO,EAC1PirB,UAAWJ,GAAmD,OAArCW,EAAkB7jD,EAAM+gD,UAAoB8C,EAAkB,EAAGvkD,GAC1FyhD,SAAiD,OAAtC+C,EAAmB9jD,EAAM+gD,UAAoB+C,EAAmB,IAE7E,GAOSC,GAAoB,CAACnhC,EAAQ5iB,KFXX,EAAC4iB,EAAQ5iB,KACtC,IAAI2vC,EAAsBiU,EAE1B,MAAMlgC,EAASD,EAAcb,EAAQ,mBAC/BX,GAAY,EAAAa,EAAA,GAAgBF,EAAQZ,GAC1CY,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,WACTU,UAAWl2B,EAAMV,SACjBg3B,aAAct2B,EAAMgkD,iBACpBjuB,cAAe,MACfQ,YAAa,mBAMf,MAAM2iB,EAAc,eAAkB55C,IAChCA,KAAa,SAAqBsjB,KAItCc,EAAOuK,MAAM,wBAAwB3uB,KACrCsjB,EAAOljB,QAAQ8pB,SAASy5B,GAAuB3jD,IAC/CsjB,EAAOljB,QAAQg3B,cAAa,GAC3B,CAAC9T,EAAQc,IAIZqL,GAAiBnM,EAHG,CAClBs2B,gBAOF,MAAM+K,EAA2B,eAAkB,CAACC,EAAW5mC,KAC7D,IAAImyB,EAAqBiU,EAEzB,MAAMS,GAAmB,SAAqBvhC,GAO9C,OALCtF,EAAQ8mC,uBACS,MAAlBpkD,EAAMV,UACwK,OAA/H,OAA7CmwC,EAAsBzvC,EAAMqsC,eAA6F,OAA3DqX,EAAwBjU,EAAoBwJ,iBAAtD,EAAqFyK,EAAsBpkD,WACjK6kD,IAAqBpB,GAAgB/iD,EAAMgjD,cAGlCkB,GAGF,OAAS,CAAC,EAAGA,EAAW,CAC7BjL,YAAY,OAAS,CAAC,EAAGiL,EAAUjL,WAAY,CAC7C35C,SAAU6kD,KAEZ,GACD,CAACvhC,EAAQ5iB,EAAMV,SAAyD,OAA9CqwC,EAAuB3vC,EAAMqsC,eAA8F,OAA5DuX,EAAwBjU,EAAqBsJ,iBAAvD,EAAsF2K,EAAsBtkD,SAAUU,EAAMgjD,eAKxMqB,EAA4B,eAAkB,CAACztC,EAAQ0G,KAC3D,IAAIgnC,EAEJ,MAAMhlD,EAA0E,OAA9DglD,EAAwBhnC,EAAQinC,eAAetL,iBAAsB,EAASqL,EAAsBhlD,SAMtH,OAJgB,MAAZA,GACFsjB,EAAOljB,QAAQ8pB,SAASy5B,GAAuB3jD,IAG1CsX,CAAM,GACZ,CAACgM,IACJ4Z,GAA6B5Z,EAAQ,cAAeqhC,GACpDznB,GAA6B5Z,EAAQ,eAAgByhC,GAKrD,MAAMG,EAA2B,eAAkB,KACjD,MAAMxW,EAAaprB,EAAOljB,QAAQorB,oBAElC,IAAK9qB,EAAMgjD,eAAiBhV,EAC1B,OAGF,MAAMyW,EAAmB5B,GAA0BjgC,GAC7C8hC,EAAkC59C,KAAK6qC,OAAO3D,EAAWtjB,kBAAkBtQ,OAASqqC,EAAiBt1C,IAAMs1C,EAAiBt5B,QAAUlJ,GAC5IW,EAAOljB,QAAQw5C,YAAYwL,EAAgC,GAC1D,CAAC9hC,EAAQ5iB,EAAMgjD,aAAc/gC,IAChC8O,GAAuBnO,EAAQ,0BAA2B4hC,GAK1D,aAAgB,KACQ,MAAlBxkD,EAAMV,UAAqBU,EAAMgjD,cACnCpgC,EAAOljB,QAAQw5C,YAAYl5C,EAAMV,SACnC,GACC,CAACsjB,EAAQ5iB,EAAMgjD,aAAchjD,EAAMV,WACtC,aAAgB,KACdklD,GAA0B,GACzB,CAACA,GAA0B,EErF9BG,CAAgB/hC,EAAQ5iB,GDKC,EAAC4iB,EAAQ5iB,KAClC,IAAI2vC,EAAsBiU,EAE1B,MAAMlgC,EAASD,EAAcb,EAAQ,eAC/BgiC,GAA0B,EAAA9hC,EAAA,GAAgBF,EAAQ,MACxDA,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,OACTU,UAAWl2B,EAAMujD,KACjBjtB,aAAct2B,EAAM6kD,aACpB9uB,cAAe,MACfQ,YAAa,eAMf,MAAMuuB,EAAU,eAAkBvB,IAChC7/B,EAAOuK,MAAM,mBAAmBs1B,KAChC3gC,EAAOljB,QAAQ8pB,SAASg6B,GAAmBD,IAC3C3gC,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,EAAQc,IAIZqL,GAAiBnM,EAHD,CACdkiC,YAOF,MAAMb,EAA2B,eAAkB,CAACC,EAAW5mC,KAC7D,IAAImyB,EAAqBiU,EAEzB,MAAMqB,GAAe,SAAiBniC,GAOtC,OALCtF,EAAQ8mC,uBACK,MAAdpkD,EAAMujD,MACoK,OAA3H,OAA7C9T,EAAsBzvC,EAAMqsC,eAA6F,OAA3DqX,EAAwBjU,EAAoBwJ,iBAAtD,EAAqFyK,EAAsBH,OAChJ,IAAjBwB,EAGSb,GAGF,OAAS,CAAC,EAAGA,EAAW,CAC7BjL,YAAY,OAAS,CAAC,EAAGiL,EAAUjL,WAAY,CAC7CsK,KAAMwB,KAER,GACD,CAACniC,EAAQ5iB,EAAMujD,KAAqD,OAA9C5T,EAAuB3vC,EAAMqsC,eAA8F,OAA5DuX,EAAwBjU,EAAqBsJ,iBAAvD,EAAsF2K,EAAsBL,OACpLc,EAA4B,eAAkB,CAACztC,EAAQ0G,KAC3D,IAAIgnC,EAAuBU,EAG3B,MAAMzB,EAAgJ,OAAxIe,EAAwF,OAA/DU,EAAyB1nC,EAAQinC,eAAetL,iBAAsB,EAAS+L,EAAuBzB,MAAgBe,GAAwB,SAAiB1hC,GAEtM,OADAA,EAAOljB,QAAQ8pB,SAASg6B,GAAmBD,IACpC3sC,CAAM,GACZ,CAACgM,IACJ4Z,GAA6B5Z,EAAQ,cAAeqhC,GACpDznB,GAA6B5Z,EAAQ,eAAgByhC,GAsBrDtzB,GAAuBnO,EAAQ,kBAjBFtjB,IAC3BsjB,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAM0/C,EAAYJ,GAAat/C,EAAMq1C,WAAW8H,SAAUzhD,GAC1D,OAAO,OAAS,CAAC,EAAGsE,EAAO,CACzBq1C,WAAYmK,IAAe,OAAS,CAAC,EAAGx/C,EAAMq1C,WAAY,CACxDqK,YACAC,KAAM3/C,EAAMq1C,WAAWsK,SAEzB,IAEJ3gC,EAAOljB,QAAQg3B,aAAa,IAQ9B3F,GAAuBnO,EAAQ,cALN,IAAMA,EAAOljB,QAAQs/C,gBAAgB,CAC5DC,UAAU,SAAiBr8B,IAAU,SAAqBA,OAS5D,aAAgB,KAC8B,GAK3C,CAAC5iB,EAAM+gD,SAAU/gD,EAAM89C,iBAC1B,aAAgB,KACdl7B,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMm9C,OAA8Bv1C,IAAnBxL,EAAM+gD,SAAyB/gD,EAAM+gD,SAAW6D,EAC3DtB,EAAYJ,GAAanC,EAAUn9C,EAAMq1C,WAAW35C,UACpDikD,EAAqB,MAAdvjD,EAAMujD,KAAe3/C,EAAMq1C,WAAWsK,KAAOvjD,EAAMujD,KAChE,OAAO,OAAS,CAAC,EAAG3/C,EAAO,CACzBq1C,WAAYmK,IAAe,OAAS,CAAC,EAAGx/C,EAAMq1C,WAAY,CACxDsK,OACAxC,WACAuC,gBAEF,IAEJ1gC,EAAOljB,QAAQg3B,aAAa,GAC3B,CAACkuB,EAAyB5kD,EAAM+gD,SAAU/gD,EAAMujD,KAAMvjD,EAAM89C,eAAgBl7B,GAAQ,EC/GvFqiC,CAAYriC,EAAQ5iB,EAAM,E,gBC1BrB,MAAMklD,GAAkC,CAACthD,EAAO5D,KACrD,IAAI0jD,EAAuBjU,EAE3B,OAAO,OAAS,CAAC,EAAG7rC,EAAO,CACzBuhD,gBAAgJ,OAA9HzB,EAAsE,OAA7CjU,EAAsBzvC,EAAMqsC,mBAAwB,EAASoD,EAAoB0V,iBAA2BzB,EAAwB,CAC7KphD,MAAM,IAER,ECZS8iD,GAA4BxhD,GAASA,EAAMyhD,SCUxD,SAASC,GAAUC,GACjB,MAA+B,mBAAjBA,EAAQC,IACxB,CAEO,MAAMC,GAAiB,CAAC7iC,EAAQ5iB,KACrC,IAAI0lD,EAEJ,MAAMhiC,EAASD,EAAcb,EAAQ,mBAE/B+iC,EAAgBxuB,GAAY,IAAIrI,KAChC9uB,EAAMujC,WAAaV,GAAcW,MACnCrM,KAAYrI,EACd,EAGI2V,EAAc,eAAkB,CAAC9iC,EAAIo/B,EAAO7mB,KAC5C0I,EAAOljB,QAAQkmD,YAAYjkD,EAAIo/B,KAAW7mB,IAI9CwJ,EAAOuK,MAAM,sBAAsBtsB,YAAao/B,cAAkB7mB,KAClE0I,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMiiD,GAAmB,OAAS,CAAC,EAAGjiD,EAAMyhD,UAgB5C,OAdAQ,EAAiBlkD,IAAM,OAAS,CAAC,EAAGkkD,EAAiBlkD,IAEjDuY,IAAS4oB,GAAcyd,KACzBsF,EAAiBlkD,GAAIo/B,GAAS,CAC5B/+B,MAAO4gB,EAAOljB,QAAQomD,aAAankD,EAAIo/B,YAGlC8kB,EAAiBlkD,GAAIo/B,GAEvB3R,OAAOC,KAAKw2B,EAAiBlkD,IAAKvC,eAC9BymD,EAAiBlkD,KAIrB,OAAS,CAAC,EAAGiC,EAAO,CACzByhD,SAAUQ,GACV,IAEJjjC,EAAOljB,QAAQg3B,cACf9T,EAAOljB,QAAQqtB,aAAa,iBAAkBnK,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,IAAO,GACrF,CAACne,EAAQc,IACNkiC,EAAc,eAAkB,CAACjkD,EAAIo/B,KACzC,MAAMglB,EAAgBX,GAA0BxiC,EAAOljB,QAAQkE,OAE/D,OADkBmiD,EAAcpkD,IAAOokD,EAAcpkD,GAAIo/B,GACtC+B,GAAcyd,KAAOzd,GAAckjB,IAAI,GACzD,CAACpjC,IAEE4hB,EAAmB,eAAkB,CAAC5tB,EAAQ5S,EAAQ,CAAC,KAC3D,IAAIiiD,EAEJ,MAAM,GACJtkD,EAAE,MACFo/B,GACEnqB,EACJgM,EAAOljB,QAAQwmD,yCAAyCvkD,EAAIo/B,GAC5D,MAAM1K,EAAQzT,EAAOljB,QAAQymD,mBAE7B,IAAK9vB,EAAM10B,KAAQ00B,EAAM10B,GAAIo/B,GAC3B,MAAM,IAAIrS,MAAM,oBAAoB/sB,gBAAiBo/B,0BAGvD,MAAMqlB,EAAgB/vB,EAAM10B,GAAIo/B,GAC1BwF,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAElC,GAA4D,OAAvDskD,EAAwBjmD,EAAMmkC,uBAAiC8hB,EAAsBK,6BAA8B,CACtH,MAAMC,EAAYlwB,EAAM10B,GAAIo/B,GAE5B,GAAIwlB,EAAUC,cAAgBD,EAAUtiC,MACtC,OAAO,CAEX,CAEA,MAAMwiC,GAAe,OAAS,CAAC,EAAG7vC,EAAQ,CACxC5U,MAAOokD,EAAcpkD,QAGvB,IAAIkiB,IAAakiC,EAAcniC,MAE/B,IAAKC,GAAsD,mBAAnCqiB,EAAOmgB,wBAAwC,CACrE,MAAMxJ,EAAS3W,EAAOmgB,wBAAwB,CAC5C/kD,KACA0e,MACArgB,MAAOomD,IAGT,GAAId,GAAUpI,GACZ,OAAOA,EAAOsI,MAAKmB,IACjB/jC,EAAOljB,QAAQknD,0BAA0B,CACvCjlD,KACAo/B,QACA/gC,MAAO2mD,KAGLA,EAAiB1iC,QAIrBrB,EAAOljB,QAAQqtB,aAAa,iBAAkB05B,EAAcziD,IACrD,MAIX4e,EAAOljB,QAAQknD,0BAA0B,CACvCjlD,KACAo/B,QACA/gC,MAAOk9C,IAETh5B,IAAag5B,EAAOj5B,KACtB,CAEA,OAAKC,IACHtB,EAAOljB,QAAQqtB,aAAa,iBAAkB05B,EAAcziD,IACrD,EAGG,GACX,CAAC4e,EAAiE,OAAxD8iC,EAAyB1lD,EAAMmkC,2BAAgC,EAASuhB,EAAuBY,+BACtGO,EAA8B,eAAkBjwC,IACpD,MAAM2vB,EAAS3jB,EAAOljB,QAAQ2lC,UAAUzuB,EAAOmqB,OACzC1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAOzvC,EAAOjV,IACzC,OAAO,IAAI2iC,SAAQC,IACjB,IAAIoiB,EAAmB,CACrB3kD,MAAO4U,EAAO5U,OAEhB,MACMokD,EADQxjC,EAAOljB,QAAQymD,mBACDvvC,EAAOjV,IAAIiV,EAAOmqB,OAE9C,GAA8C,mBAAnCwF,EAAOmgB,wBAKhB,OAJA9jC,EAAOljB,QAAQknD,2BAA0B,OAAS,CAAC,EAAGhwC,EAAQ,CAC5D5W,MAAO2mD,UAETpiB,GAAQ,GAKVoiB,EAAmB/jC,EAAOljB,QAAQknD,2BAA0B,OAAS,CAAC,EAAGhwC,EAAQ,CAC/E5W,OAAO,OAAS,CAAC,EAAGomD,EAAe,CACjCI,cAAc,OAGlBliB,QAAQC,QAAQgC,EAAOmgB,wBAAwB,CAC7C/kD,GAAIiV,EAAOjV,GACX0e,MACArgB,OAAO,OAAS,CAAC,EAAG2mD,EAAkB,CACpC3kD,MAAO4gB,EAAOljB,QAAQonD,oBAAoBlwC,EAAOjV,GAAIiV,EAAOmqB,MAAOnqB,EAAO5U,YAE1EwjD,MAAKuB,IACPnkC,EAAOljB,QAAQknD,2BAA0B,OAAS,CAAC,EAAGhwC,EAAQ,CAC5D5W,OAAO,OAAS,CAAC,EAAG+mD,EAA2B,CAC7CP,cAAc,OAGlBjiB,GAASwiB,EAA0B9iC,MAAM,GACzC,GACF,GACD,CAACrB,IAOJmM,GAAiBnM,EANM,CACrB6hB,cACAmhB,cACAphB,mBACAwiB,qCAAsCH,IAGxC,MAAMxG,EAAoB,eAAkBve,MAAOlrB,EAAQ5S,KAGzD,GAAoB,MAAhBA,EAAMsF,MACR,OAGF,MAAM,GACJ3H,EAAE,MACFo/B,EAAK,SACLuf,EAAQ,WACR2G,GACErwC,EAEJ,IAAKqwC,EACH,OAGF,MAAMC,EAAa5G,IAAaxd,GAAcyd,KACxChlB,EAAuBv3B,EAAM0E,SAAW1E,EAAM2E,SAAW3E,EAAMw3B,OAmBrE,GAjBK0rB,KAAc,SAAwBljD,IAAWu3B,GAAwC,MAAdv3B,EAAMqF,KAAerF,EAAMg8C,UACzGp9B,EAAOljB,QAAQqtB,aAAa,gBAAiBnW,EAAQ5S,IAGlDkjD,IAAc,SAAaljD,EAAMqF,OACpCuZ,EAAOljB,QAAQ2iC,iBAAiB,CAC9B1gC,KACAo/B,QACA/+B,MAAO,KAET4gB,EAAOljB,QAAQ8kC,iBAAiB,CAC9B7iC,KACAo/B,SACC/8B,GACH4e,EAAOljB,QAAQqtB,aAAa,eAAgBnW,EAAQ5S,IAGlDkjD,IAAc,SAAqBljD,EAAMqF,KAAM,CACjD,MAAMo9C,EAAe,CACnB9kD,KACAo/B,SAIF,UAFsBne,EAAOljB,QAAQ8kC,iBAAiBiiB,EAAcziD,GAGlE,MAEJ,CAEIkjD,IAAc,SAAuBljD,EAAMqF,MAC7CuZ,EAAOljB,QAAQqtB,aAAa,eAAgBnW,EAAQ5S,EACtD,GACC,CAAC4e,IACEukC,EAAwB,eAAkB,CAACvwC,EAAQ5S,KAClD4S,EAAOqwC,YAIZrkC,EAAOljB,QAAQqtB,aAAa,gBAAiBnW,EAAQ5S,EAAM,GAC1D,CAAC4e,IAEEwkC,EAAqBtlB,MAAOlrB,EAAQ5S,KACpC4S,EAAO0pC,WAAaxd,GAAckjB,aAIhCpjC,EAAOljB,QAAQ8kC,iBAAiB5tB,EAAQ5S,GAC9C4e,EAAOljB,QAAQqtB,aAAa,eAAgBnW,EAAQ5S,GAAM,EAGtDqjD,GAAqB,EAAA19B,EAAA,IAAiB,CAAC/S,EAAQ5S,KACnDojD,EAAmBxwC,EAAQ5S,EAAM,IAE7BsjD,GAA8B,EAAA39B,EAAA,IAAiB,KACnD,MAAMtK,GAAO,SAAsBuD,GAEnC,IAAKvD,EACH,OAGF,MAAMzI,EAASgM,EAAOljB,QAAQglC,cAAcrlB,EAAK1d,GAAI0d,EAAK0hB,OAC1DqmB,EAAmBxwC,EAAQ,CAAC,EAAE,IAE1B2wC,EAAsB,eAAkB,CAAC3wC,EAAQ5S,KAChD4S,EAAOqwC,aAIZrkC,EAAOljB,QAAQ+kC,YAAY7tB,EAAOjV,GAAIiV,EAAOmqB,MAAO+B,GAAcyd,OAE9D,SAAgBv8C,KAAU,SAAeA,IAC3C4e,EAAOljB,QAAQknD,0BAA0B,CACvCjlD,GAAIiV,EAAOjV,GACXo/B,MAAOnqB,EAAOmqB,MACd/gC,MAAO,CACLgC,MAAO,MAGb,GACC,CAAC4gB,IACE4kC,EAAqB,eAAkB,CAAC5wC,EAAQ5S,KACpD4e,EAAOljB,QAAQ+kC,YAAY7tB,EAAOjV,GAAIiV,EAAOmqB,MAAO+B,GAAckjB,OAE7D,SAAgBhiD,MAIjB,SAAqBA,EAAMqF,KAC7BuZ,EAAOljB,QAAQqtB,aAAa,wBAAyBnW,EAAQ5S,IAI7C,WAAdA,EAAMqF,MAAoB,SAAarF,EAAMqF,OAC/CuZ,EAAOljB,QAAQy/C,aAAavoC,EAAOjV,GAAIiV,EAAOmqB,OAChD,GACC,CAACne,IACE6kC,EAAuB,eAAkB7wC,IAC7C,MAAM,GACJjV,EAAE,MACFo/B,GACEnqB,EACEyf,EAAQzT,EAAOljB,QAAQymD,oBACvB,MACJnkD,GACEq0B,EAAM10B,GAAIo/B,GACdrd,EAAOuK,MAAM,oBAAoBtsB,YAAao/B,eAA4B,MAAT/+B,OAAgB,EAASA,EAAMgzB,cAChG,MAAM3U,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAElC,GAAI0e,EAAK,CACP,MAAMkmB,EAAS3jB,EAAOljB,QAAQ2lC,UAAUzuB,EAAOmqB,OAE/C,IAAI2mB,GAAY,OAAS,CAAC,EAAGrnC,EAAK,CAChC,CAAC0gB,GAAQ/+B,IAGPukC,EAAOohB,cACTD,EAAYnhB,EAAOohB,YAAY,CAC7BtnC,MACAre,WAIJ4gB,EAAOljB,QAAQkoD,WAAW,CAACF,GAC7B,IACC,CAAC9kC,EAAQc,IACNmkC,EAA4B,eAAkBjxC,IAClD,MAAMyJ,EAAMuC,EAAOljB,QAAQ2mD,OAAOzvC,EAAOjV,IACnC4kC,EAAS3jB,EAAOljB,QAAQ2lC,UAAUzuB,EAAOmqB,OACzCqlB,EAAgB7f,EAAOmgB,wBAA0BngB,EAAOmgB,wBAAwB,CACpF/kD,GAAIiV,EAAOjV,GACX0e,MACArgB,MAAO4W,EAAO5W,QACX4W,EAAO5W,MAERslD,GAAUc,GACZA,EAAcZ,MAAKmB,IACjB/jC,EAAOljB,QAAQknD,2BAA0B,OAAS,CAAC,EAAGhwC,EAAQ,CAC5D5W,MAAO2mD,IACN,IAGL/jC,EAAOljB,QAAQknD,2BAA0B,OAAS,CAAC,EAAGhwC,EAAQ,CAC5D5W,MAAOomD,IAEX,GACC,CAACxjC,IACJmO,GAAuBnO,EAAQ,cAAe+iC,EAActF,IAC5DtvB,GAAuBnO,EAAQ,kBAAmB+iC,EAAcwB,IAChEp2B,GAAuBnO,EAAQ,eAAgB+iC,EAAc0B,IAC7Dt2B,GAAuBnO,EAAQ,wBAAyB+iC,EAAc2B,IACtEv2B,GAAuBnO,EAAQ,gBAAiB+iC,EAAc4B,IAC9Dx2B,GAAuBnO,EAAQ,eAAgB+iC,EAAc6B,IAC7Dz2B,GAAuBnO,EAAQ,iBAAkB+iC,EAAc8B,IAC/D12B,GAAuBnO,EAAQ,sBAAuB+iC,EAAckC,IACpE91B,GAAwBnP,EAAQ,iBAAkB5iB,EAAM8nD,kBACxD/1B,GAAwBnP,EAAQ,gBAAiB5iB,EAAM+nD,iBACvDh2B,GAAwBnP,EAAQ,eAAgB5iB,EAAMgoD,eAAe,EC3V1DC,GAAoB,CAACrlC,EAAQ5iB,KACxC,IAAI0lD,EAAwBwC,EAE5B,MAAMC,EAAe,SAAa,MAC5BC,EAAkB,SAAa,MAC/Bxb,GAAU,EAAA9pB,EAAA,GAAgBF,EAAQ,MAElC+iC,EAAgBxuB,GAAY,IAAIrI,KAChC9uB,EAAMujC,WAAaV,GAAcwB,KACnClN,KAAYrI,EACd,EAGIu5B,EAAa,eAAkB,CAAC1mD,EAAIuY,KACpCA,IAAS0I,EAAOljB,QAAQ4oD,WAAW3mD,KAIvCihB,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMiiD,GAAmB,OAAS,CAAC,EAAGjiD,EAAMyhD,UAiB5C,OAfInrC,IAAS6oB,GAAawd,MACxBsF,EAAiBlkD,GAAM,CAAC,EACxBirC,EAAQ/lB,SAAQ0f,IACd,MAAM+L,EAAa1vB,EAAOljB,QAAQglC,cAAc/iC,EAAI4kC,EAAOxF,OAEvDuR,EAAW2U,aACbpB,EAAiBlkD,GAAI4kC,EAAOxF,OAAS,CACnC/+B,MAAOswC,EAAWtwC,OAEtB,YAGK6jD,EAAiBlkD,IAGnB,OAAS,CAAC,EAAGiC,EAAO,CACzByhD,SAAUQ,GACV,IAEJjjC,EAAOljB,QAAQg3B,cAAa,GAC3B,CAAC9T,EAAQgqB,IACN0b,EAAa,eAAkB3mD,IACnC,GAAI3B,EAAMujC,WAAaV,GAAcW,KACnC,OAAOT,GAAaijB,KAItB,OADsBZ,GAA0BxiC,EAAOljB,QAAQkE,OAC1CjC,GAAMohC,GAAawd,KAAOxd,GAAaijB,IAAI,GAC/D,CAACpjC,EAAQ5iB,EAAMujC,WACZglB,EAAkB,eAAkB,CAAC5mD,EAAIqC,EAAQ,CAAC,KACtD,IAAIiiD,EAEJ,GAAIjmD,EAAMujC,WAAaV,GAAcW,KACnC,MAAM,IAAI9U,MAAM,+DAGlB9L,EAAOljB,QAAQwmD,yCAAyCvkD,GACxD,MACM6mD,EADQ5lC,EAAOljB,QAAQymD,mBACFxkD,GAE3B,IAAK6mD,EACH,MAAM,IAAI95B,MAAM,mBAAmB/sB,0BAGrC,GAA4D,OAAvDskD,EAAwBjmD,EAAMmkC,uBAAiC8hB,EAAsBK,6BAA8B,CAKtH,IAJgBl3B,OAAOC,KAAKm5B,GAAc39C,QAAO,CAACC,EAAKi2B,IAC9Cj2B,IAAQ09C,EAAaznB,GAAOylB,eAAiBgC,EAAaznB,GAAO9c,QACvE,GAGD,OAAO,CAEX,CAIA,GAF0BmL,OAAO6H,OAAOuxB,GAAchkD,MAAKxC,KAAWA,EAAMiiB,QAG1E,OAAO,EAGT,MAAMwkC,EAAsBr5B,OAAOC,KAAKm5B,GAAc7pD,QAAOoiC,GAEV,mBADlCne,EAAOljB,QAAQ2lC,UAAUtE,GACnB2lB,0BAGvB,GAAI+B,EAAoBrpD,OAAS,EAAG,CAClC,MAAMihB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAC5B+mD,EAAkBD,EAAoB5xC,KAAIirB,UAC9C,MAAMyE,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC4lB,QAAyBriB,QAAQC,QAAQgC,EAAOmgB,wBAAwB,CAC5E/kD,KACA0e,MACArgB,MAAOwoD,EAAaznB,MAOtB,OALAne,EAAOljB,QAAQknD,0BAA0B,CACvCjlD,KACAo/B,QACA/gC,MAAO2mD,IAEFA,EAAiB1iC,KAAK,IAE/B,OAAOqgB,QAAQ2G,IAAIyd,GAAiBlD,MAAKmD,IACnCA,EAAOnkD,MAAKyf,KAAWA,MAI3BrB,EAAOljB,QAAQqtB,aAAa,gBAAiBprB,EAAIqC,IAC1C,IAEX,CAGA,OADA4e,EAAOljB,QAAQqtB,aAAa,gBAAiBprB,EAAIqC,IAC1C,CAAI,GACV,CAAC4e,EAAQ5iB,EAAMujC,SAAmE,OAAxDmiB,EAAyB1lD,EAAMmkC,2BAAgC,EAASuhB,EAAuBY,+BACtHsC,EAA6B,eAAkBhyC,IACnD,MACMiyC,EADQjmC,EAAOljB,QAAQymD,mBACPvvC,EAAOjV,IACvB0e,EAAMuC,EAAOljB,QAAQ2mD,OAAOzvC,EAAOjV,IACzC,IAAIuiC,GAAU,EACd,OAAO,IAAII,SAAQC,IACjBnV,OAAOC,KAAKw5B,GAAShiC,SAAQib,UAC3B,MAAMyE,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GACxC,IAAIqlB,EAAgBrlB,IAAUnqB,EAAOmqB,MAAQ,CAC3C/+B,MAAO4U,EAAO5U,OACZ6mD,EAAQ9nB,GAEZqlB,EAAgBxjC,EAAOljB,QAAQknD,0BAA0B,CACvDjlD,GAAIiV,EAAOjV,GACXo/B,QACA/gC,OAAO,OAAS,CAAC,EAAGomD,EAAe,CACjCI,cAAc,MAIdjgB,EAAOmgB,0BACTN,QAAsB9hB,QAAQC,QAAQgC,EAAOmgB,wBAAwB,CACnE/kD,GAAIiV,EAAOjV,GACX0e,MACArgB,OAAO,OAAS,CAAC,EAAGomD,EAAe,CACjCpkD,MAAO++B,IAAUnqB,EAAOmqB,MAAQne,EAAOljB,QAAQonD,oBAAoBlwC,EAAOjV,GAAIo/B,EAAOnqB,EAAO5U,OAASokD,EAAcpkD,YAKrHokD,EAAcniC,QAChBigB,GAAU,GAGZthB,EAAOljB,QAAQknD,0BAA0B,CACvCjlD,GAAIiV,EAAOjV,GACXo/B,QACA/gC,OAAO,OAAS,CAAC,EAAGomD,EAAe,CACjCI,cAAc,KAEhB,IAEJjiB,EAAQL,EAAQ,GAChB,GACD,CAACthB,IAOJmM,GAAiBnM,EANK,CACpBylC,aACAC,aACAC,kBACAO,oCAAqCF,IAGvC,MAAMvI,EAAoB,eAAkBve,MAAOlrB,EAAQ5S,KAGzD,GAAoB,MAAhBA,EAAMsF,MACR,OAGF,MAAM,SACJg3C,EAAQ,WACR2G,GACErwC,EAEJ,IAAKqwC,EACH,OAGF,MAAMC,EAAa5G,IAAaxd,GAAcyd,KACxCwI,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IAErD,GAAIulD,EACF,GAAkB,UAAdljD,EAAMqF,IAAiB,CACzB,IAAI2/C,EAMJ,UAFsBpmC,EAAOljB,QAAQ6oD,gBAAgB3xC,EAAOjV,KAEa,OAAxDqnD,EAAyBhpD,EAAMmkC,uBAAiC6kB,EAAuB1C,6BACtG,OAGF1jC,EAAOljB,QAAQqtB,aAAa,cAAeg8B,EAAW/kD,EACxD,KAAyB,WAAdA,EAAMqF,KACfuZ,EAAOljB,QAAQqtB,aAAa,cAAeg8B,EAAW/kD,OAEjC,UAAdA,EAAMqF,KACfuZ,EAAOljB,QAAQqtB,aAAa,eAAgBg8B,EAAW/kD,EACzD,GACC,CAAC4e,EAAiE,OAAxDslC,EAAyBloD,EAAMmkC,2BAAgC,EAAS+jB,EAAuB5B,+BACtGa,EAAwB,eAAkB,CAACvwC,EAAQ5S,KACvD,IAAK4S,EAAOqwC,WACV,OAGF,MAAM8B,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IACrDihB,EAAOljB,QAAQqtB,aAAa,eAAgBg8B,EAAW/kD,EAAM,GAC5D,CAAC4e,IACEilC,EAA4B,eAAkBjxC,IAClD,MAAMyJ,EAAMuC,EAAOljB,QAAQ2mD,OAAOzvC,EAAOjV,IAEnCknD,EADQjmC,EAAOljB,QAAQymD,mBACPvvC,EAAOjV,IAC7BytB,OAAOC,KAAKw5B,GAAShiC,SAAQib,UAC3B,MAAMyE,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAExC,GAAIwF,EAAOmgB,wBAAyB,CAClC,MAAMN,EAAgBrlB,IAAUnqB,EAAOmqB,MAAQnqB,EAAO5W,MAAQ6oD,EAAQ9nB,GAChE4lB,QAAyBriB,QAAQC,QAAQgC,EAAOmgB,wBAAwB,CAC5E/kD,GAAIiV,EAAOjV,GACX0e,MACArgB,MAAOomD,KAETxjC,EAAOljB,QAAQknD,0BAA0B,CACvCjlD,GAAIiV,EAAOjV,GACXo/B,QACA/gC,MAAO2mD,GAEX,MAAW5lB,IAAUnqB,EAAOmqB,OAC1Bne,EAAOljB,QAAQknD,0BAA0BhwC,EAC3C,GACA,GACD,CAACgM,IACEqmC,EAAqB,eAAkBryC,IAC3CgM,EAAOljB,QAAQ2oD,WAAWzxC,EAAOjV,GAAIohC,GAAawd,KAAK,GACtD,CAAC39B,IACEsmC,EAAoB,eAAkB,CAACtyC,EAAQ5S,KACnD4e,EAAOljB,QAAQ2oD,WAAWzxC,EAAOjV,GAAIohC,GAAaijB,MAEhC,UAAdhiD,EAAMqF,KACRuZ,EAAOljB,QAAQqtB,aAAa,wBAAyBnW,EAAQ5S,EAC/D,GACC,CAAC4e,IACEumC,EAAsB,eAAkBxnD,IAC5C,MACMknD,EADQjmC,EAAOljB,QAAQymD,mBACPxkD,GAEtB,IAAKknD,EACH,MAAM,IAAIn6B,MAAM,mBAAmB/sB,0BAGrC,MAAM0e,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAElC,GAAI0e,EAAK,CACP,IAAIqnC,GAAY,OAAS,CAAC,EAAGrnC,GAE7B+O,OAAOC,KAAKw5B,GAAShiC,SAAQka,IAC3B,MAAMwF,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC/+B,EAAQ6mD,EAAQ9nB,GAAO/+B,MAEzBukC,EAAOohB,YACTD,EAAYnhB,EAAOohB,YAAY,CAC7BtnC,IAAKqnC,EACL1lD,UAGF0lD,EAAU3mB,GAAS/+B,CACrB,IAEF4gB,EAAOljB,QAAQkoD,WAAW,CAACF,GAC7B,IACC,CAAC9kC,IACEwmC,EAAoB,eAAkBxyC,IAC1CwxC,EAAgB1oD,QAAUkX,CAAM,GAC/B,IAEGwwC,EAAqBtlB,MAAOlrB,EAAQ5S,KACpC4S,EAAO0pC,WAAaxd,GAAckjB,OAItCoC,EAAgB1oD,QAAU,KAC1ByoD,EAAazoD,QAAUuwB,YAAW6R,UAChC,IAAIunB,EAEJ,IAA0D,OAApDA,EAAwBjB,EAAgB1oD,cAAmB,EAAS2pD,EAAsB1nD,MAAQiV,EAAOjV,GAAI,OAC3GihB,EAAOljB,QAAQ6oD,gBAAgB3xC,EAAOjV,GAAIqC,GAChD,MAAM+kD,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IACrDihB,EAAOljB,QAAQqtB,aAAa,cAAeg8B,EAAW/kD,EACxD,KACA,EAGEqjD,GAAqB,EAAA19B,EAAA,IAAiB,CAAC/S,EAAQ5S,KACnDojD,EAAmBxwC,EAAQ5S,EAAM,IAE7BsjD,GAA8B,EAAA39B,EAAA,IAAiB,KACnD,MAAMtK,GAAO,SAAsBuD,GAEnC,IAAKvD,EACH,OAGF,MAAMzI,EAASgM,EAAOljB,QAAQglC,cAAcrlB,EAAK1d,GAAI0d,EAAK0hB,OAC1DqmB,EAAmBxwC,EAAQ,CAAC,EAAE,IAEhCma,GAAuBnO,EAAQ,cAAe+iC,EAActF,IAC5DtvB,GAAuBnO,EAAQ,kBAAmB+iC,EAAcwB,IAChEp2B,GAAuBnO,EAAQ,sBAAuB+iC,EAAckC,IACpE92B,GAAuBnO,EAAQ,eAAgB+iC,EAAcsD,IAC7Dl4B,GAAuBnO,EAAQ,cAAe+iC,EAAcuD,IAC5Dn4B,GAAuBnO,EAAQ,gBAAiB+iC,EAAcwD,IAC9Dp4B,GAAuBnO,EAAQ,cAAe+iC,EAAcyD,IAC5Dr4B,GAAuBnO,EAAQ,eAAgB+iC,EAAc0B,IAC7Dt2B,GAAuBnO,EAAQ,wBAAyB+iC,EAAc2B,IACtEv1B,GAAwBnP,EAAQ,gBAAiB5iB,EAAMspD,iBACvDv3B,GAAwBnP,EAAQ,eAAgB5iB,EAAMupD,gBACtDx3B,GAAwBnP,EAAQ,cAAe5iB,EAAMwpD,cAAc,ECnUxDC,GAA0B7lD,IAAS,OAAS,CAAC,EAAGA,EAAO,CAClEyhD,SAAU,CAAC,IAQN,SAAS,GAAeziC,EAAQ5iB,GACrC,IAAI0lD,EAEJ,MAAMhiC,EAASD,EAAcb,EAAQ,mBACrC6iC,GAAe7iC,EAAQ5iB,GACvBioD,GAAkBrlC,EAAQ5iB,GAC1B,MAAM0pD,EAAc,SAAa,CAAC,GAClC9mC,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,WACTU,UAAWl2B,EAAM2pD,cACjBrzB,aAAct2B,EAAM4pD,sBACpB7zB,cAAeqvB,GACf7uB,YAAa,wBAEf,MAAMszB,EAAiB,eAAkBjzC,IAAWA,EAAOkzC,QAAQlH,kBAAoBhsC,EAAOkzC,QAAQ3H,YAAcvrC,EAAOoqB,OAAO+oB,YAAcnzC,EAAOoqB,OAAO2B,kBAAoB3iC,EAAM6pD,gBAAkB7pD,EAAM6pD,eAAejzC,KAC/N,CAAC5W,EAAM6pD,iBA+BDG,EAAkC,eAAkB,CAACroD,EAAIo/B,KAC7D,GAAK2oB,EAAYhqD,QAAQiC,GAIzB,GAAKo/B,GAKE,GAAI2oB,EAAYhqD,QAAQiC,GAAIo/B,GAAQ,CACzC,MAAO,CAAE5J,GAAYuyB,EAAYhqD,QAAQiC,GAAIo/B,GAC7C5J,GACF,OAPE/H,OAAOC,KAAKq6B,EAAYhqD,QAAQiC,IAAKklB,SAAQojC,IAC3C,MAAO,CAAE9yB,GAAYuyB,EAAYhqD,QAAQiC,GAAIsoD,GAC7C9yB,GAAU,GAKd,GACC,IACGkL,EAAmB,eAAkB,CAACzrB,EAAQ5S,EAAQ,CAAC,KA5CvC,EAACrC,EAAIo/B,EAAOmpB,EAAY/yB,KAC5C,IAAK+yB,EAEH,YADA/yB,IAQF,GAJKuyB,EAAYhqD,QAAQiC,KACvB+nD,EAAYhqD,QAAQiC,GAAM,CAAC,GAGzB+nD,EAAYhqD,QAAQiC,GAAIo/B,GAAQ,CAClC,MAAOrR,GAAWg6B,EAAYhqD,QAAQiC,GAAIo/B,GAC1CxQ,aAAab,EACf,CAEA,MAOMA,EAAUO,YAAW,KACzBkH,WACOuyB,EAAYhqD,QAAQiC,GAAIo/B,EAAM,GACpCmpB,GACHR,EAAYhqD,QAAQiC,GAAIo/B,GAAS,CAACrR,EAXD,KAC/ByH,IACA,MAAOzH,GAAWg6B,EAAYhqD,QAAQiC,GAAIo/B,GAC1CxQ,aAAab,UACNg6B,EAAYhqD,QAAQiC,GAAIo/B,EAAM,EAO6B,EAmBpEopB,CAAcvzC,EAAOjV,GAAIiV,EAAOmqB,MAAOnqB,EAAOszC,YAAY,KACxD,IAAIjE,EAEJ,GAA4D,OAAvDA,EAAwBjmD,EAAMmkC,uBAAiC8hB,EAAsBK,6BACxF,MAAuB,QAAnBtmD,EAAMujC,SACD3gB,EAAOljB,QAAQopD,oCAAoClyC,GAGrDgM,EAAOljB,QAAQsnD,qCAAqCpwC,GAG7D,MAAMwzC,EAAY,CAChBzoD,GAAIiV,EAAOjV,GACXo/B,MAAOnqB,EAAOmqB,MACd/gC,MAAO,CACLgC,MAAO4U,EAAO5U,QAGlB,OAAO4gB,EAAOljB,QAAQqtB,aAAa,sBAAuBq9B,EAAWpmD,EAAM,GAC3E,GACD,CAAC4e,EAAQ5iB,EAAMujC,SAAmE,OAAxDmiB,EAAyB1lD,EAAMmkC,2BAAgC,EAASuhB,EAAuBY,+BACtH+D,EAAa,eAAkB,CAAC1oD,EAAIo/B,EAAO/+B,KAC/C,MAAMukC,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GACxC,OAAOwF,EAAO3I,YAAc2I,EAAO3I,YAAY57B,EAAO4gB,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,IAAU/+B,CAAK,GACrG,CAAC4gB,IACE0nC,EAAmB,eAAkB1zC,IACzC,MAAM,GACJjV,EAAE,MACFo/B,EACA/gC,MAAOuqD,GACL3zC,EACJ8M,EAAOuK,MAAM,6BAA6BtsB,YAAao/B,KACvDne,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAM+lD,GAAgB,OAAS,CAAC,EAAG/lD,EAAMyhD,UAMzC,OAJAsE,EAAchoD,IAAM,OAAS,CAAC,EAAGiC,EAAMyhD,SAAS1jD,IAChDgoD,EAAchoD,GAAIo/B,IAAS,OAAS,CAAC,EAAGwpB,EAAW,CACjDvoD,MAAOqoD,EAAW1oD,EAAIo/B,EAAOwpB,EAAUvoD,UAElC,OAAS,CAAC,EAAG4B,EAAO,CACzByhD,SAAUsE,GACV,IAEJ/mC,EAAOljB,QAAQg3B,cAEf,OADsB0uB,GAA0BxiC,EAAOljB,QAAQkE,OAC1CjC,GAAIo/B,EAAM,GAC9B,CAACne,EAAQc,EAAQ2mC,IACdG,EAAmB,eAAkBn0B,IACpB+uB,GAA0BxiC,EAAOljB,QAAQkE,SAEzCyyB,IACnB3S,EAAOuK,MAAM,0BACbrL,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDyhD,SAAUhvB,MAEZzT,EAAOljB,QAAQg3B,cACjB,GACC,CAAC9T,EAAQc,IACNyiC,EAAmB,eAAkB,IAAMf,GAA0BxiC,EAAOljB,QAAQkE,QAAQ,CAACgf,IAC7F6nC,EAAuB,eAAkB,CAAC7zC,EAAQ5S,KACtD,MAAM0mD,EAAqB1mD,EAAM2mD,OAAS,EAEtC/zC,EAAOqwC,YAAcrwC,EAAO0pC,WAAaxd,GAAckjB,MAAQ0E,GAEjE1mD,EAAMuF,gBACR,GACC,IACHwnB,GAAuBnO,EAAQ,gBAAiB6nC,GAChD14B,GAAwBnP,EAAQ,sBAAuB5iB,EAAM4qD,uBAW7D77B,GAAiBnM,EATQ,CACvBinC,iBACAW,mBACArE,mBACA9jB,mBACAukB,0BAA2B0D,EAC3BxD,oBAAqBuD,EACrBnE,yCAA0C8D,IAG5C,aAAgB,UACcx+C,IAAxBxL,EAAM2pD,eACR/mC,EAAOljB,QAAQ8qD,iBAAiBxqD,EAAM2pD,cACxC,GACC,CAAC/mC,EAAQ5iB,EAAM2pD,eACpB,CCnKA,ICKIkB,GAYAC,GDjBJ,GAD4C,oBAAXl9B,OAAyB,kBAAwB,YEKnE,SAAS,GAAiB9G,GACvC,MAAMrb,EAAM,SAAaqb,GAIzB,OAHA,IAAkB,KAChBrb,EAAI/L,QAAUonB,CAAE,IAEX,eAAkB,IAAIgI,KAG7B,EAAIrjB,EAAI/L,YAAYovB,IAAO,GAC7B,EDHA,SAAW+7B,GACTA,EAAuC,aAAI,eAC3CA,EAA0C,gBAAI,kBAC9CA,EAA2C,iBAAI,mBAC/CA,EAAwC,cAAI,eAC7C,CALD,CAKGA,KAA6BA,GAA2B,CAAC,IAO5D,SAAWC,GACTA,EAAsC,aAAI,eAC1CA,EAAuC,cAAI,gBAC3CA,EAAsC,aAAI,eAC1CA,EAAoC,WAAI,aACxCA,EAAyC,gBAAI,iBAC9C,CAND,CAMGA,KAA4BA,GAA0B,CAAC,IE3B1D,MAAM,GAAY,CAAC,KAAM,SACnB,GAAa,CAAC,KAAM,SAYpBC,IAAwC,KAAA1Y,GAAa,CAAC,uHAAwH,2IAA4I,kFAAmF,SCDnZ,IAAI2Y,GAYAC,IAPJ,SAAWD,GACTA,EAAsC,aAAI,eAC1CA,EAAyC,gBAAI,kBAC7CA,EAA0C,iBAAI,mBAC9CA,EAAuC,cAAI,eAC5C,CALD,CAKGA,KAA4BA,GAA0B,CAAC,IAI1D,SAAWC,GACTA,EAAoC,YAAI,cACxCA,EAAsC,cAAI,gBAC1CA,EAAqC,aAAI,eACzCA,EAAmC,WAAI,aACvCA,EAAwC,gBAAI,iBAC7C,CAND,CAMGA,KAA2BA,GAAyB,CAAC,IChCxD,MAAM,GAAY,CAAC,MACb,GAAa,CAAC,MAad,IAAwC,KAAA5Y,GAAa,CAAC,uHAAwH,2IAA4I,kFAAmF,SCVtY,GAA0BzuC,IAAS,OAAS,CAAC,EAAGA,EAAO,CAClEyhD,SAAU,CAAC,IAEA,GAAiB,CAACziC,EAAQ5iB,KHOL,EAAC4iB,EAAQ5iB,KACzC,MAAOkrD,EAAgBC,GAAqB,WAAe,CAAC,GACtDC,EAAoB,SAAaF,GACjCG,EAAqB,SAAa,CAAC,IACnC,iBACJC,EAAgB,wBAChBC,EACAL,eAAgBM,EAAkB,uBAClCC,EAAsB,UACtB52B,GACE70B,EAEE0rD,EAAsBv0B,GAAY,IAAIrI,KACtC9uB,EAAMujC,WAAaV,GAAcW,MACnCrM,KAAYrI,EACd,EAGI68B,EAAqB,eAAkB,CAAChqD,EAAIo/B,KAChD,MAAMnqB,EAASgM,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,GAEhD,IAAKne,EAAOljB,QAAQmqD,eAAejzC,GACjC,MAAM,IAAI8X,MAAM,yBAAyB/sB,eAAgBo/B,qBAC3D,GACC,CAACne,IACEgpC,EAAmB,eAAkB,CAACjqD,EAAIo/B,EAAO7mB,KACrD,GAAI0I,EAAOljB,QAAQkmD,YAAYjkD,EAAIo/B,KAAW7mB,EAC5C,MAAM,IAAIwU,MAAM,yBAAyB/sB,eAAgBo/B,eAAmB7mB,UAC9E,GACC,CAAC0I,IACEukC,EAAwB,eAAkB,CAACvwC,EAAQ5S,KACvD,IAAK4S,EAAOqwC,WACV,OAGF,GAAIrwC,EAAO0pC,WAAaxd,GAAcyd,KACpC,OAGF,MAAM6J,GAAY,OAAS,CAAC,EAAGxzC,EAAQ,CACrCzR,OAAQ0lD,GAAyBgB,kBAGnCjpC,EAAOljB,QAAQqtB,aAAa,gBAAiBq9B,EAAWpmD,EAAM,GAC7D,CAAC4e,IACEykC,EAAqB,eAAkB,CAACzwC,EAAQ5S,KACpD,GAAI4S,EAAO0pC,WAAaxd,GAAckjB,KACpC,OAGF,GAAIpjC,EAAOljB,QAAQkmD,YAAYhvC,EAAOjV,GAAIiV,EAAOmqB,SAAW+B,GAAckjB,KACxE,OAGF,MAAMoE,GAAY,OAAS,CAAC,EAAGxzC,EAAQ,CACrCzR,OAAQ2lD,GAAwBgB,eAGlClpC,EAAOljB,QAAQqtB,aAAa,eAAgBq9B,EAAWpmD,EAAM,GAC5D,CAAC4e,IACEy9B,EAAoB,eAAkB,CAACzpC,EAAQ5S,KACnD,GAAI4S,EAAO0pC,WAAaxd,GAAcyd,KAAM,CAG1C,GAAoB,MAAhBv8C,EAAMsF,MACR,OAGF,IAAInE,EAWJ,GATkB,WAAdnB,EAAMqF,IACRlE,EAAS2lD,GAAwBiB,cACV,UAAd/nD,EAAMqF,IACflE,EAAS2lD,GAAwBkB,aACV,QAAdhoD,EAAMqF,MACflE,EAASnB,EAAMg8C,SAAW8K,GAAwBmB,gBAAkBnB,GAAwBoB,WAC5FloD,EAAMuF,kBAGJpE,EAAQ,CACV,MAAMilD,GAAY,OAAS,CAAC,EAAGxzC,EAAQ,CACrCzR,WAGFyd,EAAOljB,QAAQqtB,aAAa,eAAgBq9B,EAAWpmD,EACzD,CACF,MAAO,GAAI4S,EAAOqwC,WAAY,CAC5B,IAAI9hD,EAEJ,GAAkB,MAAdnB,EAAMqF,KAAerF,EAAMg8C,SAC7B,OAcF,IAXI,SAAeh8C,KAEPA,EAAM0E,SAAW1E,EAAM2E,UAA0B,MAAd3E,EAAMqF,IADnDlE,EAAS0lD,GAAyBsB,iBAGX,UAAdnoD,EAAMqF,IACflE,EAAS0lD,GAAyBmB,aACX,WAAdhoD,EAAMqF,KAAkC,cAAdrF,EAAMqF,MAEzClE,EAAS0lD,GAAyBuB,eAGhCjnD,EAAQ,CACV,MAAMilD,GAAY,OAAS,CAAC,EAAGxzC,EAAQ,CACrCzR,SACAkE,IAAKrF,EAAMqF,MAGbuZ,EAAOljB,QAAQqtB,aAAa,gBAAiBq9B,EAAWpmD,EAC1D,CACF,IACC,CAAC4e,IACE2kC,EAAsB,eAAkB3wC,IAC5C,MAAM,GACJjV,EAAE,MACFo/B,EAAK,OACL57B,EAAM,IACNkE,GACEuN,EACEy1C,EAA0B,CAC9B1qD,KACAo/B,SAGE57B,IAAW0lD,GAAyBsB,iBAClC,qBAAyB,MAC3BE,EAAwBhX,aAAehsC,EAEvCgjD,EAAwBC,aAAc,EAE/BnnD,IAAW0lD,GAAyBuB,gBAC7CC,EAAwBC,aAAc,GAGxC1pC,EAAOljB,QAAQ6sD,kBAAkBF,EAAwB,GACxD,CAACzpC,IACE4kC,EAAqB,eAAkB5wC,IAC3C,MAAM,GACJjV,EAAE,MACFo/B,EAAK,OACL57B,GACEyR,EAEJ,IAAI41C,EADJ5pC,EAAOljB,QAAQwmD,yCAAyCvkD,EAAIo/B,GAGxD57B,IAAW2lD,GAAwBkB,aACrCQ,EAAmB,QACVrnD,IAAW2lD,GAAwBoB,WAC5CM,EAAmB,QACVrnD,IAAW2lD,GAAwBmB,kBAC5CO,EAAmB,QAGrB,IAAIznB,EAAiC,kBAAX5/B,EACLigD,GAA0BxiC,EAAOljB,QAAQkE,OAE7CjC,GAAIo/B,GAAO0rB,oBAAsBzsD,EAAM0sD,8CAGtD3nB,GAAsB,GAGxBniB,EAAOljB,QAAQolC,iBAAiB,CAC9BnjC,KACAo/B,QACAgE,sBACAynB,oBACA,GACD,CAAC5pC,EAAQ5iB,EAAM0sD,8CAClB37B,GAAuBnO,EAAQ,kBAAmB8oC,EAAoBvE,IACtEp2B,GAAuBnO,EAAQ,eAAgB8oC,EAAoBrE,IACnEt2B,GAAuBnO,EAAQ,cAAe8oC,EAAoBrL,IAClEtvB,GAAuBnO,EAAQ,gBAAiB8oC,EAAoBnE,IACpEx2B,GAAuBnO,EAAQ,eAAgB8oC,EAAoBlE,IACnEz1B,GAAwBnP,EAAQ,gBAAiB5iB,EAAM+nD,iBACvDh2B,GAAwBnP,EAAQ,eAAgB5iB,EAAMgoD,gBACtD,MAAMpC,EAAc,eAAkB,CAACjkD,EAAIo/B,KACzC,MAAM4rB,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OAE9D,OADkB+oD,EAAahrD,IAAOgrD,EAAahrD,GAAIo/B,GACpC+B,GAAcyd,KAAOzd,GAAckjB,IAAI,GACzD,CAACpjC,IACEgqC,EAAuB,IAAiBC,IAC5C,MAAMC,EAA8BD,IAAa7sD,EAAMkrD,eAEvD,GAAIO,GAA0BqB,EAA6B,CACzD,MAAM7kD,EAAU4sB,IAAcjE,GAAckE,YAAc,CACxDxQ,IAAK1B,EAAOljB,SACV,CAAC,EACL+rD,EAAuBoB,EAAU5kD,EACnC,CAEIjI,EAAMkrD,gBAAkB4B,IAI5B3B,EAAkB0B,GAClBzB,EAAkB1rD,QAAUmtD,EAC5BjqC,EAAOljB,QAAQqtB,aAAa,uBAAwB8/B,GAAS,IAEzDE,EAA8B,eAAkB,CAACprD,EAAIo/B,EAAOisB,KAGhE,MAAMH,GAAW,OAAS,CAAC,EAAGzB,EAAkB1rD,SAEhD,GAAiB,OAAbstD,EACFH,EAASlrD,IAAM,OAAS,CAAC,EAAGkrD,EAASlrD,GAAK,CACxC,CAACo/B,IAAQ,OAAS,CAAC,EAAGisB,SAEnB,CACL,MAAMC,EAAeJ,EAASlrD,GACxBurD,GAAc,OAA8BD,EAAc,CAAClsB,GAAOlqB,IAAI+c,KAG5Ei5B,EAASlrD,GAAMurD,EAE0B,IAArC99B,OAAOC,KAAKw9B,EAASlrD,IAAKvC,eACrBytD,EAASlrD,EAEpB,CAEAirD,EAAqBC,EAAS,GAC7B,CAACD,IACEO,EAA2B,eAAkB,CAACxrD,EAAIo/B,EAAOisB,KAC7DpqC,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMwpD,GAAkB,OAAS,CAAC,EAAGxpD,EAAMyhD,UAc3C,OAZiB,OAAb2H,EACFI,EAAgBzrD,IAAM,OAAS,CAAC,EAAGyrD,EAAgBzrD,GAAK,CACtD,CAACo/B,IAAQ,OAAS,CAAC,EAAGisB,aAGjBI,EAAgBzrD,GAAIo/B,GAEqB,IAA5C3R,OAAOC,KAAK+9B,EAAgBzrD,IAAKvC,eAC5BguD,EAAgBzrD,KAIpB,OAAS,CAAC,EAAGiC,EAAO,CACzByhD,SAAU+H,GACV,IAEJxqC,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,IACE2pC,EAAoB,eAAkB31C,IAC1C,MAAM,GACJjV,EAAE,MACFo/B,GACEnqB,EACE1N,GAAQ,OAA8B0N,EAAQ,IAEpD+0C,EAAmBhqD,EAAIo/B,GACvB6qB,EAAiBjqD,EAAIo/B,EAAO+B,GAAckjB,MAC1C+G,EAA4BprD,EAAIo/B,GAAO,OAAS,CAC9C7mB,KAAM4oB,GAAcyd,MACnBr3C,GAAO,GACT,CAACyiD,EAAoBC,EAAkBmB,IACpCM,EAAiC,IAAiBz2C,IACtD,MAAM,GACJjV,EAAE,MACFo/B,EAAK,YACLurB,EAAW,aACXjX,GACEz+B,EACJ,IAAI3S,EAAW2e,EAAOljB,QAAQomD,aAAankD,EAAIo/B,IAE3CurB,GAAejX,KACjBpxC,EAAWqoD,EAAc,GAAKjX,GAQhC8X,EAAyBxrD,EAAIo/B,EALZ,CACf/+B,MAAOiC,EACPggB,OAAO,EACPwoC,mBAAmB,IAGrB7pC,EAAOljB,QAAQy/C,aAAax9C,EAAIo/B,EAAM,IAElC+D,EAAmB,eAAkBluB,IACzC,MAAM,GACJjV,EAAE,MACFo/B,GACEnqB,EACE1N,GAAQ,OAA8B0N,EAAQ,IAEpDg1C,EAAiBjqD,EAAIo/B,EAAO+B,GAAcyd,MAC1CwM,EAA4BprD,EAAIo/B,GAAO,OAAS,CAC9C7mB,KAAM4oB,GAAckjB,MACnB98C,GAAO,GACT,CAAC0iD,EAAkBmB,IAChBO,EAAgC,IAAiBxrB,UACrD,MAAM,GACJngC,EAAE,MACFo/B,EAAK,oBACLgE,EAAmB,iBACnBynB,EAAmB,QACjB51C,EACJg1C,EAAiBjqD,EAAIo/B,EAAO+B,GAAcyd,MAC1C39B,EAAOljB,QAAQwmD,yCAAyCvkD,EAAIo/B,GAE5D,MAAMwsB,EAAqB,KACzBJ,EAAyBxrD,EAAIo/B,EAAO,MACpCgsB,EAA4BprD,EAAIo/B,EAAO,MAEd,SAArByrB,GACF5pC,EAAOljB,QAAQ8tD,iCAAiC7rD,EAAIo/B,EAAOyrB,EAC7D,EAGF,GAAIznB,EAEF,YADAwoB,IAIF,MAAMZ,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,QACxD,MACJqgB,EAAK,kBACLwoC,GACEE,EAAahrD,GAAIo/B,GAErB,GAAI9c,GAASwoC,EAQX,OALApB,EAAmB3rD,QAAQiC,GAAIo/B,GAAO7mB,KAAO4oB,GAAcyd,UAE3DwM,EAA4BprD,EAAIo/B,EAAO,CACrC7mB,KAAM4oB,GAAcyd,OAKxB,MAAMmH,EAAY9kC,EAAOljB,QAAQ+tD,gDAAgD9rD,EAAIo/B,GAErF,GAAIuqB,EAAkB,CACpB,MAAMp2B,EAAcw4B,IAClBrC,EAAmB3rD,QAAQiC,GAAIo/B,GAAO7mB,KAAO4oB,GAAcyd,KAE3DwM,EAA4BprD,EAAIo/B,EAAO,CACrC7mB,KAAM4oB,GAAcyd,OAGlBgL,EACFA,EAAwBmC,GAExB3C,IACF,EAGF,IACE,MAAM1qC,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAClC2iC,QAAQC,QAAQ+mB,EAAiB5D,EAAWrnC,IAAMmlC,MAAKmI,IACrD/qC,EAAOljB,QAAQkoD,WAAW,CAAC+F,IAC3BJ,GAAoB,IACnBlyB,MAAMnG,EAGX,CAFE,MAAOw4B,GACPx4B,EAAYw4B,EACd,CACF,MACE9qC,EAAOljB,QAAQkoD,WAAW,CAACF,IAC3B6F,GACF,IAEI1G,EAA8B,eAAkB/kB,UACpD,IAAI8rB,EAAkBC,EAEtB,MAAM,GACJlsD,EAAE,MACFo/B,EAAK,MACL/+B,EAAK,WACLkoD,EACA4D,yBAA0BC,GACxBn3C,EACJ+0C,EAAmBhqD,EAAIo/B,GACvB6qB,EAAiBjqD,EAAIo/B,EAAO+B,GAAcyd,MAC1C,MAAMha,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAClC,IAAIs5C,EAAcj5C,EAEdukC,EAAO3I,cAAgBmwB,IACzB9S,EAAc1U,EAAO3I,YAAY57B,EAAO4gB,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,KAG3E,IAAI4rB,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OAExDopD,GAAW,OAAS,CAAC,EAAGL,EAAahrD,GAAIo/B,GAAQ,CACnD/+B,MAAOi5C,EACP+S,aAAc9D,EAAa,4BAA8B,qBAG3D,GAAI3jB,EAAOmgB,wBAAyB,CAClC,MAAMuH,EAAajsD,IAAU2qD,EAAahrD,GAAIo/B,GAAO/+B,MACrDgrD,GAAW,OAAS,CAAC,EAAGA,EAAU,CAChCP,mBAAmB,IAErBU,EAAyBxrD,EAAIo/B,EAAOisB,GACpCA,QAAiB1oB,QAAQC,QAAQgC,EAAOmgB,wBAAwB,CAC9D/kD,KACA0e,MACArgB,MAAOgtD,EACPiB,eAEJ,CAIA,OAAIrrC,EAAOljB,QAAQkmD,YAAYjkD,EAAIo/B,KAAW+B,GAAckjB,OAI5D2G,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OACxDopD,GAAW,OAAS,CAAC,EAAGA,EAAU,CAChCP,mBAAmB,IAKrBO,EAAShrD,MAAQukC,EAAOmgB,wBAA0BiG,EAAahrD,GAAIo/B,GAAO/+B,MAAQi5C,EAClFkS,EAAyBxrD,EAAIo/B,EAAOisB,GACpCL,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,SACN,OAAxCgqD,EAAmBjB,EAAahrD,KAAqE,OAApDksD,EAAwBD,EAAiB7sB,KAAmB8sB,EAAsB5pC,OAAM,GAClJ,CAACrB,EAAQ+oC,EAAoBC,EAAkBuB,IAC5Ce,EAAyC,eAAkB,CAACvsD,EAAIo/B,KACpE,MAAMwF,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC4rB,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,QACxD,MACJ5B,GACE2qD,EAAahrD,GAAIo/B,GACf1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAClC,OAAO4kC,EAAOohB,YAAcphB,EAAOohB,YAAY,CAC7C3lD,QACAqe,SACG,OAAS,CAAC,EAAGA,EAAK,CACrB,CAAC0gB,GAAQ/+B,GACT,GACD,CAAC4gB,IAQJmM,GAAiBnM,EAPE,CACjBgjC,cACA2G,oBACAznB,mBACAkiB,qCAAsCH,EACtC4G,gDAAiDS,IAGnD,aAAgB,KACV1C,GACFoB,EAAqBpB,EACvB,GACC,CAACA,EAAoBoB,IACxB,aAAgB,KACd,MAAMvL,GAAe,QAA6Bz+B,GAE5CurC,EAAsB9C,EAAmB3rD,QAC/C2rD,EAAmB3rD,SAAU,SAAUwrD,GAEvC97B,OAAO4J,QAAQkyB,GAAgBrkC,SAAQ,EAAEllB,EAAI6wC,MAC3CpjB,OAAO4J,QAAQwZ,GAAQ3rB,SAAQ,EAAEka,EAAOnqB,MACtC,IAAIw3C,EAAuBC,EAAwBC,EAEnD,MAAMC,GAAiE,OAApDH,EAAwBD,EAAoBxsD,KAAmF,OAA1D0sD,EAAyBD,EAAsBrtB,SAAzD,EAAoFstB,EAAuBn0C,OAAS4oB,GAAckjB,KAC1MwI,EAAsD,OAAxCF,EAAmBjN,EAAa1/C,IAAe2sD,EAAmB3sD,EAElFiV,EAAOsD,OAAS4oB,GAAcyd,MAAQgO,IAAazrB,GAAckjB,KACnEqH,GAA+B,OAAS,CACtC1rD,GAAI6sD,EACJztB,SACCnqB,IACMA,EAAOsD,OAAS4oB,GAAckjB,MAAQuI,IAAazrB,GAAcyd,MAC1E+M,GAA8B,OAAS,CACrC3rD,GAAI6sD,EACJztB,SACCnqB,GACL,GACA,GACF,GACD,CAACgM,EAAQsoC,EAAgBmC,EAAgCC,GAA+B,EGle3FmB,CAAmB7rC,EAAQ5iB,GDOI,EAAC4iB,EAAQ5iB,KACxC,MAAO0uD,EAAeC,GAAoB,WAAe,CAAC,GACpDC,EAAmB,SAAaF,GAChCG,EAAoB,SAAa,CAAC,GAClC1G,EAAe,SAAa,MAC5BC,EAAkB,SAAa,OAC/B,iBACJkD,EAAgB,wBAChBC,EACAmD,cAAeI,EAAiB,sBAChCC,EAAqB,UACrBl6B,GACE70B,EAEEgvD,EAAqB73B,GAAY,IAAIrI,KACrC9uB,EAAMujC,WAAaV,GAAcwB,KACnClN,KAAYrI,EACd,EAGI68B,EAAqB,eAAkB,CAAChqD,EAAIo/B,KAChD,MAAMnqB,EAASgM,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,GAEhD,IAAKne,EAAOljB,QAAQmqD,eAAejzC,GACjC,MAAM,IAAI8X,MAAM,yBAAyB/sB,eAAgBo/B,qBAC3D,GACC,CAACne,IACEgpC,EAAmB,eAAkB,CAACjqD,EAAIuY,KAC9C,GAAI0I,EAAOljB,QAAQ4oD,WAAW3mD,KAAQuY,EACpC,MAAM,IAAIwU,MAAM,wBAAwB/sB,eAAgBuY,UAC1D,GACC,CAAC0I,IACEukC,EAAwB,eAAkB,CAACvwC,EAAQ5S,KACvD,IAAK4S,EAAOqwC,WACV,OAGF,GAAIrkC,EAAOljB,QAAQ4oD,WAAW1xC,EAAOjV,MAAQohC,GAAawd,KACxD,OAGF,MAAMwI,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IAE/CyoD,GAAY,OAAS,CAAC,EAAGrB,EAAW,CACxChoB,MAAOnqB,EAAOmqB,MACd57B,OAAQ6lD,GAAwBa,kBAGlCjpC,EAAOljB,QAAQqtB,aAAa,eAAgBq9B,EAAWpmD,EAAM,GAC5D,CAAC4e,IACEwmC,EAAoB,eAAkBxyC,IAC1CwxC,EAAgB1oD,QAAUkX,CAAM,GAC/B,IACGywC,EAAqB,eAAkB,CAACzwC,EAAQ5S,KAC/C4S,EAAOqwC,YAIRrkC,EAAOljB,QAAQ4oD,WAAW1xC,EAAOjV,MAAQohC,GAAaijB,OAS1DoC,EAAgB1oD,QAAU,KAC1ByoD,EAAazoD,QAAUuwB,YAAW,KAChC,IAAIo5B,EAIJ,GAFAlB,EAAazoD,QAAU,MAEmC,OAApD2pD,EAAwBjB,EAAgB1oD,cAAmB,EAAS2pD,EAAsB1nD,MAAQiV,EAAOjV,GAAI,CAEjH,IAAKihB,EAAOljB,QAAQ2mD,OAAOzvC,EAAOjV,IAChC,OAIF,GAAIihB,EAAOljB,QAAQ4oD,WAAW1xC,EAAOjV,MAAQohC,GAAaijB,KACxD,OAGF,MAAM+C,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IAE/CyoD,GAAY,OAAS,CAAC,EAAGrB,EAAW,CACxChoB,MAAOnqB,EAAOmqB,MACd57B,OAAQ8lD,GAAuBgE,cAGjCrsC,EAAOljB,QAAQqtB,aAAa,cAAeq9B,EAAWpmD,EACxD,KACA,GACD,CAAC4e,IACJ,aAAgB,IACP,KACL2N,aAAa43B,EAAazoD,QAAQ,GAEnC,IACH,MAAM2gD,EAAoB,eAAkB,CAACzpC,EAAQ5S,KACnD,GAAI4S,EAAO0pC,WAAavd,GAAawd,KAAM,CAGzC,GAAoB,MAAhBv8C,EAAMsF,MACR,OAGF,IAAInE,EAEJ,GAAkB,WAAdnB,EAAMqF,IACRlE,EAAS8lD,GAAuBc,mBAC3B,GAAkB,UAAd/nD,EAAMqF,IACflE,EAAS8lD,GAAuBe,kBAC3B,GAAkB,QAAdhoD,EAAMqF,IAAe,CAC9B,MAAM6lD,GAAe,QAAyBtsC,GAAQjkB,QAAOoiC,GAASne,EAAOljB,QAAQmqD,eAAejnC,EAAOljB,QAAQglC,cAAc9tB,EAAOjV,GAAIo/B,MAExI/8B,EAAMg8C,SACJppC,EAAOmqB,QAAUmuB,EAAa,KAEhC/pD,EAAS8lD,GAAuBgB,iBAEzBr1C,EAAOmqB,QAAUmuB,EAAaA,EAAa9vD,OAAS,KAE7D+F,EAAS8lD,GAAuBiB,YAG9B/mD,GACFnB,EAAMuF,gBAEV,CAEA,GAAIpE,EAAQ,CACV,MAAM4jD,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IAE/CyoD,GAAY,OAAS,CAAC,EAAGrB,EAAW,CACxC5jD,SACA47B,MAAOnqB,EAAOmqB,QAGhBne,EAAOljB,QAAQqtB,aAAa,cAAeq9B,EAAWpmD,EACxD,CACF,MAAO,GAAI4S,EAAOqwC,WAAY,CAC5B,IAAI9hD,EAEJ,GAAkB,MAAdnB,EAAMqF,KAAerF,EAAMg8C,SAC7B,OAcF,IAXI,SAAeh8C,KAEPA,EAAM0E,SAAW1E,EAAM2E,UAA0B,MAAd3E,EAAMqF,IADnDlE,EAAS6lD,GAAwBmB,iBAGV,UAAdnoD,EAAMqF,IACflE,EAAS6lD,GAAwBgB,aACV,WAAdhoD,EAAMqF,KAAkC,cAAdrF,EAAMqF,MAEzClE,EAAS6lD,GAAwBoB,eAG/BjnD,EAAQ,CACV,MAAM4jD,EAAYnmC,EAAOljB,QAAQ6oC,aAAa3xB,EAAOjV,IAE/CyoD,GAAY,OAAS,CAAC,EAAGrB,EAAW,CACxChoB,MAAOnqB,EAAOmqB,MACd13B,IAAKrF,EAAMqF,IACXlE,WAGFyd,EAAOljB,QAAQqtB,aAAa,eAAgBq9B,EAAWpmD,EACzD,CACF,IACC,CAAC4e,IACEqmC,EAAqB,eAAkBryC,IAC3C,MAAM,GACJjV,EAAE,MACFo/B,EAAK,OACL57B,EAAM,IACNkE,GACEuN,EACEu4C,EAAyB,CAC7BxtD,KACAytD,aAAcruB,GAGZ57B,IAAW6lD,GAAwBmB,iBACjC,qBAAyB,MAC3BgD,EAAuB9Z,aAAehsC,EAEtC8lD,EAAuB7C,cAAgBvrB,EAEhC57B,IAAW6lD,GAAwBoB,gBAC5C+C,EAAuB7C,cAAgBvrB,GAGzCne,EAAOljB,QAAQ2vD,iBAAiBF,EAAuB,GACtD,CAACvsC,IACEsmC,EAAoB,eAAkBtyC,IAC1C,MAAM,GACJjV,EAAE,OACFwD,EAAM,MACN47B,GACEnqB,EAEJ,IAAI41C,EADJ5pC,EAAOljB,QAAQwmD,yCAAyCvkD,GAGpDwD,IAAW8lD,GAAuBe,aACpCQ,EAAmB,QACVrnD,IAAW8lD,GAAuBiB,WAC3CM,EAAmB,QACVrnD,IAAW8lD,GAAuBgB,kBAC3CO,EAAmB,QAGrB,IAAIznB,EAAiC,kBAAX5/B,EAC1B,MAAMwnD,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OAEzDmhC,GAAwB/kC,EAAM0sD,8CAGjC3nB,EAAsB3V,OAAO6H,OAAO01B,EAAahrD,IAAK6C,MAAK8qD,GAClDA,EAAW7C,qBAItB7pC,EAAOljB,QAAQ6vD,gBAAgB,CAC7B5tD,KACAojC,sBACAhE,QACAyrB,oBACA,GACD,CAAC5pC,EAAQ5iB,EAAM0sD,8CAClB37B,GAAuBnO,EAAQ,kBAAmBosC,EAAmB7H,IACrEp2B,GAAuBnO,EAAQ,cAAeosC,EAAmB5F,IACjEr4B,GAAuBnO,EAAQ,eAAgBosC,EAAmB3H,IAClEt2B,GAAuBnO,EAAQ,cAAeosC,EAAmB3O,IACjEtvB,GAAuBnO,EAAQ,eAAgBosC,EAAmB/F,IAClEl4B,GAAuBnO,EAAQ,cAAeosC,EAAmB9F,IACjEn3B,GAAwBnP,EAAQ,eAAgB5iB,EAAMupD,gBACtDx3B,GAAwBnP,EAAQ,cAAe5iB,EAAMwpD,eACrD,MAAMlB,EAAa,eAAkB3mD,IACnC,GAAI3B,EAAMujC,WAAaV,GAAcW,KACnC,OAAOT,GAAaijB,KAGtB,MAAM2G,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OAE9D,OADkB+oD,EAAahrD,IAAOytB,OAAOC,KAAKs9B,EAAahrD,IAAKvC,OAAS,EAC1D2jC,GAAawd,KAAOxd,GAAaijB,IAAI,GACvD,CAACpjC,EAAQ5iB,EAAMujC,WACZisB,EAAsB,IAAiB3C,IAC3C,MAAMC,EAA8BD,IAAa7sD,EAAM0uD,cAEvD,GAAIK,GAAyBjC,EAA6B,CACxD,MAAM7kD,EAAU4sB,IAAcjE,GAAckE,YAAc,CACxDxQ,IAAK1B,EAAOljB,SACV,CAAC,EACLqvD,EAAsBlC,EAAU5kD,EAClC,CAEIjI,EAAM0uD,eAAiB5B,IAI3B6B,EAAiB9B,GACjB+B,EAAiBlvD,QAAUmtD,EAC3BjqC,EAAOljB,QAAQqtB,aAAa,sBAAuB8/B,GAAS,IAExD4C,EAA2B,eAAkB,CAAC9tD,EAAIqrD,KACtD,MAAMH,GAAW,OAAS,CAAC,EAAG+B,EAAiBlvD,SAE9B,OAAbstD,EACFH,EAASlrD,IAAM,OAAS,CAAC,EAAGqrD,UAErBH,EAASlrD,GAGlB6tD,EAAoB3C,EAAS,GAC5B,CAAC2C,IACEE,EAAyB,eAAkB,CAAC/tD,EAAIqrD,KACpDpqC,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMwpD,GAAkB,OAAS,CAAC,EAAGxpD,EAAMyhD,UAQ3C,OANiB,OAAb2H,EACFI,EAAgBzrD,GAAMqrD,SAEfI,EAAgBzrD,IAGlB,OAAS,CAAC,EAAGiC,EAAO,CACzByhD,SAAU+H,GACV,IAEJxqC,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,IACEuqC,EAA2B,eAAkB,CAACxrD,EAAIo/B,EAAOisB,KAC7DpqC,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMwpD,GAAkB,OAAS,CAAC,EAAGxpD,EAAMyhD,UAc3C,OAZiB,OAAb2H,EACFI,EAAgBzrD,IAAM,OAAS,CAAC,EAAGyrD,EAAgBzrD,GAAK,CACtD,CAACo/B,IAAQ,OAAS,CAAC,EAAGisB,aAGjBI,EAAgBzrD,GAAIo/B,GAEqB,IAA5C3R,OAAOC,KAAK+9B,EAAgBzrD,IAAKvC,eAC5BguD,EAAgBzrD,KAIpB,OAAS,CAAC,EAAGiC,EAAO,CACzByhD,SAAU+H,GACV,IAEJxqC,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,IACEysC,EAAmB,eAAkBz4C,IACzC,MAAM,GACJjV,GACEiV,EACE1N,GAAQ,OAA8B0N,EAAQ,IAEpDg1C,EAAiBjqD,EAAIohC,GAAaijB,MAClCyJ,EAAyB9tD,GAAI,OAAS,CACpCuY,KAAM6oB,GAAawd,MAClBr3C,GAAO,GACT,CAAC0iD,EAAkB6D,IAChBE,EAAgC,IAAiB/4C,IACrD,MAAM,GACJjV,EAAE,aACFytD,EAAY,YACZ9C,EAAW,aACXjX,GACEz+B,EAEEo2C,GADe,QAAyBpqC,GAChB/X,QAAO,CAACC,EAAKi2B,KAGzC,IAFmBne,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,GAEpCkmB,WACd,OAAOn8C,EAGT,IAAI7G,EAAW2e,EAAOljB,QAAQomD,aAAankD,EAAIo/B,GAW/C,OATIquB,IAAiBruB,IAAUurB,GAAejX,KAC5CpxC,EAAWqoD,EAAc,GAAKjX,GAGhCvqC,EAAIi2B,GAAS,CACX/+B,MAAOiC,EACPggB,OAAO,EACPwoC,mBAAmB,GAEd3hD,CAAG,GACT,CAAC,GACJ4kD,EAAuB/tD,EAAIqrD,GAEvBoC,GACFxsC,EAAOljB,QAAQy/C,aAAax9C,EAAIytD,EAClC,IAEIG,EAAkB,eAAkB34C,IACxC,MAAM,GACJjV,GACEiV,EACE1N,GAAQ,OAA8B0N,EAAQ,IAEpDg1C,EAAiBjqD,EAAIohC,GAAawd,MAClCkP,EAAyB9tD,GAAI,OAAS,CACpCuY,KAAM6oB,GAAaijB,MAClB98C,GAAO,GACT,CAAC0iD,EAAkB6D,IAChBG,EAA+B,IAAiBh5C,IACpD,MAAM,GACJjV,EAAE,oBACFojC,EACAhE,MAAO8uB,EAAY,iBACnBrD,EAAmB,QACjB51C,EACJgM,EAAOljB,QAAQwmD,yCAAyCvkD,GAExD,MAAMmuD,EAAoB,KACC,SAArBtD,GAA+BqD,GACjCjtC,EAAOljB,QAAQ8tD,iCAAiC7rD,EAAIkuD,EAAcrD,GAGpEkD,EAAuB/tD,EAAI,MAC3B8tD,EAAyB9tD,EAAI,KAAK,EAGpC,GAAIojC,EAEF,YADA+qB,IAIF,MAAMnD,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OACxDyc,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAGlC,GAFmCytB,OAAO6H,OAAO01B,EAAahrD,IAAK6C,MAAK8qD,GAAcA,EAAW7C,oBAI/F,YADAoC,EAAkBnvD,QAAQiC,GAAIuY,KAAO6oB,GAAawd,MAMpD,GAF8BnxB,OAAO6H,OAAO01B,EAAahrD,IAAK6C,MAAK8qD,GAAcA,EAAWrrC,QAQ1F,OALA4qC,EAAkBnvD,QAAQiC,GAAIuY,KAAO6oB,GAAawd,UAElDkP,EAAyB9tD,EAAI,CAC3BuY,KAAM6oB,GAAawd,OAKvB,MAAMmH,EAAY9kC,EAAOljB,QAAQqwD,+CAA+CpuD,GAEhF,GAAI2pD,EAAkB,CACpB,MAAMp2B,EAAcw4B,IAClBmB,EAAkBnvD,QAAQiC,GAAIuY,KAAO6oB,GAAawd,KAElDkP,EAAyB9tD,EAAI,CAC3BuY,KAAM6oB,GAAawd,OAGjBgL,EACFA,EAAwBmC,GAExB,IACF,EAGF,IACEppB,QAAQC,QAAQ+mB,EAAiB5D,EAAWrnC,IAAMmlC,MAAKmI,IACrD/qC,EAAOljB,QAAQkoD,WAAW,CAAC+F,IAC3BmC,GAAmB,IAClBz0B,MAAMnG,EAGX,CAFE,MAAOw4B,GACPx4B,EAAYw4B,EACd,CACF,MACE9qC,EAAOljB,QAAQkoD,WAAW,CAACF,IAC3BoI,GACF,IAEIlH,EAA6B,eAAkBhyC,IACnD,MAAM,GACJjV,EAAE,MACFo/B,EAAK,MACL/+B,EAAK,WACLkoD,EACA4D,yBAA0BC,GACxBn3C,EACJ+0C,EAAmBhqD,EAAIo/B,GACvB,MAAMwF,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAClC1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAClC,IAAIs5C,EAAcj5C,EAEdukC,EAAO3I,cAAgBmwB,IACzB9S,EAAc1U,EAAO3I,YAAY57B,EAAO4gB,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,KAG3E,IAAI4rB,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OAExDopD,GAAW,OAAS,CAAC,EAAGL,EAAahrD,GAAIo/B,GAAQ,CACnD/+B,MAAOi5C,EACP+S,aAAc9D,EAAa,4BAA8B,qBAO3D,OAJK3jB,EAAOmgB,yBACVyG,EAAyBxrD,EAAIo/B,EAAOisB,GAG/B,IAAI1oB,SAAQC,IACjB,MAAMyrB,EAAW,GAEjB,GAAIzpB,EAAOmgB,wBAAyB,CAClC,MAAMuH,EAAajB,EAAShrD,QAAU2qD,EAAahrD,GAAIo/B,GAAO/+B,MAC9DgrD,GAAW,OAAS,CAAC,EAAGA,EAAU,CAChCP,mBAAmB,IAErBU,EAAyBxrD,EAAIo/B,EAAOisB,GAEpC,MAAMY,EAAmBjB,EAAahrD,GAChCsuD,GAAmB,OAA8BrC,EAAkB,CAAC7sB,GAAOlqB,IAAI+c,KAE/E2xB,EAAUjhB,QAAQC,QAAQgC,EAAOmgB,wBAAwB,CAC7D/kD,KACA0e,MACArgB,MAAOgtD,EACPiB,aACAgC,sBACEzK,MAAK0K,IAGHttC,EAAOljB,QAAQ4oD,WAAW3mD,KAAQohC,GAAaijB,MAKnD2G,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,QACxDssD,GAAiB,OAAS,CAAC,EAAGA,EAAgB,CAC5CzD,mBAAmB,KAKNzqD,MAAQukC,EAAOmgB,wBAA0BiG,EAAahrD,GAAIo/B,GAAO/+B,MAAQi5C,EACxFkS,EAAyBxrD,EAAIo/B,EAAOmvB,IAZlC3rB,GAAQ,EAYyC,IAErDyrB,EAASxnD,KAAK+8C,EAChB,CAEAn2B,OAAO4J,QAAQ2zB,EAAahrD,IAAKklB,SAAQ,EAAEspC,EAAWb,MACpD,GAAIa,IAAcpvB,EAChB,OAGF,MAAMqvB,EAAcxtC,EAAOljB,QAAQ2lC,UAAU8qB,GAE7C,IAAKC,EAAY1J,wBACf,OAGF4I,GAAa,OAAS,CAAC,EAAGA,EAAY,CACpC7C,mBAAmB,IAErBU,EAAyBxrD,EAAIwuD,EAAWb,GACxC3C,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OAExD,MAAMysD,EAAoB1D,EAAahrD,GACjCsuD,GAAmB,OAA8BI,EAAmB,CAACF,GAAWt5C,IAAI+c,KAEpF2xB,EAAUjhB,QAAQC,QAAQ6rB,EAAY1J,wBAAwB,CAClE/kD,KACA0e,MACArgB,MAAOsvD,EACPrB,YAAY,EACZgC,sBACEzK,MAAK0K,IAGHttC,EAAOljB,QAAQ4oD,WAAW3mD,KAAQohC,GAAaijB,MAKnDkK,GAAiB,OAAS,CAAC,EAAGA,EAAgB,CAC5CzD,mBAAmB,IAErBU,EAAyBxrD,EAAIwuD,EAAWD,IAPtC3rB,GAAQ,EAO6C,IAEzDyrB,EAASxnD,KAAK+8C,EAAQ,IAExBjhB,QAAQ2G,IAAI+kB,GAAUxK,MAAK,KACrB5iC,EAAOljB,QAAQ4oD,WAAW3mD,KAAQohC,GAAawd,MACjDoM,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OACxD2gC,GAASooB,EAAahrD,GAAIo/B,GAAO9c,QAEjCsgB,GAAQ,EACV,GACA,GACF,GACD,CAAC3hB,EAAQ+oC,EAAoBwB,IAC1BmD,EAAwC,eAAkB3uD,IAC9D,MAAMgrD,EAAevH,GAA0BxiC,EAAOljB,QAAQkE,OACxDyc,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAElC,IAAI+lD,GAAY,OAAS,CAAC,EAAGrnC,GAc7B,OAZA+O,OAAO4J,QAAQ2zB,EAAahrD,IAAKklB,SAAQ,EAAEka,EAAOuuB,MAChD,MAAM/oB,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAEpCwF,EAAOohB,YACTD,EAAYnhB,EAAOohB,YAAY,CAC7B3lD,MAAOstD,EAAWttD,MAClBqe,IAAKqnC,IAGPA,EAAU3mB,GAASuuB,EAAWttD,KAChC,IAEK0lD,CAAS,GACf,CAAC9kC,IAQJmM,GAAiBnM,EAPE,CACjB0lC,aACA+G,mBACAE,kBACAzG,oCAAqCF,EACrCmH,+CAAgDO,IAGlD,aAAgB,KACVxB,GACFU,EAAoBV,EACtB,GACC,CAACA,EAAmBU,IACvB,aAAgB,KACd,MAAMnO,GAAe,QAA6Bz+B,GAE5C2tC,EAA0B1B,EAAkBnvD,QAClDmvD,EAAkBnvD,SAAU,SAAUgvD,GAEtCt/B,OAAO4J,QAAQ01B,GAAe7nC,SAAQ,EAAEllB,EAAIiV,MAC1C,IAAI45C,EAAuBlC,EAE3B,MAAMC,GAAqE,OAAxDiC,EAAwBD,EAAwB5uD,SAAe,EAAS6uD,EAAsBt2C,OAAS6oB,GAAaijB,KACjIwI,EAAsD,OAAxCF,EAAmBjN,EAAa1/C,IAAe2sD,EAAmB3sD,EAElFiV,EAAOsD,OAAS6oB,GAAawd,MAAQgO,IAAaxrB,GAAaijB,KACjE2J,GAA8B,OAAS,CACrChuD,GAAI6sD,GACH53C,IACMA,EAAOsD,OAAS6oB,GAAaijB,MAAQuI,IAAaxrB,GAAawd,MACxEqP,GAA6B,OAAS,CACpCjuD,GAAI6sD,GACH53C,GACL,GACA,GACD,CAACgM,EAAQ8rC,EAAeiB,EAA+BC,GAA8B,ECjnBxF,CAAkBhtC,EAAQ5iB,GAC1B,MAAM0pD,EAAc,SAAa,CAAC,IAEhCG,eAAgB4G,GACdzwD,EACE6pD,EAAiB,eAAkBjzC,IACnCA,EAAOkzC,QAAQlH,oBAIdhsC,EAAOoqB,OAAO+oB,aAIdnzC,EAAOoqB,OAAO2B,iBAIf8tB,EACKA,EAAmB75C,IAGxBA,EAAOkzC,QAAQ3H,aAKlB,CAACsO,IAgCJ,aAAgB,KACd,MAAMC,EAAYhH,EAAYhqD,QAC9B,MAAO,KACL0vB,OAAO4J,QAAQ03B,GAAW7pC,SAAQ,EAAEllB,EAAI6wC,MACtCpjB,OAAOC,KAAKmjB,GAAQ3rB,SAAQka,IAC1B,MAAOrR,GAAWghC,EAAU/uD,GAAIo/B,GAChCxQ,aAAab,UACNghC,EAAU/uD,GAAIo/B,EAAM,GAC3B,GACF,CACH,GACA,IACH,MAAMipB,EAAkC,eAAkB,CAACroD,EAAIo/B,KAC7D,GAAK2oB,EAAYhqD,QAAQiC,GAIzB,GAAKo/B,GAKE,GAAI2oB,EAAYhqD,QAAQiC,GAAIo/B,GAAQ,CACzC,MAAO,CAAE4vB,GAAejH,EAAYhqD,QAAQiC,GAAIo/B,GAChD4vB,GACF,OAPEvhC,OAAOC,KAAKq6B,EAAYhqD,QAAQiC,IAAKklB,SAAQojC,IAC3C,MAAO,CAAE0G,GAAejH,EAAYhqD,QAAQiC,GAAIsoD,GAChD0G,GAAa,GAKjB,GACC,IACGtuB,EAAmB,eAAkBzrB,IACzC,MAAM,GACJjV,EAAE,MACFo/B,EAAK,WACLmpB,GACEtzC,EACJ,OAAO,IAAI0tB,SAAQC,IA/DC,EAAC5iC,EAAIo/B,EAAOmpB,EAAY/yB,KAC5C,IAAK+yB,EAEH,YADA/yB,IAQF,GAJKuyB,EAAYhqD,QAAQiC,KACvB+nD,EAAYhqD,QAAQiC,GAAM,CAAC,GAGzB+nD,EAAYhqD,QAAQiC,GAAIo/B,GAAQ,CAClC,MAAOrR,GAAWg6B,EAAYhqD,QAAQiC,GAAIo/B,GAC1CxQ,aAAab,EACf,CAGA,MAOMA,EAAUO,YAAW,KACzBkH,WACOuyB,EAAYhqD,QAAQiC,GAAIo/B,EAAM,GACpCmpB,GACHR,EAAYhqD,QAAQiC,GAAIo/B,GAAS,CAACrR,EAXX,KACrB,MAAOA,GAAWg6B,EAAYhqD,QAAQiC,GAAIo/B,GAC1CxQ,aAAab,GACbyH,WACOuyB,EAAYhqD,QAAQiC,GAAIo/B,EAAM,EAOmB,EAqCxDopB,CAAcxoD,EAAIo/B,EAAOmpB,GAAYpoB,UACnC,MAAM8uB,EAAyB5wD,EAAMujC,WAAaV,GAAcwB,IAAMzhB,EAAOljB,QAAQopD,oCAAsClmC,EAAOljB,QAAQsnD,qCAG1I,GAAIpkC,EAAOljB,QAAQkmD,YAAYjkD,EAAIo/B,KAAW+B,GAAcyd,KAAM,CAChE,MAAMrD,QAAe0T,EAAuBh6C,GAC5C2tB,EAAQ2Y,EACV,IACA,GACF,GACD,CAACt6B,EAAQ5iB,EAAMujC,WACZstB,EAA0B,eAAkB,CAAClvD,EAAIo/B,IAC9C/gC,EAAMujC,WAAaV,GAAcW,KAAO5gB,EAAOljB,QAAQ+tD,gDAAgD9rD,EAAIo/B,GAASne,EAAOljB,QAAQqwD,+CAA+CpuD,IACxL,CAACihB,EAAQ5iB,EAAMujC,WACZutB,EAAkB,eAAkB,CAACnvD,EAAIo/B,KAEtC,CACLitB,aAFmB5I,GAA0BxiC,EAAOljB,QAAQkE,OAEjCjC,GAAIo/B,GAAOitB,gBAEvC,CAACprC,IAQJmM,GAAiBnM,EAPQ,CACvBinC,iBACAxnB,mBACA6jB,yCAA0C8D,EAC1C+G,iCAAkCF,EAClCG,yBAA0BF,GAE4B,E,gBCzHnD,MAAMG,GAAuB,CAACrtD,EAAO5D,EAAO4iB,KACjDA,EAAOljB,QAAQi1B,gBAAgBkpB,KAAOiD,GAAwB,CAC5DjD,KAAM79C,EAAM69C,KACZ6C,SAAU1gD,EAAM0gD,SAChBxtC,QAASlT,EAAMkT,QACf6tC,SAAU/gD,EAAM+gD,YAEX,OAAS,CAAC,EAAGn9C,EAAO,CACzBi6C,KAAM0D,GAAsB,CAC1B3+B,SACA4+B,aAAc,KACdC,aAAczhD,EAAM+gD,SACpBW,YAAa1hD,EAAMkT,aCrBnBg+C,GAA4B,EAChC5P,MACAF,eACAC,eACAG,mBAEA,MAAMS,EAAO,CAAC,EAEd,IAAK,IAAI9iD,EAAI,EAAGA,EAAImiD,EAAIliD,OAAQD,GAAK,EAAG,CACtC,MAAM4vC,EAAQuS,EAAIniD,GAEdqiD,GAAgBA,EAAazS,IAAwC,IAA9ByS,EAAazS,GAAOoiB,OAA6C,MAA9B3P,EAAazS,GAAOmT,SACjGV,EAAazS,GAAOoT,SACnBF,EAAKlT,GAASyS,EAAazS,GAE3BkT,EAAKlT,GAAS,CACZptC,GAAIotC,EACJoiB,MAAO,EACPjP,OAAQ,KACRkP,YAAa,GACbC,cAAe,KAGrB,CAEA,MAAO,CACLC,aAAcn9B,GACd8tB,OACAD,UAAW,EACXZ,eACAC,eACAC,MACD,EC9BI,SAASiQ,GAA+BC,EAAM9hD,GACnD,OAAO8hD,EAAKC,QAAQ,IAAI/hD,IAC1B,CAgBA,SAASgiD,GAA+BC,GACtC,OAAOA,EAAQ/zD,QAAQ,SAAU,OACnC,CAMA,SAASg0D,GAA0BjwD,GACjC,MAAO,IAAI,oBAA4B+vD,GAA+B7uD,OAAOlB,OAC/E,ECpB4B,KAAA0wC,GAAa,CAAC,0GAA2G,wDAU9I,SAASwf,GAAiBjvC,GAC/B,MAAMkvC,EAAwB,eAAkB/wB,IAAS,CACvDA,QACAC,OAAQpe,EAAOljB,QAAQ2lC,UAAUtE,MAC/B,CAACne,IAKCmvC,EAAqC,eAAkB,IAAIjjC,IAKxDlM,EAAOljB,QAAQomD,gBAAgBh3B,IACrC,CAAClM,IACE2lB,EAAe,eAAkB5mC,IACrC,MAAM0e,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAElC,IAAK0e,EACH,MAAM,IAAIqO,MAAM,mBAAmB/sB,WAUrC,MAPe,CACbA,KACAirC,QAAShqB,EAAOljB,QAAQsyD,gBACxB3xC,MAEA4xC,SAAUF,EAEC,GACZ,CAACnvC,EAAQmvC,IACNG,EAAoB,eAAkB,CAACvwD,EAAIo/B,KAC/C,MAAM1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAC5BmoD,EAAUlnC,EAAOljB,QAAQyyD,WAAWxwD,GAE1C,IAAK0e,IAAQypC,EACX,MAAM,IAAIp7B,MAAM,mBAAmB/sB,WAGrC,MAAMywD,GAAY,SAAsBxvC,GAClCyvC,GAAe,SAAyBzvC,GAe9C,MAde,CACbjhB,KACAo/B,QACA1gB,MACAypC,UACA9nD,MAAOqe,EAAI0gB,GACXC,OAAQpe,EAAOljB,QAAQ2lC,UAAUtE,GACjCuf,SAAU19B,EAAOljB,QAAQkmD,YAAYjkD,EAAIo/B,GAEzCkxB,SAAUF,EACVztC,IAAK1B,EAAOljB,QACZuhC,SAAwB,OAAdmxB,GAAsBA,EAAUrxB,QAAUA,GAASqxB,EAAUzwD,KAAOA,EAC9EmK,SAAUumD,GAAgBA,EAAatxB,QAAUA,GAASsxB,EAAa1wD,KAAOA,EAAK,GAAK,EAE7E,GACZ,CAACihB,EAAQmvC,IACNrtB,EAAgB,eAAkB,CAAC/iC,EAAIo/B,KAC3C,MAAMC,EAASpe,EAAOljB,QAAQ2lC,UAAUtE,GAClC/+B,EAAQ4gB,EAAOljB,QAAQomD,aAAankD,EAAIo/B,GACxC1gB,EAAMuC,EAAOljB,QAAQ2mD,OAAO1kD,GAC5BmoD,EAAUlnC,EAAOljB,QAAQyyD,WAAWxwD,GAE1C,IAAK0e,IAAQypC,EACX,MAAM,IAAIp7B,MAAM,mBAAmB/sB,WAGrC,MAAMywD,GAAY,SAAsBxvC,GAClCyvC,GAAe,SAAyBzvC,GACxChM,EAAS,CACbjV,KACAo/B,QACA1gB,MACAypC,UACA9oB,SACAsf,SAAU19B,EAAOljB,QAAQkmD,YAAYjkD,EAAIo/B,GAEzCkxB,SAAUF,EACV9wB,SAAwB,OAAdmxB,GAAsBA,EAAUrxB,QAAUA,GAASqxB,EAAUzwD,KAAOA,EAC9EmK,SAAUumD,GAAgBA,EAAatxB,QAAUA,GAASsxB,EAAa1wD,KAAOA,EAAK,GAAK,EACxFK,QACAijC,eAAgBjjC,GAalB,OAVIg/B,GAAUA,EAAOnD,iBACnBjnB,EAAOquB,eAAiBjE,EAAOnD,eAAe,CAC5Cl8B,KACAo/B,MAAOnqB,EAAOmqB,MACd/+B,MAAO4U,EAAO5U,MACdsiB,IAAK1B,EAAOljB,WAIhBkX,EAAOqwC,WAAajmB,GAAUpe,EAAOljB,QAAQmqD,eAAejzC,GACrDA,CAAM,GACZ,CAACgM,EAAQmvC,IACNjM,EAAe,eAAkB,CAACnkD,EAAIo/B,KAC1C,MAAMC,EAASpe,EAAOljB,QAAQ2lC,UAAUtE,GAQxC,IAAKC,IAAWA,EAAOsxB,YAAa,CAClC,MAAM7R,EAAW79B,EAAOljB,QAAQ2mD,OAAO1kD,GAEvC,IAAK8+C,EACH,MAAM,IAAI/xB,MAAM,mBAAmB/sB,WAGrC,OAAO8+C,EAAS1f,EAClB,CAEA,OAAOC,EAAOsxB,YAAYJ,EAAkBvwD,EAAIo/B,GAAO,GACtD,CAACne,EAAQsvC,IACNK,EAAyB,eAAkBxxB,GAC1Cne,EAAOljB,QAAQyjB,eAAezjB,QDnHhC,SAAoC8N,EAAMuzB,GAC/C,OAAOvzB,EAAKxI,cAAc,qCAAqC0sD,GAA+B3wB,OAChG,CCqHWyxB,CAA2B5vC,EAAOljB,QAAQyjB,eAAezjB,QAASqhC,GAHhE,MAIR,CAACne,IACE6vC,EAAgB,eAAkB9wD,GACjCihB,EAAOljB,QAAQyjB,eAAezjB,QDlHhC,SAA2B8N,EAAM7L,GACtC,OAAO6L,EAAKxI,cAAc4sD,GAA0BjwD,GACtD,CCoHW+wD,CAAkB9vC,EAAOljB,QAAQyjB,eAAezjB,QAASiC,GAHvD,MAIR,CAACihB,IACE+vC,EAAiB,eAAkB,CAAChxD,EAAIo/B,IACvCne,EAAOljB,QAAQyjB,eAAezjB,QDtHhC,SAA4B8N,GAAM,GACvC7L,EAAE,MACFo/B,IAEA,MAEM6xB,EAAW,GAFGhB,GAA0BjwD,OACrB,wBAAgC+vD,GAA+B3wB,OAExF,OAAOvzB,EAAKxI,cAAc4tD,EAC5B,CCkHWC,CAAmBjwC,EAAOljB,QAAQyjB,eAAezjB,QAAS,CAC/DiC,KACAo/B,UALO,MAOR,CAACne,IAUJmM,GAAiBnM,EATC,CAChBkjC,eACAphB,gBACAiuB,iBACApqB,eACAkqB,gBACAX,wBACAS,0BAGJ,C,gBC7JA,MAAMO,GAA6B,CAACC,EAAoBC,IAC5B,MAAtBD,GAIAzqD,MAAMC,QAAQwqD,GAHTA,EAOLC,GAAsBA,EAAmB,KAAOD,EAC3CC,EAGF,CAACD,GAGGE,GAA4B,CAACrvD,EAAO5D,KAC/C,IAAIkzD,EAEJ,OAAO,OAAS,CAAC,EAAGtvD,EAAO,CACzB22B,UAAyF,OAA7E24B,EAAwBJ,GAA2B9yD,EAAMmzD,iBAA2BD,EAAwB,IACxH,EClBSE,GAAgC,CAACxwC,EAAQ5iB,KACpD,MAGM4P,EAjBkBrC,KACxB,MAAM,QACJqC,GACErC,EACJ,OAAO,WAAc,KAKZ,EAAAuC,EAAA,GAJO,CACZyP,aAAc,CAAC,gBACfI,qBAAsB,CAAC,yBAEI,IAAyB/P,IACrD,CAACA,GAAS,EAOG,CAHG,CACjBA,QAAS5P,EAAM4P,UAGXyjD,EAAwB,eAAkBvlB,IAC9C,MAAMwlB,GAAkB,OAAS,CAAC,EAAG,KAAiC,CACpEC,cAAe3jD,EAAQ2P,aACvBi0C,gBAAiB5jD,EAAQ+P,qBACzB+pB,WAAY9mB,EAAOljB,QAAQ+5B,cAAc,iCAGrCg6B,EAA4BzzD,EAAM0zD,kBAClCC,EAA4E,MAAtD7lB,EAAa3C,OAAO,MAYhD,OAVIsoB,IAA8BE,GAChC7lB,EAAa3C,OAAO,MAAiCmoB,EACrDxlB,EAAa7C,IAAM,CAAC,QAAkC6C,EAAa7C,OACzDwoB,GAA6BE,UAChC7lB,EAAa3C,OAAO,MAC3B2C,EAAa7C,IAAM6C,EAAa7C,IAAItsC,QAAOoiC,GAASA,IAAU,QACrD0yB,GAA6BE,IACtC7lB,EAAa3C,OAAO,OAAiC,OAAS,CAAC,EAAGmoB,EAAiBxlB,EAAa3C,OAAO,QAGlG2C,CAAY,GAClB,CAAClrB,EAAQhT,EAAS5P,EAAM0zD,oBAC3Bl3B,GAA6B5Z,EAAQ,iBAAkBywC,EAAsB,ECjClEO,GAA0B,CAAChwD,EAAO5D,KAC7C,IAAIq4B,EAAMw7B,EAAkBpkB,EAAqBqkB,EAEjD,MAAMC,EAAiQ,OAApP17B,EAA+C,OAAvCw7B,EAAmB7zD,EAAM+zD,WAAqBF,EAAiE,OAA7CpkB,EAAsBzvC,EAAMqsC,eAA0F,OAAxDynB,EAAwBrkB,EAAoBlb,cAAtD,EAAkFu/B,EAAsBC,WAAqB17B,EAAO,GACrR,OAAO,OAAS,CAAC,EAAGz0B,EAAO,CACzB2wB,QAAS,CACPw/B,WAAW,SAAkBA,EAAW/zD,EAAMg0D,+BAC9CC,WAAY,KAEd,ECXJ,SAASC,GAAelmB,GACtB,MAAM,aACJnoC,EAAY,UACZH,EAAS,aACTQ,EAAY,UACZD,GACE+nC,EACEhoC,EAAgBC,EAAYC,EAGlC,OAAIA,EAAeL,EACVI,EAGLD,EAAgBH,EAAeH,EAC1BM,EAAgBH,EAGrBI,EAAYP,EACPO,OADT,CAKF,C,gBCxBA,MAAMkuD,IAAoB,EAEpBC,GAAY,EAChBjxB,UACAjb,YACAmsC,oBAEA,MAAMC,EAA2BnxB,EAAQtyB,MAAQqX,EAAUrX,MACrD0jD,EAA2BpxB,EAAQ/oB,OAAS8N,EAAU9N,OAC5D,IAAIo6C,GAAa,EACbC,GAAa,EAWjB,OATIH,GAA4BC,KAC9BC,EAAaF,EACbG,EAAatxB,EAAQ/oB,QAAUo6C,EAAaH,EAAgB,GAAKnsC,EAAU9N,OAEvEq6C,IACFD,EAAarxB,EAAQtyB,MAAQwjD,EAAgBnsC,EAAUrX,QAIpD,CACL2jD,aACAC,aACD,ECvBI,MAAMC,GAA2B9wD,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnE8xC,SAAU,CACR+B,uBAAwB,EACxBkd,UAAW,MCcFC,GAAuB50D,IAClC,IAAIimD,EAAuBP,EAE3B,MAAM9iC,EAAS4R,QAAsBhpB,EAAWxL,GC3BA,EAAC4iB,EAAQ5iB,KACzD,IAAI0lD,EAEJ,MAAMmP,EAAkB,eAAkB/mB,IACxC,IAAImY,EAEJ,GAA8D,OAAvDA,EAAwBjmD,EAAMmkC,wBAAiC8hB,EAAsB7V,eAC1F,OAAOtC,EAGT,MAAMgnB,EAAyBnkB,GAA0B3wC,EAAM4wC,qBAgB/D,OAfA9C,EAAa7C,IAAIpkB,SAAQka,IACvB,IAAIg0B,EAAuBC,EAE3B,MAAMC,EAA0E,OAA1DF,EAAwBD,EAAuB/zB,IAAkBg0B,EAAwB,GACzGG,EAAgBpnB,EAAa3C,OAAOpK,I9CZzC,SAAsBm0B,GAC3B,YAAmC1pD,IAA5B0pD,EAAcC,SACvB,E8CYUC,CAAaF,KAAkB,SAAYD,EAA+B,MAAjBC,OAAwB,EAASA,EAAcC,aAK5GrnB,EAAa3C,OAAOpK,IAAS,OAAS,CAAC,EAAG+M,EAAa3C,OAAOpK,GAAQ,CACpEo0B,UAAuE,OAA3DH,EAAyBF,EAAuB/zB,IAAkBi0B,EAAyB,KACvG,IAEGlnB,CAAY,GAClB,CAAC9tC,EAAM4wC,oBAA8E,OAAxD8U,EAAyB1lD,EAAMmkC,2BAAgC,EAASuhB,EAAuBtV,iBAC/H5T,GAA6B5Z,EAAQ,iBAAkBiyC,EAAgB,EDIvEQ,CAAmCzyC,EAAQ5iB,GAC3CozD,GAA8BxwC,EAAQ5iB,GTDA4iB,KACtCq3B,GAAiCr3B,EAAQuR,GAAuB,kBAAmB+8B,GAA0B,ESC7GoE,CAAyB1yC,GAKzBgX,GAAuBq5B,GAA2BrwC,EAAQ5iB,GAC1D45B,GAAuB4V,GAAyB5sB,EAAQ5iB,GACxD45B,GAAuBsX,GAA8BtuB,EAAQ5iB,GAC7D45B,GAAuBq3B,GAAsBruC,EAAQ5iB,GACrD45B,GAA+E,OAAvDqsB,EAAwBjmD,EAAMmkC,uBAAiC8hB,EAAsB7hB,cAAgB,GAA8BqlB,GAA6B7mC,EAAQ5iB,GAChM45B,GAAuBukB,GAAuBv7B,EAAQ5iB,GACtD45B,GAAuBg6B,GAAyBhxC,EAAQ5iB,GACxD45B,GAAuBsrB,GAAiCtiC,EAAQ5iB,GAChE45B,GAAuB2jB,GAAwB36B,EAAQ5iB,GACvD45B,GAAuBiY,GAAyBjvB,EAAQ5iB,GACxD45B,GAAuB6pB,GAA4B7gC,EAAQ5iB,GAC3D45B,GAAuB86B,GAA0B9xC,EAAQ5iB,GACzD45B,GAAuByC,GAA4BzZ,EAAQ5iB,GAC3Dq+C,GAA0Bz7B,EAAQ5iB,GNVJ,EAAC4iB,EAAQ5iB,KACvC,MAAM0jB,EAASD,EAAcb,EAAQ,oBAC/B2yC,EAAqB,WAAc,IAChCzC,GAA2B9yD,EAAMmzD,gBAAgB,SAA2BvwC,EAAOljB,QAAQkE,SACjG,CAACgf,EAAQ5iB,EAAMmzD,iBACZqC,EAAiB,SAAa,MACpC5yC,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,YACTU,UAAWq/B,EACXj/B,aAAct2B,EAAMy1D,uBACpB1/B,cAAe,MACfQ,YAAa,oBAEf,MAAM,kBACJm9B,EAAiB,yBACjBlwC,EAAwB,wBACxBkyC,EAAuB,WACvBzc,EAAU,eACV6E,EACA6X,gBAAiBC,GACf51D,EACE61D,GAA4BryC,GAA4BkwC,EACxD7kB,EAAcoP,GAAmBr7B,EAAQ5iB,GACzC81D,EAA+B,eAAkBn0D,IACrD,IAAIo0D,EAEJ,IAAIC,EAAQr0D,EACZ,MAAMs0D,EAA8D,OAAnDF,EAAwBP,EAAe91D,SAAmBq2D,EAAwBp0D,EAC7Fu0D,EAAatzC,EAAOljB,QAAQy2D,cAAcx0D,GAEhD,GAAIu0D,EAAY,CACd,MAAME,GAAgB,QAAgCxzC,GAChDyzC,EAAaD,EAAcp3D,WAAU+vC,GAASA,IAAUknB,IACxDK,EAAWF,EAAcp3D,WAAU+vC,GAASA,IAAUinB,IAE5D,GAAIK,IAAeC,EACjB,OAIAN,EADEK,EAAaC,EACPF,EAAcE,EAAW,GAEzBF,EAAcE,EAAW,EAErC,CAEAd,EAAe91D,QAAUiC,EACzBihB,EAAOljB,QAAQ62D,eAAe,CAC5BN,UACAD,UACEE,EAAW,GACd,CAACtzC,IAKE4zC,EAAoB,eAAkBngC,KACrB,SAA2BzT,EAAOljB,QAAQkE,SAE1CyyB,IACnB3S,EAAOuK,MAAM,2BACbrL,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnD22B,UAAWlE,MAEbzT,EAAOljB,QAAQg3B,cACjB,GACC,CAAC9T,EAAQc,IACNyyC,EAAgB,eAAkBx0D,IAAM,SAA2BihB,EAAOljB,QAAQkE,OAAO05B,SAAS37B,IAAK,CAACihB,IACxG+yC,EAAkB,eAAkBh0D,IACxC,GAAIi0D,IAAwBA,EAAoBhzC,EAAOljB,QAAQ6oC,aAAa5mC,IAC1E,OAAO,EAGT,MAAMmoD,EAAUlnC,EAAOljB,QAAQyyD,WAAWxwD,GAE1C,QAAsD,YAAtC,MAAXmoD,OAAkB,EAASA,EAAQ56C,WAAqC,MAAX46C,GAAmBA,EAAQ3H,SAIlF,GACV,CAACv/B,EAAQgzC,IACN76B,EAAkB,eAAkB,KAAM,SAAyBnY,IAAS,CAACA,IAC7E6zC,EAAY,eAAkB,CAAC90D,EAAIu0D,GAAa,EAAMQ,GAAiB,KAC3E,GAAK9zC,EAAOljB,QAAQi2D,gBAAgBh0D,GAMpC,GAFA6zD,EAAe91D,QAAUiC,EAErB+0D,EACFhzC,EAAOuK,MAAM,6BAA6BtsB,KAC1CihB,EAAOljB,QAAQ82D,kBAAkBN,EAAa,CAACv0D,GAAM,QAChD,CACL+hB,EAAOuK,MAAM,8BAA8BtsB,KAC3C,MACMg1D,GADY,SAA2B/zC,EAAOljB,QAAQkE,OAC7BjF,QAAOw3B,GAAMA,IAAOx0B,IAE/Cu0D,GACFS,EAAanuD,KAAK7G,IAGKg1D,EAAav3D,OAAS,GAAKy2D,IAGlDjzC,EAAOljB,QAAQ82D,kBAAkBG,EAErC,IACC,CAAC/zC,EAAQc,EAAQmyC,IACde,EAAa,eAAkB,CAACtV,EAAK4U,GAAa,EAAMQ,GAAiB,KAC7EhzC,EAAOuK,MAAM,sCACb,MAAM4oC,EAAgBvV,EAAI3iD,QAAOgD,GAAMihB,EAAOljB,QAAQi2D,gBAAgBh0D,KACtE,IAAIg1D,EAEJ,GAAID,EACFC,EAAeT,EAAaW,EAAgB,OACvC,CAEL,MAAMC,GAAkB,OAAS,CAAC,GAAG,SAA0Bl0C,IAE/Di0C,EAAchwC,SAAQllB,IAChBu0D,EACFY,EAAgBn1D,GAAMA,SAEfm1D,EAAgBn1D,EACzB,IAEFg1D,EAAevnC,OAAO6H,OAAO6/B,EAC/B,EAEyBH,EAAav3D,OAAS,GAAKy2D,IAGlDjzC,EAAOljB,QAAQ82D,kBAAkBG,EACnC,GACC,CAAC/zC,EAAQc,EAAQmyC,IACdU,EAAiB,eAAkB,EACvCN,UACAD,SACCE,GAAa,EAAMQ,KACpB,IAAK9zC,EAAOljB,QAAQ2mD,OAAO4P,KAAarzC,EAAOljB,QAAQ2mD,OAAO2P,GAC5D,OAGFtyC,EAAOuK,MAAM,gCAAgCgoC,YAAkBD,KAE/D,MAAMe,GAAiB,QAAgCn0C,GACjDyzC,EAAaU,EAAej4D,QAAQm3D,GACpCK,EAAWS,EAAej4D,QAAQk3D,IACjCgB,EAAOC,GAAOZ,EAAaC,EAAW,CAACA,EAAUD,GAAc,CAACA,EAAYC,GAC7EY,EAAyBH,EAAeh4D,MAAMi4D,EAAOC,EAAM,GACjEr0C,EAAOljB,QAAQk3D,WAAWM,EAAwBhB,EAAYQ,EAAe,GAC5E,CAAC9zC,EAAQc,IAUZqL,GAAiBnM,EATI,CACnB6zC,YACAG,aACAL,iBACAC,oBACAz7B,kBACAo7B,gBACAR,oBAOF,MAAMwB,EAA0B,eAAkB,KAChD,GAAIn3D,EAAMo3D,4BACR,OAGF,MAAMC,GAAmB,SAA2Bz0C,EAAOljB,QAAQkE,OAC7D0zD,GAAa,QAAuB10C,GAEpCk0C,GAAkB,OAAS,CAAC,GAAG,SAA0Bl0C,IAE/D,IAAIqrC,GAAa,EACjBoJ,EAAiBxwC,SAAQllB,IAClB21D,EAAW31D,YACPm1D,EAAgBn1D,GACvBssD,GAAa,EACf,IAGEA,GACFrrC,EAAOljB,QAAQ82D,kBAAkBpnC,OAAO6H,OAAO6/B,GACjD,GACC,CAACl0C,EAAQ5iB,EAAMo3D,8BACZG,EAA2B,eAAkB,CAAC51D,EAAIqC,KACtD,MAAMwzD,EAAaxzD,EAAM2E,SAAW3E,EAAM0E,QAKpC+uD,GAA+B/D,IAAsB8D,KAAe,SAAgBxzD,GACpF0yD,GAAkBb,GAA4B4B,EAC9CvB,EAAatzC,EAAOljB,QAAQy2D,cAAcx0D,GAE5C+0D,EACF9zC,EAAOljB,QAAQ+2D,UAAU90D,IAAK81D,IAA+BvB,GAAmB,GAEhFtzC,EAAOljB,QAAQ+2D,UAAU90D,GAAKu0D,GAAY,EAC5C,GACC,CAACtzC,EAAQizC,EAA0BnC,IAChCgE,EAAiB,eAAkB,CAAC9gD,EAAQ5S,KAChD,IAAI2zD,EAEJ,GAAIjC,EACF,OAGF,MAAM30B,EAAqE,OAA5D42B,EAAW3zD,EAAM4F,OAAO6nD,QAAQ,IAAI,kBAA+B,EAASkG,EAASlxD,aAAa,cAE7Gs6B,IAAU,YAKVA,IAAUqd,KAKVrd,GACane,EAAOljB,QAAQ2lC,UAAUtE,GAE7BxnB,OAAS8vB,IAKNzmB,EAAOljB,QAAQyyD,WAAWv7C,EAAOjV,IAErCwgD,WAIRn+C,EAAMg8C,WAAa6V,GAA4BnC,GACjDoC,EAA6Bl/C,EAAOjV,IAEpC41D,EAAyB3gD,EAAOjV,GAAIqC,IACtC,GACC,CAAC0xD,EAAyBG,EAA0BnC,EAAmB9wC,EAAQkzC,EAA8ByB,IAC1GK,EAA0B,eAAkB,CAAChhD,EAAQ5S,KAEvD,IAAIy3B,EADFo6B,GAA4B7xD,EAAMg8C,WAGc,OAAjDvkB,EAAuB7N,OAAO4M,iBAAmCiB,EAAqBhB,kBACzF,GACC,CAACo7B,IACEgC,EAAmC,eAAkB,CAACjhD,EAAQ5S,KAC9DA,EAAM6a,YAAYmhC,SACpB8V,EAA6Bl/C,EAAOjV,IAEpCihB,EAAOljB,QAAQ+2D,UAAU7/C,EAAOjV,GAAIiV,EAAO5U,MAC7C,GACC,CAAC4gB,EAAQkzC,IACNgC,EAAsC,eAAkBlhD,IAC5D,MACMmhD,EADoC/3D,EAAMg4D,8BAAgCh4D,EAAMi5C,YACzB,SAA6Cr2B,IAAU,QAAgCA,GACpJA,EAAOljB,QAAQk3D,WAAWmB,EAAkBnhD,EAAO5U,MAAM,GACxD,CAAC4gB,EAAQ5iB,EAAMg4D,6BAA8Bh4D,EAAMi5C,aAChDoH,EAAoB,eAAkB,CAACzpC,EAAQ5S,KAEnD,GAAI4e,EAAOljB,QAAQkmD,YAAYhvC,EAAOjV,GAAIiV,EAAOmqB,SAAW+B,GAAcyd,MAMrEv8C,EAAM+F,cAAcnK,SAASoE,EAAM4F,QAAxC,CAIA,IAAI,SAAgB5F,EAAMqF,MAAQrF,EAAMg8C,SAAU,CAEhD,MAAMiY,GAAY,SAAsBr1C,GAExC,GAAIq1C,GAAaA,EAAUt2D,KAAOiV,EAAOjV,GAAI,CAC3CqC,EAAMuF,iBACN,MAAM2uD,EAAoBt1C,EAAOljB,QAAQy2D,cAAc8B,EAAUt2D,IAEjE,IAAKk0D,EAEH,YADAjzC,EAAOljB,QAAQ+2D,UAAUwB,EAAUt2D,IAAKu2D,GAAmB,GAI7D,MAAMC,EAAcv1C,EAAOljB,QAAQ04D,iCAAiCH,EAAUt2D,IACxE02D,EAAmBz1C,EAAOljB,QAAQ04D,iCAAiCxhD,EAAOjV,IAChF,IAAIq1D,EACAC,EAEAkB,EAAcE,EACZH,GAEFlB,EAAQqB,EACRpB,EAAMkB,EAAc,IAGpBnB,EAAQqB,EACRpB,EAAMkB,GAIJD,GAEFlB,EAAQmB,EAAc,EACtBlB,EAAMoB,IAGNrB,EAAQmB,EACRlB,EAAMoB,GAIV,MAAMnB,EAAyBroB,EAAYgP,KAAK9+C,MAAMi4D,EAAOC,EAAM,GAAGpgD,KAAIwJ,GAAOA,EAAI1e,KAErF,YADAihB,EAAOljB,QAAQk3D,WAAWM,GAAyBgB,EAErD,CACF,CAEA,GAAkB,MAAdl0D,EAAMqF,KAAerF,EAAMg8C,SAG7B,OAFAh8C,EAAMuF,sBACNguD,EAAyB3gD,EAAOjV,GAAIqC,GAIN,MAA5BA,EAAMqF,IAAI5K,gBAA0BuF,EAAM0E,SAAW1E,EAAM2E,WAC7D3E,EAAMuF,iBACNqtD,EAAWh0C,EAAOljB,QAAQ44D,gBAAgB,GAzD5C,CA0DA,GACC,CAAC11C,EAAQ20C,EAA0BX,EAAY/nB,EAAYgP,KAAMgY,IACpE9kC,GAAuBnO,EAAQ,gBAAiBu0C,GAChDpmC,GAAuBnO,EAAQ,WAAY80C,GAC3C3mC,GAAuBnO,EAAQ,6BAA8Bi1C,GAC7D9mC,GAAuBnO,EAAQ,gCAAiCk1C,GAChE/mC,GAAuBnO,EAAQ,gBAAiBg1C,GAChD7mC,GAAuBnO,EAAQ,cAAey9B,GAK9C,aAAgB,UACa70C,IAAvB+pD,GACF3yC,EAAOljB,QAAQ82D,kBAAkBjB,EACnC,GACC,CAAC3yC,EAAQ2yC,IACZ,MAAMgD,EAA0C,MAAtBhD,EAC1B,aAAgB,KACd,GAAIgD,EACF,OAIF,MAAMlB,GAAmB,SAA2Bz0C,EAAOljB,QAAQkE,OAEnE,GAAI+xD,EAAiB,CACnB,MAAMgB,EAAeU,EAAiB14D,QAAOgD,GAAMg0D,EAAgBh0D,KAE/Dg1D,EAAav3D,OAASi4D,EAAiBj4D,QACzCwjB,EAAOljB,QAAQ82D,kBAAkBG,EAErC,IACC,CAAC/zC,EAAQ+yC,EAAiB4C,IAC7B,aAAgB,KACd,MAAMlB,GAAmB,SAA2Bz0C,EAAOljB,QAAQkE,OAEnE,IAAKiyD,GAA4BwB,EAAiBj4D,OAAS,EAAG,CAC5D,MACEy+C,KAAMU,GACJX,GAAeh7B,EAAQ,CACzBq2B,aACA6E,mBAEI0a,EAAwBja,EAAgB1zC,QAAO,CAACC,GACpDnJ,SAEAmJ,EAAInJ,IAAM,EACHmJ,IACN,CAAC,GACE2tD,EAAqBpB,EAAiBp+B,MAAKt3B,IAC/C,IAAI+2D,GAAe,EAMnB,OAJI/C,IACF+C,EAAe/C,EAAgBh0D,IAG1B+2D,GAAgBF,EAAsB72D,EAAG,IAElDihB,EAAOljB,QAAQ82D,uBAAyChrD,IAAvBitD,EAAmC,CAACA,GAAsB,GAC7F,IACC,CAAC71C,EAAQizC,EAA0BnC,EAAmBlwC,EAA0BmyC,EAAiB1c,EAAY6E,GAAgB,EM5XhI6a,CAAiB/1C,EAAQ5iB,GjDrBpB,SAAwB4iB,EAAQ5iB,GACrC,IAAI44D,EAAsBC,EAE1B,MAAMn1C,EAASD,EAAcb,EAAQ,kBAC/B0pB,EAAc,WAAc,IAAMtC,GAAmBhqC,EAAMssC,cAAc,CAACtsC,EAAMssC,cAChFwsB,EAAsB,SAAa94D,EAAM4sC,SACzCmsB,EAA0B,SAAazsB,GAC7C1pB,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,iBACTU,UAAWl2B,EAAMorC,sBACjB9U,aAAct2B,EAAMg5D,8BACpBjjC,cAAe,KACfQ,YAAa,gCAEf,MAAM0iC,EAAsB,eAAkBnrB,IAC5CpqB,EAAOuK,MAAM,2BACbrL,EAAOljB,QAAQ8pB,SAASglB,GAAkBV,IAC1ClrB,EAAOljB,QAAQg3B,cACf9T,EAAOljB,QAAQqtB,aAAa,gBAAiB+gB,EAAa7C,IAAI,GAC7D,CAACvnB,EAAQd,IAKNyiB,EAAY,eAAkBtE,IAAS,QAAyBne,GAAQme,IAAQ,CAACne,IACjFovC,EAAgB,eAAkB,KAAM,QAA8BpvC,IAAS,CAACA,IAChFs8B,EAAoB,eAAkB,KAAM,QAAqCt8B,IAAS,CAACA,IAC3Fs2C,EAAiB,eAAkB,KAAM,QAAwBt2C,IAAS,CAACA,IAC3E+8B,EAAiB,eAAkB,CAAC5e,EAAOo4B,GAAoB,KACnDA,GAAoB,QAAqCv2C,IAAU,QAA8BA,IAClG5jB,WAAUo6D,GAAOA,EAAIr4B,QAAUA,KAC7C,CAACne,IACEy2C,EAAoB,eAAkBt4B,IAC1C,MAAM77B,EAAQy6C,EAAe5e,GAC7B,OAAO,QAA4Bne,GAAQ1d,EAAM,GAChD,CAAC0d,EAAQ+8B,IACN3J,EAA2B,eAAkB3f,KAC5B,QAAkCzT,KAElCyT,IACnBzT,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDgpC,QAAST,GAAmB,CAC1BvpB,SACA0pB,cACAF,gBAAiB,GACjBC,kBAAc7gC,EACdghC,6CAA6C,EAC7CD,6BAA8BlW,EAC9BoW,yBAAyB,QAG7B7pB,EAAOljB,QAAQg3B,cACjB,GACC,CAAC9T,EAAQ0pB,IACNgtB,EAAgB,eAAkB1sB,IACtC,MAAMkB,EAAe3B,GAAmB,CACtCvpB,SACA0pB,cACAF,gBAAiBQ,EACjBP,kBAAc7gC,EACdghC,6CAA6C,EAC7CC,yBAAyB,IAE3BwsB,EAAoBnrB,EAAa,GAChC,CAAClrB,EAAQq2C,EAAqB3sB,IAC3BitB,EAAe,eAAkBhzB,GAAU3jB,EAAOljB,QAAQ45D,cAAc,CAAC/yB,KAAU,CAAC3jB,IACpF42C,EAAsB,eAAkB,CAACz4B,EAAO04B,KAIpD,GAAI72C,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BAA8B,CACvE,IAAI2pB,EAEJ,MAAMtuB,GAAwB,QAAkCxoB,GAGhE,GAAI62C,KAFiF,OAAzDC,EAAwBtuB,EAAsBrK,KAAkB24B,GAEtD,CACpC,MAAM7M,GAAW,OAAS,CAAC,EAAGzhB,EAAuB,CACnD,CAACrK,GAAQ04B,IAGX72C,EAAOljB,QAAQs2C,yBAAyB6W,EAC1C,CACF,KAAO,CACL,MAAMtmB,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAElCmK,GAAY,OAAS,CAAC,EAAG3E,EAAQ,CACrC+G,MAAOmsB,IAGT72C,EAAOljB,QAAQ45D,cAAc,CAACpuB,IAC9B,MAAMt0B,EAAS,CACbmqB,QACAC,OAAQkK,EACRuuB,aAEF72C,EAAOljB,QAAQqtB,aAAa,yBAA0BnW,EACxD,IACC,CAACgM,IACE+2C,EAAiB,eAAkB,CAAC54B,EAAO64B,KAC/C,MAAMnnB,GAAa,QAAyB7vB,GACtCi3C,EAAmBpnB,EAAWzzC,WAAUo6D,GAAOA,IAAQr4B,IAE7D,GAAI84B,IAAqBD,EACvB,OAGFl2C,EAAOuK,MAAM,iBAAiB8S,cAAkB64B,KAChD,MAAME,EAAiB,IAAIrnB,GACrBsnB,EAAeD,EAAerxD,OAAOoxD,EAAkB,GAAG,GAChEC,EAAerxD,OAAOmxD,EAAqB,EAAGG,GAC9Cd,GAAoB,OAAS,CAAC,GAAG,EAAAlsB,EAAA,IAAoBnqB,EAAOljB,QAAQkE,OAAQ,CAC1EqnC,IAAK6uB,KAEP,MAAMljD,EAAS,CACbmqB,QACAj7B,QAAS8c,EAAOljB,QAAQ6yD,uBAAuBxxB,GAC/CC,OAAQpe,EAAOljB,QAAQ2lC,UAAUtE,GACjCi5B,YAAaJ,EACbK,SAAUJ,GAEZj3C,EAAOljB,QAAQqtB,aAAa,oBAAqBnW,EAAO,GACvD,CAACgM,EAAQc,EAAQu1C,IACdiB,EAAiB,eAAkB,CAACn5B,EAAOlwB,KAC/C6S,EAAOuK,MAAM,mBAAmB8S,cAAkBlwB,KAClD,MAAM01B,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GAElCmK,GAAY,OAAS,CAAC,EAAG3E,EAAQ,CACrC11B,UAGF+R,EAAOljB,QAAQ45D,cAAc,CAACpuB,IAC9BtoB,EAAOljB,QAAQqtB,aAAa,oBAAqB,CAC/CjnB,QAAS8c,EAAOljB,QAAQ6yD,uBAAuBxxB,GAC/CC,OAAQkK,EACRr6B,SACA,GACD,CAAC+R,EAAQc,IAeZqL,GAAiBnM,EAdC,CAChByiB,YACA2sB,gBACArS,iBACA0Z,oBACAna,oBACAga,iBACAK,eACAD,gBACAtjB,2BACAwjB,sBACAG,iBACAO,mBAOF,MAAMjW,EAA2B,eAAkB,CAACC,EAAW5mC,KAC7D,MAAM68C,EAAuB,CAAC,EAE9B,GAAIv3C,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BAA8B,CACvE,IAAIqqB,EAAwBC,EAAsBC,EAElD,MAAMC,GAAgC,QAAkC33C,KAEvEtF,EAAQ8mC,uBACsB,MAA/BpkD,EAAMorC,uBAENhc,OAAOC,KAAwN,OAAlN+qC,EAAwE,OAA9CC,EAAuBr6D,EAAMqsC,eAA2F,OAAzDiuB,EAAwBD,EAAqBztB,cAAvD,EAAmF0tB,EAAsBlvB,uBAAiCgvB,EAAyB,CAAC,GAAGh7D,OAAS,GAC5QgwB,OAAOC,KAAKkrC,GAA+Bn7D,OAAS,KAGlD+6D,EAAqB/uB,sBAAwBmvB,EAEjD,CAEAJ,EAAqBpsB,eAAgB,QAAyBnrB,GAC9D,MAAMgqB,GAAU,QAA8BhqB,GACxCorB,EAAa,CAAC,EAqBpB,OApBApB,EAAQ/lB,SAAQma,IACd,GAAIA,EAAOoM,eAAgB,CACzB,MAAMotB,EAAmB,CAAC,EAC1BzwB,GAA6BljB,SAAQ4zC,IACnC,IAAIC,EAAgB15B,EAAOy5B,GAEvBC,IAAkBrtB,MACpBqtB,GAAiB,GAGnBF,EAAiBC,GAAgBC,CAAa,IAEhD1sB,EAAWhN,EAAOD,OAASy5B,CAC7B,KAGEprC,OAAOC,KAAK2e,GAAY5uC,OAAS,IACnC+6D,EAAqBnsB,WAAaA,IAG7B,OAAS,CAAC,EAAGkW,EAAW,CAC7BtX,QAASutB,GACT,GACD,CAACv3C,EAAQ5iB,EAAMorC,sBAAsE,OAA9CwtB,EAAuB54D,EAAMqsC,mBAAwB,EAASusB,EAAqBhsB,UACvHyX,EAA4B,eAAkB,CAACztC,EAAQ0G,KAC3D,IAAIgnC,EAEJ,MAAMqW,EAAgC/3C,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BAA2F,OAA3DuU,EAAwBhnC,EAAQinC,eAAe3X,cAAmB,EAAS0X,EAAsBlZ,2BAAwB5/B,EAChO6gC,EAAe/uB,EAAQinC,eAAe3X,QAE5C,GAAqC,MAAjC+tB,GAAyD,MAAhBtuB,EAC3C,OAAOz1B,EAGT,MAAMk3B,EAAe3B,GAAmB,CACtCvpB,SACA0pB,cACAF,gBAAiB,GACjBC,eACAG,6CAA8C5pB,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BACrFxD,6BAA8BouB,EAC9BluB,yBAAyB,IAQ3B,OANA7pB,EAAOljB,QAAQ8pB,SAASglB,GAAkBV,IAEtB,MAAhBzB,GACFzpB,EAAOljB,QAAQqtB,aAAa,gBAAiB+gB,EAAa7C,KAGrDr0B,CAAM,GACZ,CAACgM,EAAQ0pB,IACNsuB,EAA+B,eAAkB,CAACvlB,EAAcrzC,KACpE,GAAIA,IAAU,aAAmC,CAC/C,IAAI64D,EAEJ,MAAMC,EAAe96D,EAAMglB,WAAW81C,aACtC,OAAoB,SAAKA,GAAc,OAAS,CAAC,EAAsD,OAAlDD,EAAwB76D,EAAMqV,sBAA2B,EAASwlD,EAAsBE,cAC/I,CAEA,OAAO1lB,CAAY,GAClB,CAACr1C,EAAMglB,WAAW81C,aAAkE,OAAnDjC,EAAyB74D,EAAMqV,sBAA2B,EAASwjD,EAAuBkC,eAC9Hv+B,GAA6B5Z,EAAQ,cAAeqhC,GACpDznB,GAA6B5Z,EAAQ,eAAgByhC,GACrD7nB,GAA6B5Z,EAAQ,kBAAmBg4C,GAKxD,MAAMI,EAAiB,SAAa,MASpCjqC,GAAuBnO,EAAQ,2BAPF8H,IACvBswC,EAAet7D,UAAYgrB,EAAkB7Z,QAC/CmqD,EAAet7D,QAAUgrB,EAAkB7Z,MAC3CooD,EAAoBvuB,IAAoB,EAAAqC,EAAA,IAAoBnqB,EAAOljB,QAAQkE,OAAQ8mB,EAAkB7Z,QACvG,IAIFkhB,GAAwBnP,EAAQ,yBAA0B5iB,EAAMi7D,0BAKhE,MAAMC,EAAiB,eAAkB,KACvCx3C,EAAOwK,KAAK,kEACZ,MAAM4f,EAAe3B,GAAmB,CACtCvpB,SACA0pB,cACAF,gBAAiB,GACjBC,kBAAc7gC,EACdghC,6CAA8C5pB,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BACrFtD,yBAAyB,IAE3BwsB,EAAoBnrB,EAAa,GAChC,CAAClrB,EAAQc,EAAQu1C,EAAqB3sB,IACzC1P,GAA2Bha,EAAQ,iBAAkBs4C,GAOrD,MAAM3+B,EAAgB,UAAa,GACnC,aAAgB,KACd,GAAIA,EAAc78B,QAEhB,YADA68B,EAAc78B,SAAU,GAM1B,GAFAgkB,EAAOwK,KAAK,wCAAwCluB,EAAM4sC,QAAQxtC,UAE9D05D,EAAoBp5D,UAAYM,EAAM4sC,SAAWmsB,EAAwBr5D,UAAY4sC,EACvF,OAGF,MAAMwB,EAAe3B,GAAmB,CACtCvpB,SACA0pB,cACAD,kBAAc7gC,EAEdghC,6CAA8C5pB,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BACrF3D,gBAAiBpsC,EAAM4sC,QACvBH,yBAAyB,IAE3BqsB,EAAoBp5D,QAAUM,EAAM4sC,QACpCmsB,EAAwBr5D,QAAU4sC,EAClC2sB,EAAoBnrB,EAAa,GAChC,CAACpqB,EAAQd,EAAQq2C,EAAqBj5D,EAAM4sC,QAASN,IACxD,aAAgB,UACsB9gC,IAAhCxL,EAAMorC,uBACRxoB,EAAOljB,QAAQs2C,yBAAyBh2C,EAAMorC,sBAChD,GACC,CAACxoB,EAAQc,EAAQ1jB,EAAMorC,uBAC5B,CiDlSE+vB,CAAev4C,EAAQ5iB,GVhCE,EAAC4iB,EAAQ5iB,KASlC,MAAM0jB,EAASD,EAAcb,EAAQ,eAC/Bw4C,EAAcnd,GAAmBr7B,EAAQ5iB,GACzCq7D,EAAe,SAAal7B,KAAKm7B,OACjC5rC,EAAU,SAAa,MACvB22B,EAAS,eAAkB1kD,IAC/B,IAAI02B,EAEJ,OAAsD,OAA9CA,GAAO,QAAuBzV,GAAQjhB,IAAe02B,EAAO,IAAI,GACvE,CAACzV,IACEuoB,EAAS,WAAc,IAAMiwB,EAAYvd,KAAKhzC,QAAO,CAACC,GAC1DnJ,MACCuD,KACD4F,EAAInJ,GAAMuD,EACH4F,IACN,CAAC,IAAI,CAACswD,EAAYvd,OACf0d,EAAsB,eAAkB,CAACC,EAAUC,KACvD,MAAMC,EAAM,KACVhsC,EAAQhwB,QAAU,KAClB27D,EAAa37D,QAAUygC,KAAKm7B,MAC5B14C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDi6C,KAAM0D,GAAsB,CAC1B3+B,SACA4+B,cAAc,QAAoB5+B,GAClC6+B,aAAczhD,EAAM+gD,SACpBW,YAAa1hD,EAAMkT,cAGvB0P,EAAOljB,QAAQqtB,aAAa,WAC5BnK,EAAOljB,QAAQg3B,aAAa,EAU9B,GAPIhH,EAAQhwB,UACV6wB,aAAab,EAAQhwB,SACrBgwB,EAAQhwB,QAAU,MAGpBkjB,EAAOljB,QAAQi1B,gBAAgBkpB,KAAO2d,GAEjCC,EAEH,YADAC,IAIF,MAAMC,EAA0B37D,EAAM47D,gBAAkBz7B,KAAKm7B,MAAQD,EAAa37D,SAE9Ei8D,EAA0B,EAC5BjsC,EAAQhwB,QAAUuwB,WAAWyrC,EAAKC,GAIpCD,GAAK,GACJ,CAAC17D,EAAM47D,eAAgB57D,EAAM+gD,SAAU/gD,EAAMkT,QAAS0P,IAKnDi5C,EAAU,eAAkBhe,IAChCn6B,EAAOuK,MAAM,iCAAiC4vB,EAAKz+C,UACnD,MAAM4hD,EAAQF,GAAwB,CACpCjD,OACA6C,SAAU1gD,EAAM0gD,SAChBxtC,QAASlT,EAAMkT,QACf6tC,SAAU/gD,EAAM+gD,WAEZ+a,EAAYl5C,EAAOljB,QAAQi1B,gBAAgBkpB,KACjDmD,EAAMC,yBAA2B6a,EAAU7a,yBAC3Csa,EAAoBva,GAAO,EAAK,GAC/B,CAACt9B,EAAQ1jB,EAAM0gD,SAAU1gD,EAAMkT,QAASlT,EAAM+gD,SAAUwa,EAAqB34C,IAC1EglC,EAAa,eAAkBmU,IACnC,GAAI/7D,EAAM60B,YAAcjE,GAAcorC,UAAYD,EAAQ38D,OAAS,EAEjE,MAAM,IAAIsvB,MAAM,CAAC,6FAA8F,2FAA2F0H,KAAK,OAIjN,MAAM6lC,EAAgB,IAAIrxD,IAC1BmxD,EAAQl1C,SAAQq1C,IACd,MAAMv6D,EAAK6+C,GAAqB0b,EAAQl8D,EAAM0gD,SAAU,4DAEpDub,EAAclpC,IAAIpxB,GACpBs6D,EAAc7rC,IAAIzuB,GAAI,OAAS,CAAC,EAAGs6D,EAAc3rC,IAAI3uB,GAAKu6D,IAE1DD,EAAc7rC,IAAIzuB,EAAIu6D,EACxB,IAEF,MAAMC,EAAgB,GAChBL,EAAYl5C,EAAOljB,QAAQi1B,gBAAgBkpB,KAC3C2d,EAAW,CACfva,yBAA0B6a,EAAU7a,yBACpCC,gCAAiC4a,EAAU5a,gCAC3CC,iCAAkC2a,EAAU3a,iCAC5CC,cAAc,OAAS,CAAC,EAAG0a,EAAU1a,cACrCC,cAAc,OAAS,CAAC,EAAGya,EAAUza,cACrCC,IAAK,IAAIwa,EAAUxa,MAErB2a,EAAcp1C,SAAQ,CAACu1C,EAAYz6D,IAEN,WAAvBy6D,EAAWC,gBACNb,EAASpa,aAAaz/C,UACtB65D,EAASna,aAAa1/C,QAC7Bw6D,EAAc3zD,KAAK7G,IAINihB,EAAOljB,QAAQ2mD,OAAO1kD,QASrC65D,EAASpa,aAAaz/C,IAAM,OAAS,CAAC,EAAGihB,EAAOljB,QAAQ2mD,OAAO1kD,GAAKy6D,KANlEZ,EAASpa,aAAaz/C,GAAMy6D,EAC5BZ,EAASna,aAAa1/C,GAAMA,OAC5B65D,EAASla,IAAI94C,KAAK7G,MAOlBw6D,EAAc/8D,OAAS,IACzBo8D,EAASla,IAAMka,EAASla,IAAI3iD,QAAOgD,IAAOw6D,EAAc7+B,SAAS37B,MAGnE45D,EAAoBC,GAAU,EAAK,GAClC,CAACx7D,EAAM60B,UAAW70B,EAAM0gD,SAAU6a,EAAqB34C,IACpD05C,EAAe,eAAkB,KACrC,MAAMC,GAAU,QAAmB35C,GAC7Bw+B,GAAe,QAAuBx+B,GAC5C,OAAO,IAAIhY,IAAI2xD,EAAQ1lD,KAAIlV,GAAM,CAACA,EAAIy/C,EAAaz/C,MAAM,GACxD,CAACihB,IACE45C,EAAe,eAAkB,KAAM,QAAqB55C,IAAS,CAACA,IACtE01C,EAAe,eAAkB,KAAM,QAAmB11C,IAAS,CAACA,IACpEw1C,EAAmC,eAAkBz2D,GAAMwpC,EAAOxpC,IAAK,CAACwpC,IACxEsxB,EAA0B,eAAkB,CAAC96D,EAAI+6D,KACrD,MAAMC,EAAc/5C,EAAOljB,QAAQyyD,WAAWxwD,GAE9C,IAAKg7D,EACH,MAAM,IAAIjuC,MAAM,wBAAwB/sB,WAG1C,MAAMi7D,GAAU,OAAS,CAAC,EAAGD,EAAa,CACxCE,iBAAkBH,IAGpB95C,EAAOljB,QAAQ8pB,UAAS5lB,IACf,OAAS,CAAC,EAAGA,EAAO,CACzBi6C,MAAM,OAAS,CAAC,EAAGj6C,EAAMi6C,KAAM,CAC7BoE,MAAM,OAAS,CAAC,EAAGr+C,EAAMi6C,KAAKoE,KAAM,CAClC,CAACtgD,GAAKi7D,UAKdh6C,EAAOljB,QAAQg3B,cACf9T,EAAOljB,QAAQqtB,aAAa,qBAAsB6vC,EAAQ,GACzD,CAACh6C,IACEuvC,EAAa,eAAkBxwD,IACnC,IAAIm7D,EAEJ,OAAoE,OAA5DA,GAAwB,QAAoBl6C,GAAQjhB,IAAem7D,EAAwB,IAAI,GACtG,CAACl6C,IACEm6C,EAAsB,eAAkB,EAC5Cva,yBAAwB,EACxB/R,UACAusB,eACAC,qBAEA,MAAMhb,GAAO,QAAoBr/B,GACjC,IAAI7L,EAEJ,GAAIimD,EAAc,CAChB,MAAME,EAAYjb,EAAKxR,GAEvB,IAAKysB,EACH,MAAO,GAGT,MAAMC,GAAe,SAAyBv6C,GAC9C7L,EAAW,GAGX,IAAK,IAAI7R,EAFUi4D,EAAan+D,WAAU2C,GAAMA,IAAO8uC,IAAW,EAErCvrC,EAAQi4D,EAAa/9D,QAAU6iD,EAAKkb,EAAaj4D,IAAQisD,MAAQ+L,EAAU/L,MAAOjsD,GAAS,EAAG,CACzH,MAAMvD,EAAKw7D,EAAaj4D,GAClB2C,EAAOo6C,EAAKtgD,GAEb6gD,GAA0B36C,EAAK+6C,iBAClC7rC,EAASvO,KAAK7G,EAElB,CACF,MACEoV,EAAWurC,GAAuBL,EAAMxR,EAAS+R,GAGnD,GAAIya,EAAgB,CAClB,MAAMG,GAAqB,QAA+Bx6C,GAC1D7L,EAAWA,EAASpY,QAAO0+D,IAA2C,IAAhCD,EAAmBC,IAC3D,CAEA,OAAOtmD,CAAQ,GACd,CAAC6L,IAoFE06C,EAAS,CACbjX,SACAiW,eACAE,eACAlE,eACAuD,UACA0B,YAzFkB,eAAkB,CAACxuB,EAAOirB,KAC5C,MAAMuC,GAAU,QAAmB35C,GAC7Bq3C,EAAWsC,EAAQv9D,WAAUqhB,GAAOA,IAAQ0uB,IAElD,IAAkB,IAAdkrB,GAAmBA,IAAaD,EAClC,OAGFt2C,EAAOuK,MAAM,cAAc8gB,cAAkBirB,KAC7C,MAAMwD,EAAc,IAAIjB,GACxBiB,EAAY/0D,OAAOuxD,EAAa,EAAGwD,EAAY/0D,OAAOwxD,EAAU,GAAG,IACnEr3C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDi6C,MAAM,OAAS,CAAC,EAAGj6C,EAAMi6C,KAAM,CAC7ByD,IAAKkc,QAGT56C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKyD,IAAMkc,EAC1C56C,EAAOljB,QAAQqtB,aAAa,UAAU,GACrC,CAACnK,EAAQc,IAwEVkkC,aACA6U,0BACAtK,aACAiG,mCACA2E,sBACAU,qBA5EkB,eAAkB,CAAC9uB,EAAkB+uB,KACvD,GAAI19D,EAAM60B,YAAcjE,GAAcorC,UAAY0B,EAAQt+D,OAAS,EACjE,MAAM,IAAIsvB,MAAM,CAAC,2FAA4F,2FAA2F0H,KAAK,OAG/M,GAAuB,IAAnBsnC,EAAQt+D,OACV,OAGF,MACMo+D,EAAc,KADJ,QAAmB56C,IAE7Bw+B,GAAe,QAAuBx+B,GACtCy+B,GAAe,QAA6Bz+B,GAC5Cq/B,GAAO,QAAoBr/B,GAE3B+6C,GAAsB,OAAS,CAAC,EAAGvc,GAEnCwc,GAAsB,OAAS,CAAC,EAAGvc,GAEnCwc,GAAc,OAAS,CAAC,EAAG5b,GAE3B6b,EAAgBJ,EAAQ7mD,KAAIknD,IAEzB,CACLp8D,GAFY6+C,GAAqBud,EAAa/9D,EAAM0gD,SAAU,6DAG9DrqB,MAAO0nC,MAGXD,EAAcj3C,SAAQ,CAACxG,EAAKnb,KAC1B,MAAO84D,GAAiBR,EAAY/0D,OAAOkmC,EAAmBzpC,EAAO,EAAGmb,EAAI1e,WACrEg8D,EAAoBK,UACpBJ,EAAoBI,UACpBH,EAAYG,EAAc,IAEnCF,EAAcj3C,SAAQxG,IACpB,MAAM49C,EAAoB,CACxBt8D,GAAI0e,EAAI1e,GACRugD,OAAQ,KACRiP,MAAO,EACPC,YAAa,KACbC,cAAe,MAEjBsM,EAAoBt9C,EAAI1e,IAAM0e,EAAIgW,MAClCunC,EAAoBv9C,EAAI1e,IAAM0e,EAAI1e,GAClCk8D,EAAYx9C,EAAI1e,IAAMs8D,CAAiB,IAEzCr7C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKuD,aAAeuc,EACnD/6C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKwD,aAAeuc,EACnDh7C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKyD,IAAMkc,EAC1C56C,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMs6D,EAAe,CACnB9c,aAAcuc,EACdtc,aAAcuc,EACd3b,KAAM4b,EACNvc,IAAKkc,GAEP,OAAO,OAAS,CAAC,EAAG55D,EAAO,CACzBi6C,MAAM,OAAS,CAAC,EAAGj6C,EAAMi6C,KAAMqgB,EAAc,CAC3C9b,oCAAoC,OAAS,CAAC,EAAGx+C,EAAMi6C,KAAKuE,mCAAoC8b,MAElG,IAEJt7C,EAAOljB,QAAQqtB,aAAa,UAAU,GACrC,CAACnK,EAAQ5iB,EAAM60B,UAAW70B,EAAM0gD,YAmB7Byd,EAAY,eAAkB,KAElC,IAAInd,EADJt9B,EAAOwK,KAAK,uEAMV8yB,EAHEp+B,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKoD,2BAA6BjhD,EAAM69C,KAGjEj7B,EAAOljB,QAAQi1B,gBAAgBkpB,KAK/BiD,GAAwB,CAC9BjD,KAAM79C,EAAM69C,KACZ6C,SAAU1gD,EAAM0gD,SAChBxtC,QAASlT,EAAMkT,QACf6tC,SAAU/gD,EAAM+gD,WAIpBwa,EAAoBva,GAAO,EAAM,GAChC,CAACt9B,EAAQd,EAAQ5iB,EAAM69C,KAAM79C,EAAM0gD,SAAU1gD,EAAMkT,QAASlT,EAAM+gD,SAAUwa,IACzE6C,EAAgC,eAAkB7uC,IACnC,oBAAfA,GACF4uC,GACF,GACC,CAACA,IACEE,EAA+B,eAAkB,KAGjDz7C,EAAOljB,QAAQ+4B,2BAA2B,cAAe,QAA4B7V,IACvFu7C,GACF,GACC,CAACv7C,EAAQu7C,IACZptC,GAAuBnO,EAAQ,gCAAiCw7C,GAChErtC,GAAuBnO,EAAQ,6BAA8By7C,GAK7D,MAAMC,EAA4B,eAAkB,KAClD17C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDi6C,MAAM,OAAS,CAAC,EAAGj6C,EAAMi6C,KAAMj7B,EAAOljB,QAAQk4B,6BAA6B,cAAeh0B,EAAMi6C,KAAKuE,yCAEvGx/B,EAAOljB,QAAQqtB,aAAa,WAC5BnK,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,IACJga,GAA2Bha,EAAQ,cAAe07C,GAClDvvC,GAAiBnM,EAAQ06C,GAKzB,aAAgB,IACP,KACmB,OAApB5tC,EAAQhwB,SACV6wB,aAAab,EAAQhwB,QACvB,GAED,IAGH,MAAM68B,EAAgB,UAAa,GACnC,aAAgB,KACd,GAAIA,EAAc78B,QAEhB,YADA68B,EAAc78B,SAAU,GAI1B,MAAM6+D,EAA2B37C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKoD,2BAA6BjhD,EAAM69C,KAClG2gB,EAA6B57C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKqD,kCAAoClhD,EAAMkT,QAC3GurD,EAA8B77C,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKsD,mCAAqCnhD,EAAM+gD,SAEnH,GAAIwd,EAuBF,OArBKC,IACH57C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDi6C,MAAM,OAAS,CAAC,EAAGj6C,EAAMi6C,KAAM,CAC7B3qC,QAASlT,EAAMkT,cAGnB0P,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKqD,gCAAkClhD,EAAMkT,QAC5E0P,EAAOljB,QAAQg3B,oBAGZ+nC,IACH77C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDi6C,MAAM,OAAS,CAAC,EAAGj6C,EAAMi6C,KAAM,CAC7B96B,cAAejc,KAAKs4B,IAAIp/B,EAAM+gD,UAAY,EAAGn9C,EAAMi6C,KAAK96B,eACxDs/B,sBAAuBv7C,KAAKs4B,IAAIp/B,EAAM+gD,UAAY,EAAGn9C,EAAMi6C,KAAKwE,6BAGpEz/B,EAAOljB,QAAQi1B,gBAAgBkpB,KAAKsD,iCAAmCnhD,EAAM+gD,SAC7En+B,EAAOljB,QAAQg3B,gBAMnBhT,EAAOuK,MAAM,iCAAiCjuB,EAAM69C,KAAKz+C,UACzDm8D,EAAoBza,GAAwB,CAC1CjD,KAAM79C,EAAM69C,KACZ6C,SAAU1gD,EAAM0gD,SAChBxtC,QAASlT,EAAMkT,QACf6tC,SAAU/gD,EAAM+gD,YACd,EAAM,GACT,CAAC/gD,EAAM69C,KAAM79C,EAAM+gD,SAAU/gD,EAAM0gD,SAAU1gD,EAAMkT,QAASwQ,EAAQ63C,EAAqB34C,GAAQ,EU5XpG87C,CAAY97C,EAAQ5iB,GACpB6xD,GAAiBjvC,GErDkBA,KACnC,MAAMuoB,EAAS,SAAa,CAAC,GACvBwzB,EAAqB,eAAkB,CAAC5vB,EAAO6vB,EAAa5vB,KAChE,MAAM6vB,EAAQ1zB,EAAOzrC,QAEhBm/D,EAAM9vB,KACT8vB,EAAM9vB,GAAS,CAAC,GAGlB8vB,EAAM9vB,GAAO6vB,GAAe5vB,CAAe,GAC1C,IACG8vB,EAAqB,eAAkB,CAAC/vB,EAAO6vB,KACnD,IAAIG,EAEJ,OAA0D,OAAlDA,EAAwB5zB,EAAOzrC,QAAQqvC,SAAkB,EAASgwB,EAAsBH,EAAY,GAC3G,IAEGI,EAAuB,eAAkBpoD,IAC7C,MAAM,YACJgoD,EAAW,MACX7vB,EAAK,oBACLkwB,EAAmB,mBACnBC,EAAkB,QAClBtyB,GACEh2B,EACEuoD,EAAgBvyB,EAAQxtC,OACxBmnC,EAASqG,EAAQgyB,GACjBQ,EAAoC,mBAAnB74B,EAAO64B,QAAyB74B,EAAO64B,QAAQx8C,EAAOljB,QAAQglC,cAAcqK,EAAOxI,EAAOxF,QAAUwF,EAAO64B,QAElI,IAAKA,GAAuB,IAAZA,EAQd,OAPAT,EAAmB5vB,EAAO6vB,EAAa,CACrC1vB,kBAAkB,EAClBqX,UAAW,CACT6Y,QAAS,EACTvuD,MAAO01B,EAAO8E,iBAGX,CACL+zB,QAAS,GAIb,IAAIvuD,EAAQ01B,EAAO8E,cAEnB,IAAK,IAAI+M,EAAI,EAAGA,EAAIgnB,EAAShnB,GAAK,EAAG,CACnC,MAAMinB,EAAkBT,EAAcxmB,EAElCinB,GAAmBJ,GAAuBI,EAAkBH,IAE9DruD,GADmB+7B,EAAQyyB,GACPh0B,cACpBszB,EAAmB5vB,EAAO6vB,EAAcxmB,EAAG,CACzClJ,kBAAkB,EAClB4P,sBAAuBh4C,KAAKglC,IAAI8yB,EAAcQ,EAASD,EAAgB,GACvEhwB,qBAAsByvB,KAI1BD,EAAmB5vB,EAAO6vB,EAAa,CACrC1vB,kBAAkB,EAClBqX,UAAW,CACT6Y,UACAvuD,UAGN,CAEA,MAAO,CACLuuD,UACD,GACA,CAACx8C,EAAQ+7C,IAENW,EAAmB,eAAkB,EACzCvwB,QACAwwB,iBACAC,gBACA5yB,cAEA,IAAK,IAAIztC,EAAIogE,EAAgBpgE,EAAIqgE,EAAergE,GAAK,EAAG,CACtD,MAAMonD,EAAYyY,EAAqB,CACrCJ,YAAaz/D,EACb4vC,QACAkwB,oBAAqBM,EACrBL,mBAAoBM,EACpB5yB,YAGE2Z,EAAU6Y,QAAU,IACtBjgE,GAAKonD,EAAU6Y,QAAU,EAE7B,IACC,CAACJ,IAKJjwC,GAAiBnM,EAJS,CACxBqsB,4BAA6B6vB,EAC7BW,0BAA2BH,IAG7B,MAAMI,EAA4B,eAAkB,KAElDv0B,EAAOzrC,QAAU,CAAC,CAAC,GAClB,IACHqxB,GAAuBnO,EAAQ,oBAAqB88C,EAA0B,EF9C9EC,CAAsB/8C,G7C2Ca,EAACA,EAAQ5iB,KAC5C,IAAI0lD,EAKJ,MAAMka,EAAqB,eAAkB7+B,IAC3C,IAAI8+B,EAAuBC,EAG3B,OAAiI,OAAzHD,EAAuE,OAA9CC,GADZ,QAAyBl9C,GACsBme,SAAkB,EAAS++B,EAAoB3K,WAAqB0K,EAAwB,EAAE,GACjK,CAACj9C,IACEm9C,EAAqB,eAAkB,IACjB5vB,GAA+BvtB,IAExD,CAACA,IAKJmM,GAAiBnM,EAJS,CACxBo9C,4BAA6BJ,EAC7BK,4BAA6BF,IAS/B,MAAMxjC,EAAgB,UAAa,GACnC,aAAgB,KACd,IAAI0pB,EAAuBia,EAE3B,GAAI3jC,EAAc78B,QAEhB,YADA68B,EAAc78B,SAAU,GAI1B,GAA8D,OAAvDumD,EAAwBjmD,EAAMmkC,wBAAiC8hB,EAAsB7V,eAC1F,OAGF,MAAMW,EAAcD,GAA0E,OAAvDovB,EAAyBlgE,EAAM4wC,qBAA+BsvB,EAAyB,IAC9Ht9C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDwsC,gBAAgB,OAAS,CAAC,EAAGxsC,EAAMwsC,eAAgB,CACjDjF,OAAQ4F,OAET,GACF,CAACnuB,EAAQ5iB,EAAM4wC,oBAA8E,OAAxD8U,EAAyB1lD,EAAMmkC,2BAAgC,EAASuhB,EAAuBtV,gBAAgB,E6CxFvJ+vB,CAAsBv9C,EAAQ5iB,GAkB9B,OAjBgF,OAAxD0lD,EAAyB1lD,EAAMmkC,uBAAiCuhB,EAAuBthB,cAAgB,GAAqB,IACrIxhB,EAAQ5iB,G7BtCG,EAAC4iB,EAAQ5iB,KACnC,MAAM0jB,EAASD,EAAcb,EAAQ,gBAC/Bw9C,EAAkB,SAAa,MAC/BC,EAAsB,eAAkB,CAAChhD,EAAMrb,KAC/Cqb,GAEEuD,EAAOljB,QAAQ2mD,OAAOhnC,EAAK1d,KAC7BihB,EAAOljB,QAAQqtB,aAAa,eAAgBnK,EAAOljB,QAAQglC,cAAcrlB,EAAK1d,GAAI0d,EAAK0hB,OAAQ/8B,EAEnG,GACC,CAAC4e,IACEu8B,EAAe,eAAkB,CAACx9C,EAAIo/B,KAC1C,MAAMu/B,GAAc,SAAsB19C,IAEtB,MAAf09C,OAAsB,EAASA,EAAY3+D,MAAQA,IAAsB,MAAf2+D,OAAsB,EAASA,EAAYv/B,SAAWA,IAIrHne,EAAOljB,QAAQ8pB,UAAS5lB,IACtB8f,EAAOuK,MAAM,4BAA4BtsB,eAAgBo/B,MAClD,OAAS,CAAC,EAAGn9B,EAAO,CACzBkI,SAAU,CACRuT,KAAM,CACJ1d,KACAo/B,SAEFrhB,aAAc,MAEhB3a,MAAO,CACLsa,KAAM,CACJ1d,KACAo/B,SAEFrhB,aAAc,WAIpBkD,EAAOljB,QAAQg3B,cAEV9T,EAAOljB,QAAQ2mD,OAAO1kD,KAIvB2+D,GAGFD,EAAoBC,EAAa,CAAC,GAGpC19C,EAAOljB,QAAQqtB,aAAa,cAAenK,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,KAAO,GAClF,CAACne,EAAQc,EAAQ28C,IACdhhB,EAAuB,eAAkB,CAACte,EAAO/8B,EAAQ,CAAC,KAC9D,MAAMqb,GAAO,SAAsBuD,GACnCy9C,EAAoBhhD,EAAMrb,GAC1B4e,EAAOljB,QAAQ8pB,UAAS5lB,IACtB8f,EAAOuK,MAAM,2CAA2C8S,MACjD,OAAS,CAAC,EAAGn9B,EAAO,CACzBkI,SAAU,CACR4T,aAAc,CACZqhB,SAEF1hB,KAAM,MAERta,MAAO,CACL2a,aAAc,CACZqhB,SAEF1hB,KAAM,WAIZuD,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,EAAQc,EAAQ28C,IACdE,EAA0B,eAAkB,CAAC5+D,EAAIo/B,EAAO16B,KAC5D,IAAIm6D,EAAqB59C,EAAOljB,QAAQigD,eAAe5e,GACnD0/B,EAAkB79C,EAAOljB,QAAQ04D,iCAAiCz2D,GACtE,MAAMkhB,GAAiB,QAAqCD,GAE1C,UAAdvc,EACFm6D,GAAsB,EACC,SAAdn6D,EACTm6D,GAAsB,EAEtBC,GAAmB,EAGrB,MAAMrF,EAAcxd,GAAeh7B,EAAQ,CACzCq2B,WAAYj5C,EAAMi5C,WAClB6E,eAAgB99C,EAAM89C,iBAGpB0iB,GAAsB39C,EAAezjB,QAEvCqhE,GAAmB,EAEfA,EAAkBrF,EAAYvd,KAAKz+C,SAErCohE,EAAqB,IAEdA,EAAqB,IAE9BC,GAAmB,EAEfA,GAAmB,IAErBD,EAAqB39C,EAAezjB,OAAS,IAIjDqhE,GAAkB,SAAMA,EAAiB,EAAGrF,EAAYvd,KAAKz+C,OAAS,GACtE,MAAMshE,EAAatF,EAAYvd,KAAK4iB,GAC9BE,EAAc/9C,EAAOljB,QAAQuvC,4BAA4ByxB,EAAW/+D,GAAI6+D,GAE1EG,GAAeA,EAAYzxB,mBACX,SAAd7oC,GAAsC,UAAdA,EAC1Bm6D,EAAqBG,EAAYxxB,qBACV,UAAd9oC,IACTm6D,EAAqBG,EAAY7hB,wBAIrC0hB,GAAqB,SAAMA,EAAoB,EAAG39C,EAAezjB,OAAS,GAC1E,MAAMwhE,EAAgB/9C,EAAe29C,GACrC59C,EAAOljB,QAAQy/C,aAAauhB,EAAW/+D,GAAIi/D,EAAc7/B,MAAM,GAC9D,CAACne,EAAQ5iB,EAAMi5C,WAAYj5C,EAAM89C,iBAC9BqJ,EAAwB,eAAkB,EAC9CxlD,KACAo/B,YAEAne,EAAOljB,QAAQy/C,aAAax9C,EAAIo/B,EAAM,GACrC,CAACne,IACEy9B,EAAoB,eAAkB,CAACzpC,EAAQ5S,KAEjC,UAAdA,EAAMqF,KAAiC,QAAdrF,EAAMqF,MAAiB,SAAgBrF,EAAMqF,MAI1EuZ,EAAOljB,QAAQy/C,aAAavoC,EAAOjV,GAAIiV,EAAOmqB,MAAM,GACnD,CAACne,IACEi+C,EAA0B,eAAkB,EAChD9/B,SACC/8B,KACGA,EAAM4F,SAAW5F,EAAM+F,eAI3B6Y,EAAOljB,QAAQ2/C,qBAAqBte,EAAO/8B,EAAM,GAChD,CAAC4e,IACElZ,EAAa,eAAkB,KACnCga,EAAOuK,MAAM,kBACbrL,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDmB,MAAO,CACLsa,KAAM,KACNK,aAAc,SAEf,GACF,CAACgE,EAAQd,IACNk+C,EAAsB,eAAkBlqD,IAC5CwpD,EAAgB1gE,QAAUkX,CAAM,GAC/B,IACGmqD,EAAsB,eAAkB/8D,IAC5C,MAAMsuC,EAAa8tB,EAAgB1gE,QACnC0gE,EAAgB1gE,QAAU,KAC1B,MAAM4gE,GAAc,SAAsB19C,GAE1C,IAAK09C,EAKH,YAJIhuB,GACF1vB,EAAOljB,QAAQy/C,aAAa7M,EAAW3wC,GAAI2wC,EAAWvR,QAM1D,IAAmB,MAAduR,OAAqB,EAASA,EAAW3wC,MAAQ2+D,EAAY3+D,KAAqB,MAAd2wC,OAAqB,EAASA,EAAWvR,SAAWu/B,EAAYv/B,MACvI,OAGF,MAAMigC,EAAcp+C,EAAOljB,QAAQizD,eAAe2N,EAAY3+D,GAAI2+D,EAAYv/B,OAE3D,MAAfigC,GAAuBA,EAAYphE,SAASoE,EAAM4F,UAIlD0oC,EACF1vB,EAAOljB,QAAQy/C,aAAa7M,EAAW3wC,GAAI2wC,EAAWvR,QAEtDne,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDmB,MAAO,CACLsa,KAAM,KACNK,aAAc,UAGlBkD,EAAOljB,QAAQg3B,cAGf2pC,EAAoBC,EAAat8D,IACnC,GACC,CAAC4e,EAAQy9C,IACNY,EAAuB,eAAkBrqD,IAC7C,GAAwB,SAApBA,EAAO0pC,SACT,OAGF,MAAMjhC,GAAO,SAAsBuD,IAEtB,MAARvD,OAAe,EAASA,EAAK1d,MAAQiV,EAAOjV,KAAe,MAAR0d,OAAe,EAASA,EAAK0hB,SAAWnqB,EAAOmqB,OACrGne,EAAOljB,QAAQy/C,aAAavoC,EAAOjV,GAAIiV,EAAOmqB,MAChD,GACC,CAACne,IACEs+C,EAAe,eAAkB,KACrC,MAAM7hD,GAAO,SAAsBuD,GAE/BvD,IAASuD,EAAOljB,QAAQ2mD,OAAOhnC,EAAK1d,KACtCihB,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDmB,MAAO,CACLsa,KAAM,KACNK,aAAc,SAGpB,GACC,CAACkD,IACJmM,GAAiBnM,EAAQ,CACvBu8B,eACAE,uBACAmO,iCAAkC+S,IAEpC,aAAgB,KACd,MAAM34C,GAAM,EAAAC,GAAA,GAAcjF,EAAOljB,QAAQyjB,eAAezjB,SAExD,OADAkoB,EAAIiB,iBAAiB,QAASk4C,GACvB,KACLn5C,EAAIoB,oBAAoB,QAAS+3C,EAAoB,CACtD,GACA,CAACn+C,EAAQm+C,IACZhwC,GAAuBnO,EAAQ,mBAAoBlZ,GACnDqnB,GAAuBnO,EAAQ,kBAAmBukC,GAClDp2B,GAAuBnO,EAAQ,gBAAiBk+C,GAChD/vC,GAAuBnO,EAAQ,cAAey9B,GAC9CtvB,GAAuBnO,EAAQ,iBAAkBq+C,GACjDlwC,GAAuBnO,EAAQ,oBAAqBi+C,GACpD9vC,GAAuBnO,EAAQ,UAAWs+C,EAAa,E6BxMvDC,CAAav+C,EAAQ5iB,GtB/CgB,EAAC4iB,EAAQ5iB,KAC9C,IAAI6vC,EAEJ,MAAMnsB,EAASD,EAAcb,EAAQ,2BAC/Bw+C,EAAc,WACdC,EAAmB,WAKnBC,EAAkB,eAAkB,KACxC59C,EAAOuK,MAAM,4BACb,MAAMszC,GAAuB,QAAiC3+C,EAAOljB,QAAQkE,OAEzE29D,EAAqBC,kBACvB5+C,EAAOljB,QAAQqtB,aAAa,uBAAwB,CAClDy0C,iBAAkBD,EAAqBC,mBAI3C5+C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDuhD,gBAAiB,CACf7iD,MAAM,OAGVsgB,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,EAAQc,IAGN+9C,EAAiB,eAAkB,KACvCJ,EAAiB3hE,QAAUuwB,YAAW,IAAMM,aAAa6wC,EAAY1hE,UAAU,EAAE,GAChF,IAGGgiE,EAAyB,eAAkB,KAC/CN,EAAY1hE,QAAUuwB,WAAWqxC,EAAiB,IAAI,GACrD,CAACA,IACEK,EAAkB,eAAkB19D,IACxCyf,EAAOuK,MAAM,6BACbwzC,IACA7+C,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDuhD,iBAAiB,OAAS,CAAC,EAAGvhD,EAAMuhD,gBAAiB,CACnD7iD,MAAM,EACNk/D,iBAAkBv9D,QAGtB2e,EAAOljB,QAAQqtB,aAAa,sBAAuB,CACjDy0C,iBAAkBv9D,IAEpB2e,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAChT,EAAQ+9C,EAAgB7+C,IAC5BmM,GAAiBnM,EAAQ,CACvB++C,kBACAL,gBAAiBI,IAMnB,MAAMzd,EAA2B,eAAkB,CAACC,EAAW5mC,KAC7D,IAAIqyB,EAEJ,MAAMiyB,GAA0B,QAAiCh/C,EAAOljB,QAAQkE,OAMhF,OAJC0Z,EAAQ8mC,uBACgG,OAAzD,OAA9CzU,EAAuB3vC,EAAMqsC,mBAAwB,EAASsD,EAAqBwV,kBACrFyc,EAAwBt/D,MAMjB,OAAS,CAAC,EAAG4hD,EAAW,CAC7BiB,gBAAiByc,IAJV1d,CAKP,GACD,CAACthC,EAAuD,OAA9CitB,EAAuB7vC,EAAMqsC,mBAAwB,EAASwD,EAAqBsV,kBAC1Fd,EAA4B,eAAkB,CAACztC,EAAQ0G,KAC3D,MAAM6nC,EAAkB7nC,EAAQinC,eAAeY,gBAQ/C,OANuB,MAAnBA,GACFviC,EAAOljB,QAAQ8pB,UAAS5lB,IAAS,OAAS,CAAC,EAAGA,EAAO,CACnDuhD,sBAIGvuC,CAAM,GACZ,CAACgM,IACJ4Z,GAA6B5Z,EAAQ,cAAeqhC,GACpDznB,GAA6B5Z,EAAQ,eAAgByhC,GAKrD,aAAgB,IACP,KACL9zB,aAAa6wC,EAAY1hE,SACzB6wB,aAAa8wC,EAAiB3hE,QAAQ,GAEvC,GAAG,EsBlDNmiE,CAAwBj/C,EAAQ5iB,G/BhCL,EAAC4iB,EAAQ5iB,KACpC,IAAI6vC,EAAsBC,EAAuB+oB,EAEjD,MAAMn1C,EAASD,EAAcb,EAAQ,iBACrCA,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,SACTU,UAAWl2B,EAAM86C,YACjBxkB,aAAct2B,EAAM8hE,oBACpB/rC,cAAe,KACfQ,YAAa,sBAEf,MAAMwrC,EAAqB,eAAkB,KAC3Cn/C,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMk3C,GAAc,QAAwBl3C,EAAOgf,EAAOljB,QAAQk1B,YAC5DotC,EAAuBhiE,EAAMiiE,aAAexoB,GAAiCgC,GAA6BX,EAAal4B,GAAU,KACjIs/C,EAAkBt/C,EAAOljB,QAAQ45B,gCAAgC,YAAa,CAClF0oC,uBACAlnB,YAA4B,MAAfA,EAAsBA,EAAcnB,OAEnD,OAAO,OAAS,CAAC,EAAG/1C,EAAO,CACzBjF,QAAQ,OAAS,CAAC,EAAGiF,EAAMjF,OAAQujE,IACnC,IAEJt/C,EAAOljB,QAAQqtB,aAAa,kBAAkB,GAC7C,CAAC/sB,EAAMiiE,WAAYr/C,IAKhBu/C,EAAe,eAAkB,KACrCJ,IACAn/C,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,EAAQm/C,IACNK,EAAmB,eAAkB/jC,IACzC,MAAMyc,GAAc,QAAwBl4B,GACtCg3B,EAAQ,IAAIkB,EAAYlB,OACxBlyC,EAAYkyC,EAAM56C,WAAUg+B,GAAcA,EAAWr7B,KAAO08B,EAAK18B,MAEpD,IAAf+F,EACFkyC,EAAMpxC,KAAK61B,GAEXub,EAAMlyC,GAAa22B,EAGrBzb,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDlB,UACE,mBAAmB,GACtB,CAACh3B,IACE0/C,EAAoB,eAAkB1oB,IAC1C,MAAMkB,GAAc,QAAwBl4B,GACtC2/C,EAAgB,IAAIznB,EAAYlB,OACtCA,EAAM/yB,SAAQwX,IACZ,MAAM32B,EAAYkyC,EAAM56C,WAAUg+B,GAAcA,EAAWr7B,KAAO08B,EAAK18B,MAEpD,IAAf+F,EACF66D,EAAc/5D,KAAK61B,GAEnBkkC,EAAc76D,GAAa22B,CAC7B,IAEFzb,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDlB,UACE,oBAAoB,GACvB,CAACh3B,IACE4/C,EAAmB,eAAkBC,IACzC,MAAM3nB,GAAc,QAAwBl4B,GACtCg3B,EAAQkB,EAAYlB,MAAMj7C,QAAO0/B,GAAQA,EAAK18B,KAAO8gE,EAAa9gE,KAEpEi4C,EAAMx6C,SAAW07C,EAAYlB,MAAMx6C,QAIvCwjB,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDlB,UACE,mBAAmB,GACtB,CAACh3B,IACE8/C,EAAkB,eAAkBC,IAGxC,GAFAj/C,EAAOuK,MAAM,2BAET00C,EAAmB,CACrB,MAAM7nB,GAAc,QAAwBl4B,GACtCggD,EAAuB9nB,EAAYlB,MAAMj7C,QAAO0/B,IACpD,IAAIwkC,EAEJ,QAAmBr3D,IAAf6yB,EAAKr8B,MACP,OAAO,EAGT,MACMs5C,EAAqE,OAAnDunB,EADTjgD,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aACUrH,sBAA2B,EAAS8kC,EAAsB5pC,MAAKsiB,GAAYA,EAASv5C,QAAUq8B,EAAK+b,gBAK1J,aAJ8G,KAAxD,MAAlBkB,OAAyB,EAASA,EAAeje,uBAAgE,MAAlBie,OAAyB,EAASA,EAAeje,qBAQzK,IAEb,IAAIylC,EAIFA,EAHyBF,EAAqB3pC,MAAKoF,GAAQA,EAAK+G,cAAgBu9B,IAG/DC,EACR5iE,EAAMy6C,gCACE,CAACP,GAAgB,CAChC9U,YAAau9B,GACZ//C,IAEc,IAAIggD,EAAsB1oB,GAAgB,CACzD9U,YAAau9B,GACZ//C,IAGLA,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDlB,MAAOkpB,IAEX,CAEAlgD,EAAOljB,QAAQiiE,gBAAgB,aAAkC,GAChE,CAAC/+C,EAAQc,EAAQ1jB,EAAMy6C,kCACpBsoB,EAAkB,eAAkB,KACxCr/C,EAAOuK,MAAM,uBACbrL,EAAOljB,QAAQ4hE,iBAAiB,GAC/B,CAAC1+C,EAAQc,IACNs/C,EAAwB,eAAkBnpB,IAC9C,MAAMiB,GAAc,QAAwBl4B,GAExCk4B,EAAYjB,eAAiBA,GAIjCj3B,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDjB,iBACE,sBAAsB,GACzB,CAACj3B,IACEqgD,EAAuB,eAAkBhsC,IAC7C,MAAM6jB,GAAc,QAAwBl4B,IAExC,SAAYk4B,EAAYf,kBAAmB9iB,IAI/CrU,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDf,kBAAmB,IAAI9iB,KACtB,GACF,CAACrU,IACEy/C,EAAiB,eAAkB,CAAChsC,EAAOlxB,MAC1B,QAAwByd,KAExByT,IACnB3S,EAAOuK,MAAM,wBACbrL,EAAOljB,QAAQi3B,4BAA4B,SAAUkkB,GAA0BxkB,EAAOr2B,EAAMy6C,gCAAiC73B,GAASzd,GACtIyd,EAAOljB,QAAQwjE,wBACjB,GACC,CAACtgD,EAAQc,EAAQ1jB,EAAMy6C,kCACpB0oB,EAAsB,eAAkB,KAC5C,MAAMvkB,GAAoB,QAAoCh8B,GAC9D,OAAO,IAAIhY,IAAIg0C,EAAkB/nC,KAAIwJ,GAAO,CAACA,EAAI1e,GAAI0e,EAAIgW,SAAQ,GAChE,CAACzT,IAaJmM,GAAiBnM,EAZC,CAChBogD,wBACAE,sBAAuBf,EACvBK,mBACAJ,mBACAE,oBACAD,iBACAK,kBACAK,kBACAI,sBACAF,yBAOF,MAAMhf,EAA2B,eAAkB,CAACC,EAAW5mC,KAC7D,IAAIqyB,EAAsBiU,EAE1B,MAAMwf,GAAsB,QAAwBxgD,GAOpD,OALCtF,EAAQ8mC,uBACY,MAArBpkD,EAAM86C,aACyK,OAA/H,OAA9CnL,EAAuB3vC,EAAMqsC,eAA0F,OAAxDuX,EAAwBjU,EAAqBhxC,aAAvD,EAAkFilD,EAAsB9I,eAC9J,SAAYsoB,EAAqBzpB,MAGzBuK,GAGF,OAAS,CAAC,EAAGA,EAAW,CAC7BvlD,OAAQ,CACNm8C,YAAasoB,IAEf,GACD,CAACxgD,EAAQ5iB,EAAM86C,YAA4D,OAA9CjL,EAAuB7vC,EAAMqsC,eAA0F,OAAxDyD,EAAwBD,EAAqBlxC,aAAvD,EAAkFmxC,EAAsBgL,cACvLuJ,EAA4B,eAAkB,CAACztC,EAAQ0G,KAC3D,IAAIgnC,EAEJ,MAAMxJ,EAAyE,OAA1DwJ,EAAwBhnC,EAAQinC,eAAe5lD,aAAkB,EAAS2lD,EAAsBxJ,YAErH,OAAmB,MAAfA,EACKlkC,GAGTgM,EAAOljB,QAAQi3B,4BAA4B,SAAUkkB,GAA0BC,EAAa96C,EAAMy6C,gCAAiC73B,GAAS,iBACrI,OAAS,CAAC,EAAGhM,EAAQ,CAC1BysD,UAAW,IAAIzsD,EAAOysD,UAAWzgD,EAAOljB,QAAQwjE,yBAChD,GACD,CAACtgD,EAAQ5iB,EAAMy6C,kCACZmgB,EAA+B,eAAkB,CAACvlB,EAAcrzC,KACpE,GAAIA,IAAU,aAAmC,CAC/C,IAAI64D,EAEJ,MAAMyI,EAActjE,EAAMglB,WAAWs+C,YACrC,OAAoB,SAAKA,GAAa,OAAS,CAAC,EAAsD,OAAlDzI,EAAwB76D,EAAMqV,sBAA2B,EAASwlD,EAAsB0I,aAC9I,CAEA,OAAOluB,CAAY,GAClB,CAACr1C,EAAMglB,WAAWs+C,YAAiE,OAAnDzK,EAAyB74D,EAAMqV,sBAA2B,EAASwjD,EAAuB0K,cACvHC,EAAsB,eAAkB5sD,IAC5C,GAAI5W,EAAMiiE,aAAexoB,IAAkC7iC,EAAOorD,qBAAsB,CACtF,MAAMluB,GAAS,QAAmBlxB,GAC5Bw6C,EAAqB,CAAC,EAE5B,IAAK,IAAIj+D,EAAI,EAAGA,EAAI20C,EAAO10C,OAAQD,GAAK,EAAG,CACzC,MAAM4vC,EAAQ+E,EAAO30C,GACrB,IAAIskE,EAEJ,GAAqB,iBAAV10B,GAAsBA,EAAM20B,WAAW,+BAChDD,GAAe,MACV,CACL,MAAM,mBACJhnB,EAAkB,yBAClBC,GACE9lC,EAAOorD,qBAAqBjzB,GAChC00B,EAAe9mB,GAAgB,CAACF,GAAqB,CAACC,GAA2B9lC,EAAOkkC,YAAal4B,EACvG,CAEAw6C,EAAmBruB,GAAS00B,CAC9B,CAEA,MAAO,CACLrG,qBAEA1f,kBAAmB0f,EACnBzf,8BAA+B,CAAC,EAEpC,CAEA,MAAO,CACLD,kBAAmB,CAAC,EACpB0f,mBAAoB,CAAC,EACrBzf,8BAA+B,CAAC,EACjC,GACA,CAAC/6B,EAAQ5iB,EAAMiiE,aAClBzlC,GAA6B5Z,EAAQ,cAAeqhC,GACpDznB,GAA6B5Z,EAAQ,eAAgByhC,GACrD7nB,GAA6B5Z,EAAQ,kBAAmBg4C,GACxD3gB,GAAiCr3B,EAAQuR,GAAuB,YAAaqvC,GAK7E,MAAMG,EAAsB,eAAkB,KAC5CjgD,EAAOuK,MAAM,wDACb,MAAM6sB,GAAc,QAAwBl4B,GACtCghD,GAA0B,QAAmChhD,GAC7DkgD,EAAiBhoB,EAAYlB,MAAMj7C,QAAO0/B,GAAQA,EAAK+G,aAAew+B,EAAwBvlC,EAAK+G,eAErG09B,EAAe1jE,OAAS07C,EAAYlB,MAAMx6C,QAC5CwjB,EAAOljB,QAAQ2iE,gBAAe,OAAS,CAAC,EAAGvnB,EAAa,CACtDlB,MAAOkpB,IAEX,GACC,CAAClgD,EAAQc,IACN06C,EAAgC,eAAkB7uC,IACnC,cAAfA,GACF3M,EAAOljB,QAAQwjE,uBACjB,GACC,CAACtgD,IAGJmO,GAAuBnO,EAAQ,UAAWm/C,GAC1ChxC,GAAuBnO,EAAQ,qBAAsBA,EAAOljB,QAAQwjE,uBACpEnyC,GAAuBnO,EAAQ,gBAAiB+gD,GAChD5yC,GAAuBnO,EAAQ,gCAAiCw7C,GAKhE9hC,IAAe,KACb1Z,EAAOljB,QAAQwjE,uBAAuB,IAMxC,aAAgB,UACY13D,IAAtBxL,EAAM86C,aACRl4B,EAAOljB,QAAQ2iE,eAAeriE,EAAM86C,YACtC,GACC,CAACl4B,EAAQc,EAAQ1jB,EAAM86C,aAAa,E+B/QvC+oB,CAAcjhD,EAAQ5iB,GJtCM,EAAC4iB,EAAQ5iB,KACrC,IAAI6vC,EAAsBC,EAE1B,MAAMpsB,EAASD,EAAcb,EAAQ,kBACrCA,EAAOljB,QAAQk3B,8BAA8B,CAC3CpB,QAAS,YACTU,UAAWl2B,EAAM+zD,UACjBz9B,aAAct2B,EAAM8jE,kBACpB/tC,cAAe,MACfQ,YAAa,oBAEf,MAAMwtC,EAAkB,eAAkB,CAAChjC,EAAOijC,KAChD,MAAMjQ,GAAY,SAAsBnxC,GAClCqhD,EAAclQ,EAAU/0D,WAAUklE,GAAKA,EAAEnjC,QAAUA,IACzD,IAAIojC,EAAe,IAAIpQ,GAYvB,OAVIkQ,GAAe,EACZD,EAGHG,EAAa17D,OAAOw7D,EAAa,EAAGD,GAFpCG,EAAa17D,OAAOw7D,EAAa,GAKnCE,EAAe,IAAIpQ,EAAWiQ,GAGzBG,CAAY,GAClB,CAACvhD,IACEwhD,EAAiB,eAAkB,CAAChL,EAAKiL,KAC7C,IAAIC,EAEJ,MACMC,GADY,SAAsB3hD,GACbqW,MAAKirC,GAAKA,EAAEnjC,QAAUq4B,EAAIr4B,QAErD,GAAIwjC,EAAU,CACZ,IAAIC,EAEJ,MAAMC,OAAiCj5D,IAAtB64D,GAAkC,SAAmE,OAAzCG,EAAoBpL,EAAIsL,cAAwBF,EAAoBxkE,EAAM0kE,aAAcH,EAASI,MAAQN,EACtL,OAAmB,MAAZI,OAAmBj5D,GAAY,OAAS,CAAC,EAAG+4D,EAAU,CAC3DI,KAAMF,GAEV,CAEA,MAAO,CACL1jC,MAAOq4B,EAAIr4B,MACX4jC,UAA4Bn5D,IAAtB64D,GAAkC,SAAoE,OAA1CC,EAAqBlL,EAAIsL,cAAwBJ,EAAqBtkE,EAAM0kE,cAAgBL,EAC/J,GACA,CAACzhD,EAAQ5iB,EAAM0kE,eAKZ1H,EAAe,eAAkB,KACrCp6C,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,GAAI5D,EAAM4kE,cAAgBnrB,GAExB,OADA/1B,EAAOuK,MAAM,kDACN,OAAS,CAAC,EAAGrqB,EAAO,CACzB2wB,SAAS,OAAS,CAAC,EAAG3wB,EAAM2wB,QAAS,CACnC0/B,YAAY,QAAmBrwD,EAAOgf,EAAOljB,QAAQk1B,gBAK3D,MAAMm/B,GAAY,SAAsBnwD,EAAOgf,EAAOljB,QAAQk1B,YACxDiwC,GAAc,SAA8B9Q,EAAWnxC,GACvDqxC,EAAarxC,EAAOljB,QAAQ45B,gCAAgC,UAAW,CAC3EurC,gBAEF,OAAO,OAAS,CAAC,EAAGjhE,EAAO,CACzB2wB,SAAS,OAAS,CAAC,EAAG3wB,EAAM2wB,QAAS,CACnC0/B,gBAEF,IAEJrxC,EAAOljB,QAAQqtB,aAAa,iBAC5BnK,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,EAAQc,EAAQ1jB,EAAM4kE,cACpBE,EAAe,eAAkBzuC,KAChB,SAAsBzT,KAEtByT,IACnB3S,EAAOuK,MAAM,sBACbrL,EAAOljB,QAAQ8pB,UAAS,SAAwB6M,EAAOr2B,EAAMg0D,gCAC7DpxC,EAAOljB,QAAQg3B,cACf9T,EAAOljB,QAAQs9D,eACjB,GACC,CAACp6C,EAAQc,EAAQ1jB,EAAMg0D,gCACpB+Q,EAAa,eAAkB,CAACx+B,EAAQlgC,EAAW2+D,KACvD,IAAKz+B,EAAOgD,SACV,OAGF,MAAMy6B,EAAWI,EAAe79B,EAAQlgC,GACxC,IAAI0tD,EAGFA,GADGiR,GAAwBhlE,EAAMg0D,8BACpBgQ,EAAgB,CAACA,GAAN,GAEZD,EAAgBx9B,EAAOxF,MAAOijC,GAG5CphD,EAAOljB,QAAQolE,aAAa/Q,EAAU,GACrC,CAACnxC,EAAQmhD,EAAiBK,EAAgBpkE,EAAMg0D,gCAC7CiR,EAAe,eAAkB,KAAM,SAAsBriD,IAAS,CAACA,IACvEsiD,EAAgB,eAAkB,KACnB,SAA6BtiD,GAC9B/L,KAAIwJ,GAAOA,EAAIgW,SAChC,CAACzT,IACEuiD,EAAkB,eAAkB,KAAM,SAAyBviD,IAAS,CAACA,IAC7EwiD,EAAc,eAAkBzjE,GAAMihB,EAAOljB,QAAQylE,kBAAkBrmE,QAAQ6C,IAAK,CAACihB,IACrFyiD,EAAuB,eAAkBngE,GAAS0d,EAAOljB,QAAQylE,kBAAkBjgE,IAAQ,CAAC0d,IAWlGmM,GAAiBnM,EAVD,CACdqiD,eACAC,gBACAC,kBACAC,cACAC,uBACAP,eACAC,aACA/H,iBAOF,MAAM/Y,EAA2B,eAAkB,CAACC,EAAW5mC,KAC7D,IAAIqyB,EAAsBiU,EAE1B,MAAM0hB,GAAoB,SAAsB1iD,GAOhD,OALCtF,EAAQ8mC,uBACU,MAAnBpkD,EAAM+zD,WACwK,OAA9H,OAA9CpkB,EAAuB3vC,EAAMqsC,eAA2F,OAAzDuX,EAAwBjU,EAAqBpb,cAAvD,EAAmFqvB,EAAsBmQ,YAChKuR,EAAkBlmE,OAAS,GAMpB,OAAS,CAAC,EAAG8kD,EAAW,CAC7B3vB,QAAS,CACPw/B,UAAWuR,KALNphB,CAOP,GACD,CAACthC,EAAQ5iB,EAAM+zD,UAA0D,OAA9ClkB,EAAuB7vC,EAAMqsC,eAA2F,OAAzDyD,EAAwBD,EAAqBtb,cAAvD,EAAmFub,EAAsBikB,YACtL1P,EAA4B,eAAkB,CAACztC,EAAQ0G,KAC3D,IAAIgnC,EAEJ,MAAMyP,EAAwE,OAA3DzP,EAAwBhnC,EAAQinC,eAAehwB,cAAmB,EAAS+vB,EAAsByP,UAEpH,OAAiB,MAAbA,EACKn9C,GAGTgM,EAAOljB,QAAQ8pB,UAAS,SAAwBuqC,EAAW/zD,EAAMg0D,iCAC1D,OAAS,CAAC,EAAGp9C,EAAQ,CAC1BysD,UAAW,IAAIzsD,EAAOysD,UAAWzgD,EAAOljB,QAAQs9D,gBAChD,GACD,CAACp6C,EAAQ5iB,EAAMg0D,gCACZuR,EAAoB,eAAkB3uD,IAC1C,MAAMk8B,GAAU,QAAoBlwB,GAEpC,IAAKhM,EAAOiuD,YAAa,CACvB,MAAMW,EAAa,GACbC,EAAe,GAYrB,OAXA,QAAmB7iD,GAAQiE,SAAQkoB,IAC7B+D,EAAQ/D,GAAOoT,WAIa,WAA5BrP,EAAQ/D,GAAO7/B,SACjBu2D,EAAaj9D,KAAKumC,GAElBy2B,EAAWh9D,KAAKumC,GAClB,IAEK,IAAIy2B,KAAeC,EAC5B,CAEA,MAAMzyB,EAAW,GACXyyB,EAAe,GAYrB,OAXAr2C,OAAO6H,OAAO6b,GAASjsB,SAAQijC,IACzBA,EAAQ3H,WAIa,WAArB2H,EAAQ56C,SACVu2D,EAAaj9D,KAAKshD,EAAQnoD,IAE1BqxC,EAASxqC,KAAKshD,GAChB,IAEK,IAAIlzC,EAAOiuD,YAAY7xB,MAAcyyB,EAAa,GACxD,CAAC7iD,IACJ4Z,GAA6B5Z,EAAQ,cAAeqhC,GACpDznB,GAA6B5Z,EAAQ,eAAgByhC,GACrDpK,GAAiCr3B,EAAQuR,GAAuB,UAAWoxC,GAK3E,MAAMG,EAA0B,eAAkB,EAChD1kC,UACCh9B,KACD,MAAMghE,EAAuBhhE,EAAMg8C,UAAYh8C,EAAM2E,SAAW3E,EAAM0E,QACtEq8D,EAAW/jC,OAAQx1B,EAAWw5D,EAAqB,GAClD,CAACD,IACE7kB,EAA4B,eAAkB,EAClDlf,UACCh9B,OAEG,SAAWA,EAAMqF,MAASrF,EAAM0E,SAAY1E,EAAM2E,SACpDo8D,EAAW/jC,OAAQx1B,EAAWxH,EAAMg8C,SACtC,GACC,CAAC+kB,IACEpB,EAAsB,eAAkB,KAE5C,MAAM5P,GAAY,SAAsBnxC,GAClC+iD,GAAgB,QAAyB/iD,GAE/C,GAAImxC,EAAU30D,OAAS,EAAG,CACxB,MAAMytD,EAAWkH,EAAUp1D,QAAOqlE,GAAY2B,EAAc3B,EAASjjC,SAEjE8rB,EAASztD,OAAS20D,EAAU30D,QAC9BwjB,EAAOljB,QAAQolE,aAAajY,EAEhC,IACC,CAACjqC,IACEw7C,EAAgC,eAAkB7uC,IACnC,YAAfA,GACF3M,EAAOljB,QAAQs9D,cACjB,GACC,CAACp6C,IACJmO,GAAuBnO,EAAQ,oBAAqB8iD,GACpD30C,GAAuBnO,EAAQ,sBAAuBs9B,GACtDnvB,GAAuBnO,EAAQ,UAAWA,EAAOljB,QAAQs9D,cACzDjsC,GAAuBnO,EAAQ,gBAAiB+gD,GAChD5yC,GAAuBnO,EAAQ,gCAAiCw7C,GAKhE9hC,IAAe,KACb1Z,EAAOljB,QAAQs9D,cAAc,IAM/B,aAAgB,UACUxxD,IAApBxL,EAAM+zD,WACRnxC,EAAOljB,QAAQolE,aAAa9kE,EAAM+zD,UACpC,GACC,CAACnxC,EAAQ5iB,EAAM+zD,WAAW,EIvN7B6R,CAAehjD,EAAQ5iB,G5CEK,EAAC4iB,EAAQ5iB,KACrC,MAAM6iB,GAAiB,EAAAC,EAAA,GAAgBF,EAAQ,MACzCkvB,EAAWjvB,EAAezjB,OAAS,EAAI0H,KAAKs4B,OAAOvc,EAAehM,KAAI0vB,IAC1E,IAAIs/B,EAAuBC,EAE3B,OAAuH,OAA/GD,EAAkE,OAAzCC,EAAoBv/B,EAAO4uB,gBAAqB,EAAS2Q,EAAkB1mE,QAAkBymE,EAAwB,CAAC,KACnJ,EACAniD,EAASD,EAAcb,EAAQ,cAC/BmjD,EAAa,eAAkB,CAACz0B,EAAYC,EAAkBvxC,EAAMmiB,aAAcqvB,EAAexxC,EAAMiiB,UAAWwvB,EAAcK,KACpIpuB,EAAOuK,MAAM,uBAAuBqjB,KACpC1uB,EAAOljB,QAAQ8pB,UAAS5lB,IACtB,MAAMoiE,EAAsBpkD,EAAoBhe,GAC1CqiE,EAAkB50B,GAAuBC,EAAYC,EAAiBC,EAAcC,GAE1F,OAAI,SAAYu0B,EAAqBC,GAC5BriE,GAGF,OAAS,CAAC,EAAGA,EAAO,CACzBie,QAASokD,GACT,IAEJrjD,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAChT,EAAQd,EAAQ5iB,EAAMmiB,aAAcniB,EAAMiiB,UAAW6vB,IACzD,aAAgB,KACdlvB,EAAOljB,QAAQqmE,WAAW/lE,EAAM6hB,QAAS7hB,EAAMmiB,aAAcniB,EAAMiiB,UAAW6vB,EAAS,GACtF,CAAClvB,EAAQ5iB,EAAM6hB,QAAS7hB,EAAMiiB,UAAWjiB,EAAMmiB,aAAc2vB,IAIhE/iB,GAAiBnM,EAHE,CACjBmjD,cAEoD,E4C/BtDG,CAAetjD,EAAQ5iB,GACvB+jD,GAAkBnhC,EAAQ5iB,GDhDG,EAAC4iB,EAAQ5iB,KACtC,MACEmmE,aAAcC,EAAgB,cAC9BC,EAAa,sBACbC,GACEtmE,EACEumE,EAAmB,SAAa,CAAC,GAEjCC,EAAuB,UAAc,GACrCC,EAAuB,UAAa,GACpCC,GAAuB,EAAA5jD,EAAA,GAAgBF,EAAQZ,GAC/C2kD,GAAc,EAAA7jD,EAAA,GAAgBF,EAAQ,MACtCygC,GAAkB,EAAAvgC,EAAA,GAAgBF,EAAQgkD,GAAA,IAC1CC,GAAe,EAAA/jD,EAAA,GAAgBF,EAAQ,OACvCw4C,EAAcnd,GAAmBr7B,EAAQ5iB,GACzCkzC,GAAa,EAAApwB,EAAA,GAAgBF,EAAQ,MACrCkkD,EAAkB,eAAkB,KACxC,IAAIn0B,EAAiBC,EAErB6zB,EAAqB/mE,SAAU,EAC/B,MAAMqnE,EAAgBzkD,EAA0BM,EAAOljB,QAAQkE,MAAOgf,EAAOljB,QAAQk1B,YAE/EoyC,EAA6B3mD,IAC5BkmD,EAAiB7mE,QAAQ2gB,EAAI1e,MAChC4kE,EAAiB7mE,QAAQ2gB,EAAI1e,IAAM,CACjCk9D,MAAO,CACLoI,WAAYP,GAEdQ,WAAW,EACXjoD,YAAY,EACZkoD,uBAAuB,IAK3B,MAAM,UACJD,EAAS,sBACTC,EAAqB,MACrBtI,GACE0H,EAAiB7mE,QAAQ2gB,EAAI1e,IACjC,IAAIylE,EAAgBV,EACpB,MAAMW,EAAwBxI,EAAMoI,WAEpC,GAAIC,EAEFE,EAAgBC,OACX,GAAIjB,EAAkB,CAC3B,MAAMkB,EAAoBlB,GAAiB,OAAS,CAAC,EAAG/lD,EAAK,CAC3D0mD,mBAGF,GAA0B,SAAtBO,EAA8B,CAChC,GAAIH,EAAuB,CACzB,MAAMI,EAAqBjB,EAAwBA,GAAsB,OAAS,CAAC,EAAGjmD,EAAK,CACzF0mD,mBACIL,EAENU,EAAsC,MAAtBG,EAA6BA,EAAqBb,CACpE,MACEU,EAAgBC,EAGlBZ,EAAqB/mE,SAAU,EAC/B6mE,EAAiB7mE,QAAQ2gB,EAAI1e,IAAIsd,YAAa,CAChD,MAEEmoD,EAAqC,MAArBE,EAA4BA,EAAoBZ,EAChEH,EAAiB7mE,QAAQ2gB,EAAI1e,IAAIwlE,uBAAwB,EACzDZ,EAAiB7mE,QAAQ2gB,EAAI1e,IAAIsd,YAAa,CAElD,MACEsnD,EAAiB7mE,QAAQ2gB,EAAI1e,IAAIwlE,uBAAwB,EAG3D,MAAMK,EAAoBp4C,OAAO4J,QAAQ6lC,GAAOh0D,QAAO,CAACC,GAAMzB,EAAKoH,MAC7D,aAAag3D,KAAKp+D,KACpByB,EAAIzB,GAAOoH,GAGN3F,IACN,CAAC,GAEE48D,GAAiB,OAAS,CAAC,EAAGF,EAAmB,CACrDP,WAAYG,IAGd,GAAIf,EAAe,CACjB,IAAIsB,EAAcC,EAElB,MAAMC,EAA6BjlD,EAAOljB,QAAQ04D,iCAAiC/3C,EAAI1e,IACjF8f,EAAU4kD,GAAc,OAAS,CAAC,EAAGhmD,EAAK,CAC9CynD,eAA+C,IAA/BD,EAChBE,cAAeF,IAA+BzM,EAAYvd,KAAKz+C,OAAS,EACxEyoE,gCAEFH,EAAeM,WAA6C,OAA/BL,EAAelmD,EAAQtS,KAAew4D,EAAe,EAClFD,EAAeO,cAAsD,OAArCL,EAAkBnmD,EAAQ0J,QAAkBy8C,EAAkB,CAChG,CAEA,MAAMM,EAAiBtlD,EAAOljB,QAAQk4B,6BAA6B,YAAa8vC,EAAgBrnD,GAEhG,OADAkmD,EAAiB7mE,QAAQ2gB,EAAI1e,IAAIk9D,MAAQqJ,EAClCA,CAAc,EAGjBvT,EAAY,GACZld,EAAyB2jB,EAAYvd,KAAKhzC,QAAO,CAACC,EAAKuV,KAC3Ds0C,EAAUnsD,KAAKsC,GACf,IAAIq9D,EAAkB,EAClBC,EAAa,EACjB,MAAMF,EAAiBlB,EAA2B3mD,GAQlD,OAPA+O,OAAO4J,QAAQkvC,GAAgBrhD,SAAQ,EAAEpW,EAAMzO,MACzC,aAAaylE,KAAKh3D,GACpB03D,EAAkBnmE,EAAQmmE,EAAkBnmE,EAAQmmE,EAEpDC,GAAcpmE,CAChB,IAEK8I,EAAMq9D,EAAkBC,CAAU,GACxC,GACW,MAAdl1B,GAAoE,OAArCP,EAAkBO,EAAW/jC,MAAwBwjC,EAAgB9rB,SAAQxG,IAC1G2mD,EAA2B3mD,EAAI,IAEnB,MAAd6yB,GAA0E,OAA3CN,EAAqBM,EAAW/nB,SAA2BynB,EAAmB/rB,SAAQxG,IACnH2mD,EAA2B3mD,EAAI,IAEjCuC,EAAOljB,QAAQ8pB,UAAS5lB,IACf,OAAS,CAAC,EAAGA,EAAO,CACzB8xC,SAAU,CACR+B,yBACAkd,iBAKD8R,EAAqB/mE,UAExB8mE,EAAqB9mE,QAAU2tC,KAGjCzqB,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,EAAQw4C,EAAYvd,KAAM6oB,EAAsBN,EAAkBC,EAAeC,EAAuBpzB,IACtGizB,EAAe,eAAkBp3B,IACrC,MAAM30B,EAASmsD,EAAiB7mE,QAAQqvC,GACxC,OAAO30B,EAASA,EAAOykD,MAAMoI,WAAaP,CAAoB,GAC7D,CAACA,IAQE2B,EAAe,eAAkB,CAAC1mE,EAAIyY,KAC1CmsD,EAAiB7mE,QAAQiC,GAAIk9D,MAAMoI,WAAa7sD,EAChDmsD,EAAiB7mE,QAAQiC,GAAIulE,WAAY,EACzCX,EAAiB7mE,QAAQiC,GAAIwlE,uBAAwB,EACrDL,GAAiB,GAChB,CAACA,IACEwB,EAA2B,WAAc,KAAM,EAAAC,GAAA,GAASzB,IAAkB,CAACA,IAC3E0B,EAAyB,eAAkB,CAAC7mE,EAAIyY,EAAQlL,KAC5D,IAAKq3D,EAAiB7mE,QAAQiC,KAAQ4kE,EAAiB7mE,QAAQiC,GAAIsd,WACjE,OAIF,MAAMwpD,EAAiBlC,EAAiB7mE,QAAQiC,GAAIk9D,MAAM,QAAO,EAAAnxD,EAAA,GAAWwB,QAAiBkL,EAC7FmsD,EAAiB7mE,QAAQiC,GAAIwlE,uBAAwB,EACrDZ,EAAiB7mE,QAAQiC,GAAIk9D,MAAM,QAAO,EAAAnxD,EAAA,GAAWwB,MAAekL,EAEhEquD,GACFH,GACF,GACC,CAACA,IACEI,EAAmB,eAAkB/mE,IACzC,IAAIgnE,EAEJ,OAAmE,OAA1DA,EAAyBpC,EAAiB7mE,QAAQiC,SAAe,EAASgnE,EAAuB1pD,cAAe,CAAK,GAC7H,IACG2pD,EAA0B,eAAkB,IACzCpC,EAAqB9mE,SAC3B,IACGmpE,EAA0B,eAAkB3jE,IAC5CuhE,EAAqB/mE,SAAWwF,EAAQshE,EAAqB9mE,UAC/D8mE,EAAqB9mE,QAAUwF,EACjC,GACC,IACG4jE,EAAkB,eAAkB,KACxCvC,EAAiB7mE,QAAU,CAAC,EAC5BonE,GAAiB,GAChB,CAACA,IAGJ,aAAgB,KACdA,GAAiB,GAChB,CAACJ,EAAsBC,EAAatjB,EAAiBwjB,EAAcC,IACtElqC,GAA2Bha,EAAQ,YAAakkD,GAWhD/3C,GAAiBnM,EAVG,CAClBmmD,iCAAkCH,EAClCI,iCAAkCH,EAClCI,0BAA2BP,EAC3B5lB,sBAAuBqjB,EACvB+C,6BAvD0Bn6B,IAC1B,IAAIo6B,EAEJ,OAAoE,OAA5DA,EAAwB5C,EAAiB7mE,QAAQqvC,SAAkB,EAASo6B,EAAsBtK,KAAK,EAqD/GuK,sBAAuBf,EACvBgB,mCAAoCb,EACpCM,mBAEsD,EC7JxDQ,CAAgB1mD,EAAQ5iB,GH1BG,EAAC4iB,EAAQ5iB,KACpC,MAAM0jB,EAASD,EAAcb,EAAQ,iBAC/B2mD,EAAS3mD,EAAOljB,QAAQotB,wBACxBH,EAAY/J,EAAOljB,QAAQitB,UAC3BiyB,GAAoB,EAAA97B,EAAA,GAAgBF,EAAQ,MAC5Co8B,EAAkB,eAAkBpoC,IACxC,MAAMmM,GAAgB,QAAqBH,GACrCC,GAAiB,QAAqCD,GAG5D,GAF0C,MAAnBhM,EAAOqoC,UAEW,IAAlBl8B,GAAiD,IAA1BF,EAAezjB,OAC3D,OAAO,EAGTskB,EAAOuK,MAAM,4BAA4BrX,EAAOqoC,kBAAkBroC,EAAO8nC,aACzE,IAAI8qB,EAAoB,CAAC,EAEzB,GAAuB,MAAnB5yD,EAAO8nC,SAAkB,CAC3B,MAAM+qB,GAAkB,QAA4B7mD,GACpD,IAAI8mD,EAEJ,QAA+B,IAApB9yD,EAAOqoC,SAA0B,CAC1C,IAAI0qB,EAEJ,MAAM56B,EAAwE,OAA/D46B,EAAwB/qB,EAAkBhoC,EAAOqoC,gBAAqB,EAAS0qB,EAAsBhoE,GAC9GqtC,EAAkBpsB,EAAOljB,QAAQuvC,4BAA4BF,EAAOn4B,EAAO8nC,UAE7E1P,IAAoBA,EAAgBE,mBACtCw6B,EAAY16B,EAAgBuX,UAAU11C,MAE1C,MAEyB,IAAd64D,IACTA,EAAY7mD,EAAejM,EAAO8nC,UAAUrT,eAG9Cm+B,EAAkBzrD,KAAOm2C,GAAe,CACtCruD,aAAc8mB,EAAUjtB,QAAQkY,YAChClS,UAAWinB,EAAUjtB,QAAQwmB,WAC7BhgB,aAAcwjE,EACdzjE,UAAWwjE,EAAgB7yD,EAAO8nC,WAEtC,CAEA,GAAuB,MAAnB9nC,EAAOqoC,SAAkB,CAC3B,IAAI5I,EAAgBC,EAEpB,MAAMZ,EAAWD,GAAqB7yB,EAAOljB,QAAQkE,OAC/C2/C,GAAO,SAAiB3gC,GACxBtjB,GAAW,SAAqBsjB,GAChCgnD,EAAgB5pE,EAAMi5C,WAA+BriC,EAAOqoC,SAAWsE,EAAOjkD,EAA3CsX,EAAOqoC,SAC1C4qB,EAAqBn0B,EAASif,UAAUiV,EAAe,GAAKl0B,EAASif,UAAUiV,EAAe,GAAKl0B,EAASif,UAAUiV,GAAgBl0B,EAAS+B,uBAAyB/B,EAASif,UAAUiV,GAC3LE,GAAmH,OAA3FzzB,EAAiB1pB,EAAUjtB,QAAQsF,cAAc,IAAI,gCAA6C,EAASqxC,EAAexwC,eAAiB,EACnKkkE,GAA0H,OAA/FzzB,EAAkB3pB,EAAUjtB,QAAQsF,cAAc,IAAI,mCAAgD,EAASsxC,EAAgBzwC,eAAiB,EACjL2jE,EAAkBr6D,IAAM+kD,GAAe,CACrCruD,aAAc8mB,EAAUjtB,QAAQmG,aAAeikE,EAAsBC,EACrErkE,UAAWinB,EAAUjtB,QAAQgG,UAC7BQ,aAAc2jE,EACd5jE,UAAWyvC,EAASif,UAAUiV,IAElC,CAIA,OAFAJ,EAAoB5mD,EAAOljB,QAAQk4B,6BAA6B,kBAAmB4xC,EAAmB5yD,SAEhEpL,WAA3Bg+D,EAAkBzrD,WAAuDvS,WAA1Bg+D,EAAkBr6D,OAC1EyT,EAAOljB,QAAQsqE,OAAOR,IACf,EAGG,GACX,CAAC9lD,EAAQd,EAAQ+J,EAAW3sB,EAAMi5C,WAAY2F,IAC3CorB,EAAS,eAAkBpzD,IAC3B+V,EAAUjtB,SAA0B,MAAfkX,EAAOmH,MAAgBwrD,EAAO7pE,UACrD6pE,EAAO7pE,QAAQwmB,WAAatP,EAAOmH,KACnC4O,EAAUjtB,QAAQwmB,WAAatP,EAAOmH,KACtC2F,EAAOuK,MAAM,mBAAmBrX,EAAOmH,SAGrC4O,EAAUjtB,SAAyB,MAAdkX,EAAOzH,MAC9Bwd,EAAUjtB,QAAQgG,UAAYkR,EAAOzH,IACrCuU,EAAOuK,MAAM,kBAAkBrX,EAAOzH,QAGxCuU,EAAOuK,MAAM,8CAA8C,GAC1D,CAACtB,EAAW48C,EAAQ7lD,IACjBumD,EAAoB,eAAkB,IACvB,MAAbt9C,GAAqBA,EAAUjtB,QAO9B,CACLyP,IAAKwd,EAAUjtB,QAAQgG,UACvBqY,KAAM4O,EAAUjtB,QAAQwmB,YARjB,CACL/W,IAAK,EACL4O,KAAM,IAQT,CAAC4O,IAMJoC,GAAiBnM,EALC,CAChBonD,SACAhrB,kBACAirB,qBAEkD,EG5EpDC,CAActnD,EAAQ5iB,GtE1DS4iB,KAC/B,MAAMc,EAASD,EAAcb,EAAQ,qBAK/BunD,EAAiB,eAAkBppC,IAClBne,EAAOljB,QAAQ8pB,UAAS5lB,GACvCA,EAAMw4B,WAAW95B,MAAQsB,EAAMw4B,WAAW2E,QAAUA,EAC/Cn9B,GAGT8f,EAAOuK,MAAM,wBACN,OAAS,CAAC,EAAGrqB,EAAO,CACzBw4B,WAAY,CACV95B,MAAM,EACNy+B,gBAMJne,EAAOljB,QAAQ4hE,kBACf1+C,EAAOljB,QAAQg3B,cACjB,GACC,CAAC9T,EAAQc,IACN0mD,EAAiB,eAAkB,KAClBxnD,EAAOljB,QAAQ8pB,UAAS5lB,GACtCA,EAAMw4B,WAAW95B,WAAmCkJ,IAA3B5H,EAAMw4B,WAAW2E,OAI/Crd,EAAOuK,MAAM,uBACN,OAAS,CAAC,EAAGrqB,EAAO,CACzBw4B,YAAY,OAAS,CAAC,EAAGx4B,EAAMw4B,WAAY,CACzC95B,MAAM,EACNy+B,WAAOv1B,OAPF5H,KAaTgf,EAAOljB,QAAQg3B,aACjB,GACC,CAAC9T,EAAQc,IACN08B,EAAmB,eAAkBrf,IACzCrd,EAAOuK,MAAM,sBACb,MAAMmO,EAAaD,GAAuBvZ,EAAOljB,QAAQkE,OAEpDw4B,EAAW95B,MAAQ85B,EAAW2E,QAAUA,EAG3CqpC,IAFAD,EAAeppC,EAGjB,GACC,CAACne,EAAQc,EAAQymD,EAAgBC,IAMpCr7C,GAAiBnM,EALK,CACpBunD,iBACAC,iBACAhqB,qBAOF,MAAMygB,EAA0B,eAAkB,CAACjqD,EAAQ5S,KAEzD,IAAKA,EAAM4F,OAAOrE,UAAU3F,SAAS,oBACnC,OAIF,IAAKoE,EAAMqmE,cACT,OAIF,MAAMC,EAAsBtmE,EAAMqmE,cAAc9kE,UAAU3F,SAAS,cAE7D2qE,EAAuE,aAA7CvmE,EAAMqmE,cAAc5jE,aAAa,SAE7D6jE,GAAuBC,IACzB3nD,EAAOljB,QAAQ2/C,qBAAqBzoC,EAAOmqB,MAC7C,GACC,CAACne,IACJmO,GAAuBnO,EAAQ,oBAAqBwnD,GACpDr5C,GAAuBnO,EAAQ,oBAAqBi+C,GACpD9vC,GAAuBnO,EAAQ,uBAAwBA,EAAOljB,QAAQ0qE,gBACtEr5C,GAAuBnO,EAAQ,2BAA4BA,EAAOljB,QAAQ0qE,eAAe,EsE7BzFI,CAAkB5nD,GAClB+wB,GAAiB/wB,GACjB+yB,GAAmB/yB,EAAQ5iB,GAC3B46B,GAAiBhY,GFvCZ,SAA2BA,EAAQ5iB,GACxC,MAAM0jB,EAASD,EAAcb,EAAQ,sBAC/B6nD,EAAa,UAAa,GAC1BC,EAAoB,SAAa,MACjCC,EAAoB,SAAa,MACjCj1B,GAAW,EAAA5yB,EAAA,GAAgBF,EAAQ6yB,IACnChrB,GAAoB,EAAA3H,EAAA,GAAgBF,EAAQJ,GAC5CooD,EAA0B,eAAkB,KAChD,IAAIC,EAEJ,MAAMC,EAAyE,OAA1DD,EAAwBjoD,EAAOljB,QAAQyjB,qBAA0B,EAAS0nD,EAAsBnrE,QAC/GqrE,GAAoB,QAA8BnoD,GAClD6hC,EAAmB5B,GAA0BjgC,GAEnD,IAAK8nD,EAAkBhrE,QACrB,OAGF,IAAI20D,EAmBA2W,EACAxW,EACAC,EAnBJ,GAA2B,MAAvBz0D,EAAMirE,cACR5W,EAAgBr0D,EAAMirE,mBACjB,GAAKF,GAAsBD,EAE3B,CACL,MACMI,GADM,EAAArjD,GAAA,GAAcijD,GACJvjD,cAAc,OACpC2jD,EAAUvzD,MAAM9G,MAAQ,OACxBq6D,EAAUvzD,MAAMyC,OAAS,OACzB8wD,EAAUvzD,MAAMzI,SAAW,WAC3Bg8D,EAAUvzD,MAAM3E,SAAW,SAC3Bk4D,EAAUx7D,UAAY,YACtBo7D,EAAYtiD,YAAY0iD,GACxB7W,EAAgB6W,EAAU9kD,YAAc8kD,EAAUtzD,YAClDkzD,EAAY7hD,YAAYiiD,EAC1B,MAZE7W,EAAgB,EAkBlB,GAAIr0D,EAAMif,WACRw1C,GAAa,EACbD,EAAa1tD,KAAK21B,MAAMsuC,GAAqBL,EAAkBhrE,QAAQmR,MACvEm6D,EAAoB,CAClBn6D,MAAO65D,EAAkBhrE,QAAQmR,MACjCuJ,OAAQs7B,EAAS+B,wBAA0B+c,EAAaH,EAAgB,QAErE,CACL2W,EAAoB,CAClBn6D,MAAO65D,EAAkBhrE,QAAQmR,MACjCuJ,OAAQswD,EAAkBhrE,QAAQ0a,OAASqQ,GAE7C,MAAM0gD,EAAoB/W,GAAU,CAClCjxB,QAAS,CACPtyB,MAAO/J,KAAK21B,MAAMsuC,GAClB3wD,OAAQs7B,EAAS+B,wBAEnBvvB,UAAW,CACTrX,MAAOm6D,EAAkBn6D,MACzBuJ,OAAQ4wD,EAAkB5wD,OAASqqC,EAAiBt1C,IAAMs1C,EAAiBt5B,QAE7EkpC,kBAEFI,EAAa0W,EAAkB1W,WAC/BD,EAAa2W,EAAkB3W,UACjC,CAEA,MAIM4W,EAAoB,CACxBJ,oBACAtgD,kBANwB,CACxB7Z,MAAOm6D,EAAkBn6D,OAAS4jD,EAAaJ,EAAgB,GAC/Dj6C,OAAQ4wD,EAAkB5wD,QAAUo6C,EAAaH,EAAgB,IAKjEG,aACAC,aACAJ,iBAEIgX,EAAiBV,EAAkBjrE,QACzCirE,EAAkBjrE,QAAU0rE,EAExBA,EAAkB1gD,kBAAkB7Z,SAA6B,MAAlBw6D,OAAyB,EAASA,EAAe3gD,kBAAkB7Z,QAAUu6D,EAAkB1gD,kBAAkBtQ,UAA8B,MAAlBixD,OAAyB,EAASA,EAAe3gD,kBAAkBtQ,SACjPwI,EAAOljB,QAAQqtB,aAAa,0BAA2Bq+C,EAAkB1gD,kBAC3E,GACC,CAAC9H,EAAQ5iB,EAAMirE,cAAejrE,EAAMif,WAAYwL,EAAmBirB,EAAS+B,yBACzE6zB,EAAS,eAAkB,KAC/BV,IACAhoD,EAAOljB,QAAQqtB,aAAa,kBAAmB29C,EAAkBhrE,QAAQ,GACxE,CAACkjB,EAAQgoD,IACN9/C,EAAoB,eAAkB,IAAM6/C,EAAkBjrE,SAAS,IACvE6rE,EAAsB,eAAkB,KAC5C,MAAMv9B,EAAaprB,EAAOljB,QAAQorB,oBAElC,IAAKkjB,EACH,OAAO,EAGT,MAAMotB,EAAcxd,GAAeh7B,EAAQ,CACzCq2B,WAAYj5C,EAAMi5C,WAClB6E,eAAgB99C,EAAM89C,iBAIxB,GAAI99C,EAAMmmE,aAAc,CACtB,MAAMqF,EAAgB5oD,EAAOljB,QAAQ+rE,4BAC/BjsB,EAAmBgsB,EAAcxtB,aAAewtB,EAAcztB,cACpE,OAAOj3C,KAAKglC,IAAI0T,EAAmB,EAAG4b,EAAYvd,KAAKz+C,OACzD,CAEA,MAAMslD,EAAkC59C,KAAK6qC,MAAM3D,EAAWtjB,kBAAkBtQ,OAAS4H,EAA6BY,IACtH,OAAO9b,KAAKglC,IAAI4Y,EAAiC0W,EAAYvd,KAAKz+C,OAAO,GACxE,CAACwjB,EAAQ5iB,EAAMi5C,WAAYj5C,EAAM89C,eAAgB99C,EAAMmmE,eAO1Dp3C,GAAiBnM,EANK,CACpB0oD,SACAxgD,oBACA20B,6BAA8B8rB,EAC9BhoD,iCAAkCqnD,IAGpC,MAAMc,EAAiB,WAAc,KAAM,EAAAnD,GAAA,GAAS+C,EAAQ,KAAK,CAACA,IAC5DK,EAAgB,UAAa,GAC7BjiD,EAAe,eAAkBjZ,IACrCi6D,EAAkBhrE,QAAU+Q,EAE5B,MAAMm7D,EAAU,QAAQnE,KAAK75C,OAAOsN,UAAUgc,WAY9C,OAVoB,IAAhBzmC,EAAK2J,QAAiBqwD,EAAW/qE,SAAYM,EAAMif,YAAe2sD,IACpEloD,EAAOO,MAAM,CAAC,+DAAgE,8DAA+D,0CAA2C,GAAI,8DAA8DmS,KAAK,OAC/Pq0C,EAAW/qE,SAAU,GAGJ,IAAf+Q,EAAKI,OAAgB45D,EAAW/qE,SAAYksE,IAC9CloD,EAAOO,MAAM,CAAC,8DAA+D,6DAA8D,yCAA0C,GAAI,8DAA8DmS,KAAK,OAC5Pq0C,EAAW/qE,SAAU,GAGnBy0D,IAOAwX,EAAcjsE,SALhB4rE,SACAK,EAAcjsE,SAAU,SAW1BgsE,GAAgB,GACf,CAAC1rE,EAAMif,WAAYysD,EAAgBhoD,EAAQ4nD,KAC9C,EAAAhoD,EAAA,IAAkB,IAAMsnD,KAA2B,CAACA,IACpD74C,GAAwBnP,EAAQ,gBAAiBgoD,GACjD74C,GAAwBnP,EAAQ,aAAcgoD,GAC9C74C,GAAwBnP,EAAQ,iBAAkBgoD,GAClD74C,GAAwBnP,EAAQ,gBAAiBgoD,GACjD75C,GAAuBnO,EAAQ,SAAU8G,GACzCqI,GAAwBnP,EAAQ,kBAAmB5iB,EAAMupB,SAC3D,CExHEsiD,CAAkBjpD,EAAQ5iB,GGxErB,SAAuB4iB,EAAQ5iB,GACpC+xB,GAAwBnP,EAAQ,oBAAqB5iB,EAAM8rE,qBAC3D/5C,GAAwBnP,EAAQ,0BAA2B5iB,EAAM+rE,2BACjEh6C,GAAwBnP,EAAQ,mBAAoB5iB,EAAMgsE,oBAC1Dj6C,GAAwBnP,EAAQ,kBAAmB5iB,EAAMisE,mBACzDl6C,GAAwBnP,EAAQ,oBAAqB5iB,EAAMksE,qBAC3Dn6C,GAAwBnP,EAAQ,oBAAqB5iB,EAAMmsE,qBAC3Dp6C,GAAwBnP,EAAQ,oBAAqB5iB,EAAMosE,qBAC3Dr6C,GAAwBnP,EAAQ,YAAa5iB,EAAMqsE,aACnDt6C,GAAwBnP,EAAQ,kBAAmB5iB,EAAMssE,mBACzDv6C,GAAwBnP,EAAQ,cAAe5iB,EAAMusE,eACrDx6C,GAAwBnP,EAAQ,eAAgB5iB,EAAMwsE,gBACtDz6C,GAAwBnP,EAAQ,uBAAwB5iB,EAAMysE,wBAC9D16C,GAAwBnP,EAAQ,sBAAuB5iB,EAAM0sE,uBAC7D36C,GAAwBnP,EAAQ,WAAY5iB,EAAM2sE,YAClD56C,GAAwBnP,EAAQ,YAAa5iB,EAAM4sE,aACnD76C,GAAwBnP,EAAQ,iBAAkB5iB,EAAM6sE,kBACxD96C,GAAwBnP,EAAQ,WAAY5iB,EAAM8sE,YAClD/6C,GAAwBnP,EAAQ,iBAAkB5iB,EAAM+sE,SACxDh7C,GAAwBnP,EAAQ,cAAe5iB,EAAMgtE,cACvD,CHqDEC,CAAcrqD,EAAQ5iB,GI7Ee4iB,KACrC,MAAMo2B,EAAc,eAAkB,CAACpiC,EAAS,CAAC,IACzBgM,EAAOljB,QAAQk4B,6BAA6B,cAAe,CAAC,EAAGhhB,IAEpF,CAACgM,IACEm2B,EAAe,eAAkBwL,IACpB3hC,EAAOljB,QAAQk4B,6BAA6B,eAAgB,CAC3EyrC,UAAW,IACV,CACD9e,mBAEO8e,UAAUx8C,SAAQsQ,IACzBA,GAAU,IAEZvU,EAAOljB,QAAQg3B,aAAa,GAC3B,CAAC9T,IAKJmM,GAAiBnM,EAJW,CAC1Bo2B,cACAD,gBAEsE,EJ0DxEm0B,CAAwBtqD,GACjBA,CAAM,E,gBKjFR,MAAMuqD,GAA2B,CAEtCC,YAAa,UACbC,sBAAuB,oBACvBC,yBAA0B,qBAE1BC,eAAgB,UAChBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,WACxBC,0BAA2B,cAE3BC,eAAgB,UAChBC,oBAAqB,iBAErBC,eAAgB,UAChBC,oBAAqB,eACrBC,0BAA2B,eAC3BC,0BAA2B,eAC3BC,4BAA6BC,GAAmB,IAAVA,EAAc,GAAGA,mBAAyB,GAAGA,kBAEnFC,8BAA+B,UAC/BC,wBAAyB,SACzBC,kCAAmC,QAEnCC,cAAe,SACfC,mBAAoB,SACpBC,iBAAkB,kBAClBC,mBAAoB,QACpBC,mBAAoB,oBAEpBC,2BAA4B,cAC5BC,iCAAkC,eAClCC,0BAA2B,iBAC3BC,0BAA2B,WAC3BC,0BAA2B,WAE3BC,qBAAsB,aACtBC,2BAA4B,SAC5BC,wBAAyB,iBACzBC,qBAAsB,WAEtBC,uBAAwB,MACxBC,sBAAuB,KACvBC,mBAAoB,UACpBC,sBAAuB,QACvBC,4BAA6B,eAE7BC,uBAAwB,WACxBC,qBAAsB,SACtBC,yBAA0B,cAC1BC,uBAAwB,YACxBC,iBAAkB,KAClBC,kBAAmB,SACnBC,oBAAqB,WACrBC,wBAAyB,iBACzBC,qBAAsB,YACtBC,yBAA0B,kBAC1BC,sBAAuB,WACvBC,yBAA0B,eAC1BC,sBAAuB,YAEvBC,eAAgB,MAChBC,gBAAiB,OACjBC,iBAAkB,QAElBC,gBAAiB,OACjBC,sBAAuB,eACvBC,iBAAkB,SAClBC,qBAAsB,OACtBC,iBAAkB,SAClBC,kBAAmB,cACnBC,mBAAoB,eAEpBC,iCAAkC9C,GAAmB,IAAVA,EAAc,GAAGA,mBAAyB,GAAGA,kBACxF+C,yBAA0B,eAC1BC,0BAA2B,OAE3BC,kBAAmBjD,GAAmB,IAAVA,EAAc,GAAGA,EAAMrwC,iCAAmC,GAAGqwC,EAAMrwC,gCAE/FuzC,gBAAiB,cAEjBC,uBAAwB,CAACC,EAAcC,IAAe,GAAGD,EAAazzC,uBAAuB0zC,EAAW1zC,mBAExG2zC,4BAA6B,qBAC7BC,+BAAgC,kBAChCC,iCAAkC,oBAClCC,2BAA4B,aAC5BC,6BAA8B,eAE9BC,qBAAsB,MACtBC,sBAAuB,KAEvBC,gBAAiB,OAEjBC,UAAW,cACXC,WAAY,eACZC,MAAO,QAEPC,2BAA4B,QAC5BC,eAAgB,eAChBC,iBAAkB,gBAElBC,yBAA0B,QAC1BC,YAAa9uE,GAAQ,YAAYA,IACjC+uE,cAAe/uE,GAAQ,oBAAoBA,IAE3CgvE,kBAAmB,sBACnBC,kBAAmB,SACnBC,oBAAqB,WAErBC,mBAAoB,CAAC,EAErBC,wBAAyB,iBAEzBC,0BAA2B,cAC3BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,6BAA8B,Q,uFCtHzB,SAASC,GAAsBtmE,GACpC,OAAO,EAAAC,GAAA,GAAqB,YAAaD,EAC3C,CAEA,QADsB,EAAAE,GAAA,GAAuB,YAAa,CAAC,OAAQ,YAAa,UAAW,aAAc,eAAgB,iBAAkB,YAAa,aAAc,UAAW,WAAY,QAAS,QAAS,UCH/M,MAAM,GAAY,CAAC,YAAa,QAAS,OAAQ,OAAQ,MAkCnDqmE,IAAa,EAAAlmE,EAAA,IAAO,OAAQ,CAChC1J,KAAM,YACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAAMD,EAAWsQ,MAAQvQ,EAAO,QAAO,EAAAI,EAAA,GAAWH,EAAWsQ,SAAUvQ,EAAO,QAAO,EAAAI,EAAA,GAAWH,EAAWkD,SAAS,GAPpH,EAShB,EACDlD,iBACI,OAAS,CACbkG,QAAS,cACT5C,MAAO,GACPuJ,OAAQ,GACRpH,SAAU,SACV5B,QAAS,GACTnD,UAAW,aACXiB,SAAU,WACVqkE,WAAY,EACZnkE,OAAQ,EAERwL,cAAe,SAEf,eAAgB,CACd44D,YAAa,UAEM,UAApBjmE,EAAWsQ,MAAoB,CAChChD,YAAa,GACQ,QAApBtN,EAAWsQ,MAAkB,CAC9B3L,aAAc,GACO,UAApB3E,EAAWkD,MAAoB,CAChCI,MAAO,GACPuJ,OAAQ,GACRhJ,QAAS,EACT,CAAC,MAAM,YAAwB,CAC7BP,MAAO,GACPuJ,OAAQ,IAEV,CAAC,MAAM,iBAA6B,CAClChJ,QAAS,EACT,CAAC,KAAK,cAA0B,CAC9BkB,UAAW,yBAIXmhE,IAAmB,EAAArmE,EAAA,IAAO8K,GAAA,EAAY,CAC1CxU,KAAM,YACNqJ,KAAM,aACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOomE,WAAY,CACzB,CAAC,MAAM,YAAwBpmE,EAAO9O,OAChB,YAArB+O,EAAWE,OAAuBH,EAAO,SAAQ,EAAAI,EAAA,GAAWH,EAAWE,UAAU,GAT/D,EAWtB,EACDO,YACI,CACJkB,SAAU,WACVC,IAAK,EACL4O,KAAM,EACN3O,OAAQ,EAER3B,MAAOO,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQslE,OAAOC,aAAe,GAA0B,UAAvB5lE,EAAMK,QAAQ6L,KAAmBlM,EAAMK,QAAQwlE,OAAOC,MAAQ9lE,EAAMK,QAAQ8L,KAAK,OACjJI,WAAYvM,EAAMwM,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DuC,SAAUhP,EAAMwM,YAAYwC,SAASC,WAEvC,CAAC,KAAK,cAA0B,CAC9B3K,UAAW,oBAEb,CAAC,KAAK,eAA2B,CAC/B7E,MAAOO,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQslE,OAAOI,qBAAuB,GAA0B,UAAvB/lE,EAAMK,QAAQ6L,KAAmBlM,EAAMK,QAAQ8L,KAAK,KAAOnM,EAAMK,QAAQ8L,KAAK,QAExJ,CAAC,KAAK,iBAA4B,YAAwB,CACxDvI,QAAS,IAEX,CAAC,KAAK,kBAA6B,YAAwB,CACzDA,QAAS5D,EAAMI,KAAOJ,EAAMI,KAAKwD,QAAQoiE,oBAAsB,IAA0B,UAAvBhmE,EAAMK,QAAQ6L,KAAmB,IAAO,KAE5G,CAAC,MAAM,YAAwB,CAC7B6D,KAAM,QACNlN,MAAO,YAEP,EACF7C,QACAT,iBACI,OAAS,CACb,UAAW,CACT8B,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQ4F,OAAOsE,mBAAmBvK,EAAMI,KAAKC,QAAQ4F,OAAOM,iBAAkB,QAAMvG,EAAMK,QAAQ4F,OAAOuE,OAAQxK,EAAMK,QAAQ4F,OAAOM,cAEvL,uBAAwB,CACtBlF,gBAAiB,iBAGC,YAArB9B,EAAWE,OAAuB,CACnC,CAAC,KAAK,cAA0B,CAC9BA,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,KACvD,UAAW,CACTM,gBAAiBrB,EAAMI,KAAO,QAAQJ,EAAMI,KAAKC,QAAQd,EAAWE,OAAO4G,iBAAiBrG,EAAMI,KAAKC,QAAQ4F,OAAOM,iBAAkB,QAAMvG,EAAMK,QAAQd,EAAWE,OAAOsB,KAAMf,EAAMK,QAAQ4F,OAAOM,cACzM,uBAAwB,CACtBlF,gBAAiB,gBAGrB,CAAC,KAAK,eAA2B,CAC/B5B,MAAOO,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQslE,OAAO,GAAGpmE,EAAWE,sBAAwB,GAA0B,UAAvBO,EAAMK,QAAQ6L,MAAmB,QAAQlM,EAAMK,QAAQd,EAAWE,OAAOsB,KAAM,MAAQ,QAAOf,EAAMK,QAAQd,EAAWE,OAAOsB,KAAM,SAG/N,CAAC,KAAK,iBAA4B,YAAwB,CACxDM,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,UAG/DklE,IAAc,EAAA7mE,EAAA,IAAO,OAAQ,CACjC1J,KAAM,YACNqJ,KAAM,QACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO4mE,OAH3B,EAIjB,EACDlmE,YACI,CACJoM,OAAQ,OACRvJ,MAAO,OACPwJ,aAAc,EACdjL,QAAS,EACTmL,WAAYvM,EAAMwM,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEuC,SAAUhP,EAAMwM,YAAYwC,SAASC,WAEvC5N,gBAAiBrB,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQwlE,OAAOM,aAAe,GAA0B,UAAvBnmE,EAAMK,QAAQ6L,KAAmBlM,EAAMK,QAAQwlE,OAAOO,MAAQpmE,EAAMK,QAAQwlE,OAAOC,QAC7JliE,QAAS5D,EAAMI,KAAOJ,EAAMI,KAAKwD,QAAQyiE,YAAc,IAA0B,UAAvBrmE,EAAMK,QAAQ6L,KAAmB,IAAO,QAE9Fo6D,IAAc,EAAAlnE,EAAA,IAAO,OAAQ,CACjC1J,KAAM,YACNqJ,KAAM,QACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOinE,OAH3B,EAIjB,EACDvmE,YACI,CACJsN,WAAYtN,EAAMI,MAAQJ,GAAOuN,QAAQ,GACzClM,gBAAiB,eACjBwB,MAAO,GACPuJ,OAAQ,GACRC,aAAc,UA2IhB,OAzI4B,cAAiB,SAAgB7K,EAAS/D,GACpE,MAAMzL,GAAQ,EAAAyP,GAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,eAEF,UACFgM,EAAS,MACTjC,EAAQ,UAAS,KACjBoQ,GAAO,EAAK,KACZpN,EAAO,SAAQ,GACf+jE,GACEx0E,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCuN,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCyN,QACAoQ,OACApN,SAEIb,EApLkBrC,KACxB,MAAM,QACJqC,EAAO,KACPiO,EAAI,KACJpN,EAAI,MACJhD,EAAK,QACLuQ,EAAO,SACPjd,GACEwM,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQqQ,GAAQ,QAAO,EAAAnQ,EAAA,GAAWmQ,KAAS,QAAO,EAAAnQ,EAAA,GAAW+C,MACpEijE,WAAY,CAAC,aAAc,SAAQ,EAAAhmE,EAAA,GAAWD,KAAUuQ,GAAW,UAAWjd,GAAY,YAC1FwzE,MAAO,CAAC,SACRL,MAAO,CAAC,SACR11E,MAAO,CAAC,UAEJ8a,GAAkB,EAAAxJ,EAAA,GAAeD,EAAOwjE,GAAuBzjE,GACrE,OAAO,OAAS,CAAC,EAAGA,EAAS0J,EAAgB,EAmK7B,CAAkB/L,GAC5B2L,GAAoB,SAAKo7D,GAAa,CAC1C5kE,UAAWE,EAAQ2kE,MACnBhnE,WAAYA,IAEd,OAAoB,UAAM+lE,GAAY,CACpC5jE,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9B8kE,GAAIA,EACJjnE,WAAYA,EACZwJ,SAAU,EAAc,SAAK08D,IAAkB,OAAS,CACtDl6D,KAAM,WACNL,KAAMA,EACND,YAAaC,EACbzN,IAAKA,EACL8B,WAAYA,GACXrE,EAAO,CACR0G,SAAS,OAAS,CAAC,EAAGA,EAAS,CAC7BpC,KAAMoC,EAAQ8jE,iBAEA,SAAKO,GAAa,CAClCvkE,UAAWE,EAAQskE,MACnB3mE,WAAYA,MAGlB,I,wBC3NA,MAAM,GAAY,CAAC,QAAS,WAAY,WAAY,SAAU,WAAY,QAAS,iBAAkB,WAAY,SAAU,aAAc,QAAS,WAAY,QAAS,QAAS,YAAa,kBAAmB,qBAAsB,MAAO,UAAW,oBAAqB,UAAW,gBAAiB,cAAe,YAAa,YAAa,cAAe,cAejW,IAAIknE,GAgBJ,MAAM,GAAoBlnE,IACxB,MAAM,MACJkwB,EAAK,gBACLi3C,EAAe,WACfztB,EAAU,QACVr3C,GACErC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQ,cAAa,EAAAE,EAAA,GAAW+vB,KAAUwpB,GAAc,iBAAkBytB,GAAmB,cACpGvxC,QAAS,CAAC,gBAEZ,OAAO,EAAArzB,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,E,gBCrCzD,SAAS+kE,GAAQn2E,GACtB,OAAOqE,OAAOrE,GAAOyhC,MAAM,oBAAoB,IAAM,EACvD,CAGO,SAAS20C,GAAWx1E,GACzB,OAAOy1E,WAAWz1E,EACpB,CCZO,SAAS01E,GAAwB/nE,GACtC,OAAO,EAAAC,GAAA,GAAqB,cAAeD,EAC7C,EACwB,EAAAE,GAAA,GAAuB,cAAe,CAAC,OAAQ,OAAQ,cAAe,UAAW,WAAY,QAAS,OAAQ,eAAgB,aAAc,eCHpK,MAAM,GAAY,CAAC,YAAa,YAAa,YAAa,SAAU,QAAS,UAAW,SACxF,IACE8nE,GACAC,GACAC,GACAC,GAJEC,GAAIC,GAAKA,EAeb,MAcMC,IAAgB,SAAUN,KAAOA,GAAKI,EAAC;;;;;;;;;;;;IAavCG,IAAe,SAAUN,KAAQA,GAAMG,EAAC;;;;;;;;;;;;;IAcxCI,IAAe,EAAAnoE,EAAA,IAAO,OAAQ,CAClC1J,KAAM,cACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAAMF,EAAOC,EAAWqM,UAAmC,IAAzBrM,EAAWyZ,WAAuB1Z,EAAOC,EAAWyZ,WAAYzZ,EAAWioE,aAAeloE,EAAOmoE,aAAcloE,EAAWioE,cAAgBjoE,EAAWsD,OAASvD,EAAOooE,WAAYnoE,EAAWioE,cAAgBjoE,EAAW6M,QAAU9M,EAAOqoE,WAAW,GAPnR,EASlB,EACD3nE,QACAT,iBAEA,MAAMqoE,EAAajB,GAAQ3mE,EAAM+S,MAAM1G,eAAiB,KAClDw7D,EAAcjB,GAAW5mE,EAAM+S,MAAM1G,cAC3C,OAAO,OAAS,CACd5G,QAAS,QAETpE,gBAAiBrB,EAAMI,KAAOJ,EAAMI,KAAKC,QAAQynE,SAASC,IAAK,QAAM/nE,EAAMK,QAAQC,KAAKQ,QAAgC,UAAvBd,EAAMK,QAAQ6L,KAAmB,IAAO,KACzIE,OAAQ,SACgB,SAAvB7M,EAAWqM,SAAsB,CAClCqT,UAAW,EACX+oD,aAAc,EACd57D,OAAQ,OACRysB,gBAAiB,QACjBv0B,UAAW,iBACX+H,aAAc,GAAGw7D,IAAcD,KAAc9uE,KAAK21B,MAAMo5C,EAAc,GAAM,IAAM,KAAKD,IACvF,iBAAkB,CAChBzyC,QAAS,aAEa,aAAvB51B,EAAWqM,SAA0B,CACtCS,aAAc,OACU,YAAvB9M,EAAWqM,SAAyB,CACrCS,cAAerM,EAAMI,MAAQJ,GAAO+S,MAAM1G,cACzC9M,EAAWioE,aAAe,CAC3B,QAAS,CACP5kE,WAAY,WAEbrD,EAAWioE,cAAgBjoE,EAAWsD,OAAS,CAChDE,SAAU,eACTxD,EAAWioE,cAAgBjoE,EAAW6M,QAAU,CACjDA,OAAQ,QACR,IACD,EACD7M,gBAC6B,UAAzBA,EAAWyZ,YAAyB,SAAIiuD,KAAQA,GAAME,EAAC;mBAC1C;OACXE,MAAgB,EACtB9nE,aACAS,WAC6B,SAAzBT,EAAWyZ,YAAwB,SAAIkuD,KAAQA,GAAMC,EAAC;;;;;;;;qBAQvC;;;;YAIT;;;;;;;;;;;OAWJG,IAAetnE,EAAMI,MAAQJ,GAAOK,QAAQ4F,OAAOC,SAuF3D,OAtF8B,cAAiB,SAAkB1E,EAAS/D,GACxE,MAAMzL,GAAQ,EAAAyP,GAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,iBAEF,UACFsjB,EAAY,QAAO,UACnBtX,EAAS,UACTC,EAAY,OAAM,OAClByK,EAAM,MACNzC,EAAK,QACLiC,EAAU,OAAM,MAChB/I,GACE7Q,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCuN,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCgnB,YACArX,YACAiK,UACA47D,YAAaj3D,QAAQrV,EAAM6N,YAEvBnH,EAxIkBrC,KACxB,MAAM,QACJqC,EAAO,QACPgK,EAAO,UACPoN,EAAS,YACTwuD,EAAW,MACX3kE,EAAK,OACLuJ,GACE7M,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQoM,EAASoN,EAAWwuD,GAAe,eAAgBA,IAAgB3kE,GAAS,aAAc2kE,IAAgBp7D,GAAU,eAErI,OAAO,EAAAtK,EAAA,GAAeD,EAAOilE,GAAyBllE,EAAQ,EA4H9C,CAAkBrC,GAClC,OAAoB,SAAKgoE,IAAc,OAAS,CAC9CvlE,GAAIL,EACJlE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9BnC,WAAYA,GACXrE,EAAO,CACRyO,OAAO,OAAS,CACd9G,QACAuJ,UACCzC,KAEP,ICpKA,MAAM,GAAY,CAAC,QAAS,QAAS,QAAS,gBAUxC,GAAoBpK,IACxB,MAAM,MACJkwB,EAAK,QACL7tB,GACErC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQ,eAAgB,cAAa,EAAAE,EAAA,GAAW+vB,OAEzD,OAAO,EAAA3tB,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,E,gBClBhE,MAAM,GAAY,CAAC,aAmBbqmE,IAA8B,EAAA7oE,EAAA,IAAO,MAAO,CAChD1J,KAAM,cACNqJ,KAAM,sBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO4oE,qBAHX,EAIjC,KAAM,CACPziE,QAAS,OACT7C,WAAY,SACZC,MAAO,MAEIslE,GAAuC,cAAiB,SAAiCn2E,EAAOyL,GAC3G,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EA7BkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,wBAEoB,IAAyBoC,EAAQ,EAsB9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAKqmE,IAA6B,OAAS,CAC7DxqE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,GACL,IC9BM,GAAoBqE,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZoJ,KAAM,CAAC,eAEoB,IAAyBtJ,EAAQ,ECpBhE,MAAM,GAAY,CAAC,WAAY,gBAAiB,OAAQ,KAAM,aAAc,YAAa,YAQnFwmE,GAAuC,cAAiB,SAAiCp2E,EAAOyL,GACpG,MAAM,SACJm9B,EAAQ,KACRtmC,EAAI,GACJX,EAAE,WACF00E,EAAU,UACV3mE,EAAS,SACTqH,GACE/W,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7Cs2E,EAAoB,eAAkBtyE,KACtC,SAASA,EAAMqF,MACjBrF,EAAMuF,kBAGJ,SAAcvF,EAAMqF,MACtBu/B,EAAS5kC,EACX,GACC,CAAC4kC,IACJ,OAAoB,SAAKO,GAAA,GAAU,OAAS,CAC1CxnC,GAAIA,EACJ8J,IAAKA,EACLiE,WAAW,OAAK,aAAsBA,GACtC,kBAAmB2mE,EACnBltE,UAAWmtE,EACXj5D,UAAW/a,GACV4G,EAAO,CACR6N,SAAUA,IAEd,IChCMw/D,GAAsBv2E,IAC1B,MAAM,QACJkL,GACElL,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ6zD,EAAc,eAAkBxyE,IACpCkH,EAAQlH,GACR4e,EAAOljB,QAAQiiE,gBAAgB,aAAkC,GAChE,CAAC/+C,EAAQ1X,IAEZ,OAAIwX,EAAU+zD,sBACL,MAGW,SAAKzxC,GAAA,EAAU,CACjC95B,QAASsrE,EACTz/D,SAAU6L,EAAOljB,QAAQ+5B,cAAc,0BACvC,ECnBEi9C,GAAqB12E,IACzB,MAAM,OACJumC,EAAM,QACNr7B,GACElL,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZg0D,EAAa,eAAkB3yE,IACnCkH,EAAQlH,GACR4e,EAAOljB,QAAQgjE,gBAA0B,MAAVn8B,OAAiB,EAASA,EAAOxF,MAAM,GACrE,CAACne,EAAkB,MAAV2jB,OAAiB,EAASA,EAAOxF,MAAO71B,IAEpD,OAAIwX,EAAUk0D,qBAAmC,MAAVrwC,IAAkBA,EAAOiD,WACvD,MAGW,SAAKxE,GAAA,EAAU,CACjC95B,QAASyrE,EACT5/D,SAAU6L,EAAOljB,QAAQ+5B,cAAc,qBACvC,EClBEo9C,GAAsB72E,IAC1B,MAAM,OACJumC,EAAM,QACNr7B,GACElL,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZm0D,EAAa,WAIb/1E,EAAsC,KAHrB,QAAqC6hB,GACrBjkB,QAAOy6D,IAAiC,IAA1BA,EAAIzvB,oBAExBvqC,OAC3B23E,EAAe,eAAkB/yE,IAMjCjD,IAIJmK,EAAQlH,GAER8yE,EAAWp3E,QAAUuwB,YAAW,KAC9BrN,EAAOljB,QAAQ85D,oBAA8B,MAAVjzB,OAAiB,EAASA,EAAOxF,OAAO,EAAM,GAChF,KAAI,GACN,CAACne,EAAkB,MAAV2jB,OAAiB,EAASA,EAAOxF,MAAO71B,EAASnK,IAK7D,OAJA,aAAgB,IACP,IAAMwvB,aAAaumD,EAAWp3E,UACpC,IAECgjB,EAAU+zD,wBAIU,IAApBlwC,EAAOywC,SAHF,MAOW,SAAKhyC,GAAA,EAAU,CACjC95B,QAAS6rE,EACTh2E,SAAUA,EACVgW,SAAU6L,EAAOljB,QAAQ+5B,cAAc,yBACvC,EC1CJ,SAASw9C,GAAkBj3E,GACzB,IAAIk3E,EAEJ,MAAM,OACJ3wC,EAAM,QACNr7B,GACElL,EACE4iB,GAAS,SACTmxC,GAAY,EAAAjxC,EAAA,GAAgBF,EAAQ,OACpCF,GAAY,EAAAC,EAAA,KACZ+hD,EAA+D,OAA/CwS,EAAuB3wC,EAAOm+B,cAAwBwS,EAAuBx0D,EAAUgiD,aACvGyS,EAAgB,WAAc,KAClC,IAAK5wC,EACH,OAAO,KAGT,MAAMy9B,EAAWjQ,EAAU96B,MAAKoF,GAAQA,EAAK0C,QAAUwF,EAAOxF,QAC9D,OAAmB,MAAZijC,OAAmB,EAASA,EAASW,IAAI,GAC/C,CAACp+B,EAAQwtB,IACNqjB,EAAsB,eAAkBpzE,IAC5CkH,EAAQlH,GACR,MAAMqC,EAAYrC,EAAM+F,cAActD,aAAa,eAAiB,KACpEmc,EAAOljB,QAAQqlE,WAAWx+B,EAAQlgC,EAAU,GAC3C,CAACuc,EAAQ2jB,EAAQr7B,IAEpB,OAAKq7B,GAAWA,EAAOgD,UAIH,UAAM,WAAgB,CACxCxyB,SAAU,CAAC2tD,EAAapnC,SAAS,OAAqB,SAAK0H,GAAA,EAAU,CACnE95B,QAASksE,EACTr2E,SAA2B,MAAjBo2E,EACVpgE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,sBACpC,KAAMirC,EAAapnC,SAAS,QAAsB,SAAK0H,GAAA,EAAU,CACpE95B,QAASksE,EACT,aAAc,MACdr2E,SAA4B,QAAlBo2E,EACVpgE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,uBACpC,KAAMirC,EAAapnC,SAAS,SAAuB,SAAK0H,GAAA,EAAU,CACrE95B,QAASksE,EACT,aAAc,OACdr2E,SAA4B,SAAlBo2E,EACVpgE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,wBACpC,QAlBE,IAoBX,CC9CA,MAAM49C,GAA8B,cAAiB,SAAwBr3E,EAAOyL,GAClF,MAAM,SACJm9B,EAAQ,cACRzD,GACEnlC,EACE4iB,GAAS,SACT00D,EAAiB,EAAc,SAAKL,GAAmB,CAC3D/rE,QAAS09B,EACTrC,OAAQpB,KAIV,SAAKuxC,GAAoB,CACvBxrE,QAAS09B,EACTrC,OAAQpB,KACO,SAAK0xC,GAAqB,CACzC3rE,QAAS09B,EACTrC,OAAQpB,KACO,SAAKoxC,GAAqB,CACzCrrE,QAAS09B,EACTrC,OAAQpB,KAEJoyC,EAAsB30D,EAAOljB,QAAQk4B,6BAA6B,aAAc0/C,EAAgBnyC,GACtG,OAAoB,SAAKixC,IAAyB,OAAS,CACzD3qE,IAAKA,GACJzL,EAAO,CACR+W,SAAUwgE,EAAoB1gE,KAAI,CAACmyB,EAAQ9jC,IAAuB,eAAmB8jC,EAAQ,CAC3F3/B,IAAKnE,EACLgG,QAAS09B,EACTrC,OAAQpB,QAGd,ICxCM,GAAY,CAAC,YAAa,WAAY,mBAqBtCqyC,IAAmB,EAAApqE,EAAA,IAAO,MAAO,CACrC1J,KAAM,cACNqJ,KAAM,WACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOyzC,UAHtB,EAItB,EACD/yC,YACI,CACJ2F,WAAY,SACZF,QAAS,OACT3C,OAAQ9C,EAAMyT,QAAQ,EAAG,OAErBg2D,GAA4B,cAAiB,SAAsBz3E,EAAOyL,GAC9E,MAAM,UACJiE,EAAS,SACTqxC,EAAQ,gBACR11B,GACErrB,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SAKThT,EAlCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,aAEoB,IAAyBoC,EAAQ,EA2B9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAIrB,GAAiB,IAAbmxC,EACF,OAAO,KAGT,MAAMzyC,EAAO+c,EAAkB01B,EAAWn+B,EAAOljB,QAAQ+5B,cAAc,yBAA7B7W,CAAuDyI,EAAiB01B,GAAYA,EAASjjB,iBACvI,OAAoB,UAAM05C,IAAkB,OAAS,CACnD/rE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,EAAO,CACR6N,SAAU,CAAC6L,EAAOljB,QAAQ+5B,cAAc,mBAAoB,IAAKnrB,KAErE,IC1DM,GAAY,CAAC,YAAa,oBAqB1BopE,IAA2B,EAAAtqE,EAAA,IAAO,MAAO,CAC7C1J,KAAM,cACNqJ,KAAM,mBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOqqE,kBAHd,EAI9B,EACD3pE,YACI,CACJ2F,WAAY,SACZF,QAAS,OACT3C,OAAQ9C,EAAMyT,QAAQ,EAAG,GACzB7Q,WAAY,SACZC,MAAO,EACPuJ,OAAQ,EACR,CAACpM,EAAM+F,YAAYC,GAAG,OAAQ,CAC5BpD,WAAY,UACZC,MAAO,OACPuJ,OAAQ,YAGNw9D,GAAoC,cAAiB,SAA8B53E,EAAOyL,GAC9F,MAAM,UACJiE,EAAS,iBACTioE,GACE33E,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SAKThT,EAzCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,qBAEoB,IAAyBoC,EAAQ,EAkC9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGfioE,EAAkBj1D,EAAOljB,QAAQ+5B,cAAc,oBAA7B7W,CAAkD+0D,GAC1E,OAAoB,SAAKD,IAA0B,OAAS,CAC1DjsE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,EAAO,CACR6N,SAAU8gE,IAEd,IC5DM,GAAY,CAAC,aAoBbC,IAA0B,EAAA1qE,EAAA,IAAO,MAAO,CAC5C1J,KAAM,cACNqJ,KAAM,kBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOyqE,iBAHf,EAI7B,EACD/pE,YAGO,CACLyF,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZH,UAAW,GAEXwkE,UAAW,aAP8B,UAAvBhqE,EAAMK,QAAQ6L,MAAmB,SAAQ,QAAMlM,EAAMK,QAAQyO,QAAS,GAAI,MAAQ,SAAO,QAAM9O,EAAMK,QAAQyO,QAAS,GAAI,WAU1Im7D,GAAmC,cAAiB,SAA6Bj4E,EAAOyL,GAC5F,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EArCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,oBAEoB,IAAyBoC,EAAQ,EA8B9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAKkoE,IAAyB,OAAS,CACzDrsE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,GACL,ICxCMgvE,GAA0B,cAAiB,SAAoBl4E,EAAOyL,GAC1E,IAAIsZ,EAEJ,MAAMnC,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ0/B,GAAwB,EAAAv/B,EAAA,GAAgBF,EAAQ,MAChD+0D,GAAmB,EAAA70D,EAAA,GAAgBF,EAAQ,OAC3CgiC,GAA0B,EAAA9hC,EAAA,GAAgBF,EAAQ,MAClDu1D,GAA2Bz1D,EAAU01D,4BAA8BT,EAAmB,GAAiB,SAAKC,GAAsB,CACtID,iBAAkBA,KACF,SAAK,MAAO,CAAC,GACzBU,EAAmB31D,EAAU41D,oBAAuB51D,EAAUu2B,WAG/D,MAHyF,SAAKw+B,GAAc,CAC/G12B,SAAUsB,EACVh3B,gBAAiBu5B,IAGb2zB,EAAoB71D,EAAUu2B,aAAev2B,EAAU81D,sBAAwB91D,EAAUsC,WAAWyzD,aAA2B,SAAK/1D,EAAUsC,WAAWyzD,YAAY,OAAS,CAAC,EAA0D,OAAtD1zD,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBk0B,aAErR,OAAoB,UAAMg/B,IAAqB,OAAS,CACtDxsE,IAAKA,GACJzL,EAAO,CACR+W,SAAU,CAACohE,EAAyBE,EAAiBE,KAEzD,IChCaG,GAA0B,cAAiB,SAAoB14E,EAAOyL,GACjF,IAAIsZ,EAAuByG,EAE3B,MAAM9I,GAAY,EAAAC,EAAA,KAClB,OAAoB,UAAM,OAAO,OAAS,CACxClX,IAAKA,GACJzL,EAAO,CACR+W,SAAU,EAAc,SAAK2L,EAAUsC,WAAW2zD,kBAAkB,OAAS,CAAC,EAA0D,OAAtD5zD,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB6zD,mBAAoBl2D,EAAUsC,WAAW6zD,UAAwB,SAAKn2D,EAAUsC,WAAW6zD,SAAS,OAAS,CAAC,EAA2D,OAAvDrtD,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBstD,aAElY,ICLaC,GAAoC,cAAiB,SAA8B/4E,EAAOyL,GACrG,IAAIutE,EAAuBj0D,EAAuByG,EAElD,MAAM5I,GAAS,SACTgqB,GAAU,EAAA9pB,EAAA,GAAgBF,EAAQ,MAClCF,GAAY,EAAAC,EAAA,KACZ4+C,GAAuB,EAAAz+C,EAAA,GAAgBF,EAAQ,MAC/Cq2D,EAAer2D,EAAOljB,QAAQk4B,6BAA6B,kBAAmB,KAAyE,OAAlEohD,EAAwBzX,EAAqBC,kBAA4BwX,EAAwB,cAC5L,OAAoB,SAAKt2D,EAAUsC,WAAWk0D,OAAO,OAAS,CAC5DztE,IAAKA,EACLuE,GAAI0S,EAAUsC,WAAWmiB,WACzB7kC,KAAMsqC,EAAQxtC,OAAS,GAAKmiE,EAAqBj/D,MACO,OAAtDyiB,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBo0D,MAAOn5E,EAA+D,OAAvDwrB,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuB6b,WAAY,CACvNtwB,SAAUkiE,IAEd,ICtBO,SAASG,GAAgCrsE,GAC9C,OAAO,EAAAC,GAAA,GAAqB,sBAAuBD,EACrD,EACgC,EAAAE,GAAA,GAAuB,sBAAuB,CAAC,OAAQ,cAAe,gBAAiB,eAAgB,iBAAkB,MAAO,SAAU,oBAAqB,sBAAuB,wBCHtN,MAAM,GAAY,CAAC,YAAa,QAAS,gBAAiB,OAAQ,QAAS,YAAa,QAAS,WACjG,IACE,GACA,GACA,GACA,GAJE,GAAImoE,GAAKA,EAgBb,MAAMiE,GAAO,GACPC,IAAyB,SAAU,KAAO,GAAK,EAAC;;;;;;;;IAShDC,IAAuB,SAAU,KAAQ,GAAM,EAAC;;;;;;;;;;;;;;;IA8BhDC,IAAuB,EAAApsE,EAAA,IAAO,OAAQ,CAC1C1J,KAAM,sBACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAAMF,EAAOC,EAAWqM,SAAUtM,EAAO,SAAQ,EAAAI,EAAA,GAAWH,EAAWE,UAAU,GAPvE,EAS1B,EACDF,aACAS,YACI,OAAS,CACbyF,QAAS,gBACe,gBAAvBlG,EAAWqM,SAA6B,CACzCW,WAAYvM,EAAMwM,YAAYC,OAAO,cACf,YAArBlN,EAAWE,OAAuB,CACnCA,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQd,EAAWE,OAAOsB,SACrD,EACFxB,gBAC2B,kBAAvBA,EAAWqM,UAA+B,SAAI,KAAQ,GAAM,EAAC;mBAChD;OACX0/D,MACFG,IAAsB,EAAArsE,EAAA,IAAO,MAAO,CACxC1J,KAAM,sBACNqJ,KAAM,MACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOosE,KAHnB,CAIzB,CACDjmE,QAAS,UAGLkmE,IAAyB,EAAAvsE,EAAA,IAAO,SAAU,CAC9C1J,KAAM,sBACNqJ,KAAM,SACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOssE,OAAQtsE,EAAO,UAAS,EAAAI,EAAA,GAAWH,EAAWqM,YAAarM,EAAWssE,eAAiBvsE,EAAOwsE,oBAAoB,GAPtG,EAS5B,EACDvsE,aACAS,YACI,OAAS,CACb+rE,OAAQ,gBACgB,gBAAvBxsE,EAAWqM,SAA6B,CACzCW,WAAYvM,EAAMwM,YAAYC,OAAO,sBACb,kBAAvBlN,EAAWqM,SAA+B,CAE3CogE,gBAAiB,cACjBC,iBAAkB,MAChB,EACF1sE,gBAC2B,kBAAvBA,EAAWqM,UAAgCrM,EAAWssE,gBAAiB,SAAI,KAAQ,GAAM,EAAC;mBAC7E;OACXN,MAuIR,OA9HsC,cAAiB,SAA0B/pE,EAAS/D,GACxF,MAAMzL,GAAQ,EAAAyP,GAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,yBAEF,UACFgM,EAAS,MACTjC,EAAQ,UAAS,cACjBosE,GAAgB,EAAK,KACrBppE,EAAO,GAAE,MACTkH,EAAK,UACLuiE,EAAY,IAAG,MACfl4E,EAAQ,EAAC,QACT4X,EAAU,iBACR5Z,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCuN,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCyN,QACAosE,gBACAppE,OACAypE,YACAl4E,QACA4X,YAEIhK,EAtGkBrC,KACxB,MAAM,QACJqC,EAAO,QACPgK,EAAO,MACPnM,EAAK,cACLosE,GACEtsE,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQoM,EAAS,SAAQ,EAAAlM,EAAA,GAAWD,MAC3CisE,IAAK,CAAC,OACNE,OAAQ,CAAC,SAAU,UAAS,EAAAlsE,EAAA,GAAWkM,KAAYigE,GAAiB,wBAEtE,OAAO,EAAA/pE,EAAA,GAAeD,EAAOupE,GAAiCxpE,EAAQ,EA0FtD,CAAkBrC,GAC5B4sE,EAAc,CAAC,EACfC,EAAY,CAAC,EACb13D,EAAY,CAAC,EACnB,GAAgB,gBAAZ9I,EAA2B,CAC7B,MAAMygE,EAAgB,EAAIvzE,KAAKwzE,KAAOjB,GAAOa,GAAa,GAC1DC,EAAYH,gBAAkBK,EAAcE,QAAQ,GACpD73D,EAAU,iBAAmB5b,KAAK21B,MAAMz6B,GACxCm4E,EAAYF,iBAAmB,KAAK,IAAMj4E,GAAS,IAAMq4E,GAAeE,QAAQ,OAChFH,EAAU9nE,UAAY,gBACxB,CACA,OAAoB,SAAKknE,IAAsB,OAAS,CACtD9pE,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9BiI,OAAO,OAAS,CACd9G,MAAOJ,EACP2J,OAAQ3J,GACP2pE,EAAWziE,GACdpK,WAAYA,EACZ9B,IAAKA,EACLG,KAAM,eACL8W,EAAWxZ,EAAO,CACnB6N,UAAuB,SAAK0iE,GAAqB,CAC/C/pE,UAAWE,EAAQ8pE,IACnBnsE,WAAYA,EACZitE,QAAS,cACTzjE,UAAuB,SAAK4iE,GAAwB,CAClDjqE,UAAWE,EAAQgqE,OACnBjiE,MAAOwiE,EACP5sE,WAAYA,EACZktE,GAAIpB,GACJqB,GAAIrB,GACJsB,GAAItB,GAAOa,GAAa,EACxBU,KAAM,OACNC,YAAaX,QAIrB,ICtLA,MAAM,GAAY,CAAC,aAoBbY,IAAkB,EAAA1tE,EAAA,IAAO,MAAO,CACpC1J,KAAM,cACNqJ,KAAM,UACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOie,SAHvB,EAIrB,EACDvd,YACI,CACJkB,SAAU,WACVC,IAAK,EACLC,OAAQ,EAERyB,MAAO,OACPuJ,OAAQ,OACRhG,cAAe,OACfX,QAAS,OACTkO,UAAW,SACXhO,WAAY,SACZD,eAAgB,SAChBrE,iBAAiB,QAAMrB,EAAMK,QAAQiB,WAAW7L,QAASuK,EAAMK,QAAQ4F,OAAOE,qBAE1E4mE,GAA2B,cAAiB,SAAqB/6E,EAAOyL,GAC5E,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EAxCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,YAEoB,IAAyBoC,EAAQ,EAiC9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAKkrE,IAAiB,OAAS,CACjDrvE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,GACL,ICnDM8xE,GAAkC,cAAiB,SAA4Bh7E,EAAOyL,GAC1F,OAAoB,SAAKsvE,IAAa,OAAS,CAC7CtvE,IAAKA,GACJzL,EAAO,CACR+W,UAAuB,SAAK,GAAkB,CAAC,KAEnD,ICNMkkE,GAAiC,cAAiB,SAA2Bj7E,EAAOyL,GACxF,MACM2hE,GADS,SACY1tE,QAAQ+5B,cAAc,eACjD,OAAoB,SAAKshD,IAAa,OAAS,CAC7CtvE,IAAKA,GACJzL,EAAO,CACR+W,SAAUq2D,IAEd,I,gBCLA,OAJkC,kBCIlC,OAJsC,kBCH/B,SAAS8N,GAAyBnuE,GACvC,OAAO,EAAAC,GAAA,GAAqB,eAAgBD,EAC9C,CAEA,QADyB,EAAAE,GAAA,GAAuB,eAAgB,CAAC,OAAQ,OAAQ,OAAQ,SAAU,YAAa,aAAc,kBAAmB,cAAe,YAAa,cAAe,aAAc,eAAgB,iBCH1N,MAAM,GAAY,CAAC,QAAS,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,WA2B7FkuE,IAAgB,EAAA/tE,EAAA,IAAO,KAAM,CACjC1J,KAAM,eACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAACsN,EAAOE,KAAMF,EAAOC,EAAWqM,SAAUtM,EAAO,QAAO,EAAAI,EAAA,GAAWH,EAAWkD,SAAiC,WAAvBlD,EAAW6D,SAAwB9D,EAAO,WAAU,EAAAI,EAAA,GAAWH,EAAW6D,YAAkC,YAArB7D,EAAWkwB,OAAuBnwB,EAAO,SAAQ,EAAAI,EAAA,GAAWH,EAAWkwB,UAAWlwB,EAAW6tE,cAAgB9tE,EAAO8tE,aAAa,GAPrS,EASnB,EACDptE,QACAT,iBACI,OAAS,CAAC,EAAGS,EAAMS,WAAWuS,MAAO,CACzCvN,QAAS,aACTmH,cAAe,UAGfsC,aAAclP,EAAMI,KAAO,aAAaJ,EAAMI,KAAKC,QAAQgtE,UAAU1gE,SAAW,kBACrD,UAAvB3M,EAAMK,QAAQ6L,MAAmB,SAAQ,QAAMlM,EAAMK,QAAQyO,QAAS,GAAI,MAAQ,SAAO,QAAM9O,EAAMK,QAAQyO,QAAS,GAAI,OAC9HC,UAAW,OACX3L,QAAS,IACe,SAAvB7D,EAAWqM,SAAsB,CAClCnM,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKQ,QAC1CZ,WAAYF,EAAMS,WAAWI,QAAQ,IACrCH,WAAYV,EAAMS,WAAWE,kBACL,SAAvBpB,EAAWqM,SAAsB,CAClCnM,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKQ,SAClB,WAAvBvB,EAAWqM,SAAwB,CACpCnM,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKC,UAC1CL,WAAYF,EAAMS,WAAWI,QAAQ,IACrCD,SAAUZ,EAAMS,WAAWI,QAAQ,KACd,UAApBtB,EAAWkD,MAAoB,CAChCW,QAAS,WACT,CAAC,KAAK,sBAAqC,CACzCP,MAAO,GAEPO,QAAS,gBACT,QAAS,CACPA,QAAS,KAGW,aAAvB7D,EAAW6D,SAA0B,CACtCP,MAAO,GAEPO,QAAS,aACe,SAAvB7D,EAAW6D,SAAsB,CAClCA,QAAS,GACa,SAArB7D,EAAWkwB,OAAoB,CAChC1gB,UAAW,QACW,WAArBxP,EAAWkwB,OAAsB,CAClC1gB,UAAW,UACW,UAArBxP,EAAWkwB,OAAqB,CACjC1gB,UAAW,QACXkE,cAAe,eACO,YAArB1T,EAAWkwB,OAAuB,CACnC1gB,UAAW,WACVxP,EAAW6tE,cAAgB,CAC5BlsE,SAAU,SACVC,IAAK,EACLC,OAAQ,EACRC,iBAAkBrB,EAAMI,MAAQJ,GAAOK,QAAQiB,WAAW7L,YA0H5D,ICjNI63E,GAAeC,GAAgBC,GAAqBC,GAAoBC,GAAqBC,GAAsBC,GAAiBC,GDiNxI,GAnH+B,cAAiB,SAAmBrsE,EAAS/D,GAC1E,MAAMzL,GAAQ,EAAAyP,GAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,kBAEF,MACF+5B,EAAQ,UAAS,UACjB/tB,EACAC,UAAWmsE,EACX1qE,QAAS2qE,EACTC,MAAOC,EACPxrE,KAAMyrE,EAAQ,cACd/E,EACAv9D,QAASuiE,GACPn8E,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCo8E,EAAQ,aAAiB,IACzBC,EAAY,aAAiB,IAC7BC,EAAaD,GAAmC,SAAtBA,EAAUziE,QAC1C,IAAIjK,EAEFA,EADEmsE,IAGUQ,EAAa,KAAO,MAElC,IAAIN,EAAQC,EAGM,OAAdtsE,EACFqsE,OAAQxwE,GACEwwE,GAASM,IACnBN,EAAQ,OAEV,MAAMpiE,EAAUuiE,GAAeE,GAAaA,EAAUziE,QAChDrM,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCy9B,QACA9tB,YACAyB,QAAS2qE,IAAgBK,GAASA,EAAMhrE,QAAUgrE,EAAMhrE,QAAU,UAClEX,KAAMyrE,IAAaE,GAASA,EAAM3rE,KAAO2rE,EAAM3rE,KAAO,UACtD0mE,gBACAiE,aAA0B,SAAZxhE,GAAsBwiE,GAASA,EAAMhB,aACnDxhE,YAEIhK,EA5HkBrC,KACxB,MAAM,QACJqC,EAAO,QACPgK,EAAO,MACP6jB,EAAK,QACLrsB,EAAO,KACPX,EAAI,aACJ2qE,GACE7tE,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQoM,EAASwhE,GAAgB,eAA0B,YAAV39C,GAAuB,SAAQ,EAAA/vB,EAAA,GAAW+vB,KAAsB,WAAZrsB,GAAwB,WAAU,EAAA1D,EAAA,GAAW0D,KAAY,QAAO,EAAA1D,EAAA,GAAW+C,OAEzL,OAAO,EAAAX,EAAA,GAAeD,EAAOqrE,GAA0BtrE,EAAQ,EAgH/C,CAAkBrC,GAClC,IAAIgvE,EAAW,KAIf,OAHIpF,IACFoF,EAA6B,QAAlBpF,EAA0B,YAAc,eAEjC,SAAKgE,IAAe,OAAS,CAC/CnrE,GAAIL,EACJlE,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9B,YAAa6sE,EACbP,MAAOA,EACPzuE,WAAYA,GACXrE,GACL,I,2DEjJA,IAAe,EAAA6O,GAAA,IAA4B,SAAK,OAAQ,CACtDlL,EAAG,+DACD,YCFJ,IAAe,EAAAkL,GAAA,IAA4B,SAAK,OAAQ,CACtDlL,EAAG,+DACD,aFNJ,MAAM,GAAY,CAAC,sBAAuB,QAAS,mBAAoB,sBAAuB,eAAgB,OAAQ,cAAe,kBAAmB,kBA0HxJ,OA3G4C,cAAiB,SAAgC7M,EAAOyL,GAClG,MAAM,oBACF+wE,EAAmB,MACnBrO,EAAK,iBACLsO,EAAgB,oBAChBC,EAAmB,aACnB73B,EAAY,KACZtB,EAAI,YACJo5B,EAAW,gBACXC,EAAe,eACfC,GACE78E,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCgO,GAAQ,EAAA8uE,GAAA,KAad,OAAoB,UAAM,OAAO,OAAS,CACxCrxE,IAAKA,GACJvC,EAAO,CACR6N,SAAU,CAAC6lE,IAAgC,SAAK5qE,GAAA,EAAY,CAC1D9G,QAhB+BlH,IACjC6gD,EAAa7gD,EAAO,EAAE,EAgBpBjD,SAAmB,IAATwiD,EACV,aAAck5B,EAAiB,QAASl5B,GACxC9rC,MAAOglE,EAAiB,QAASl5B,GACjCxsC,SAA8B,QAApB/I,EAAM3H,UAAsBi1E,KAAkBA,IAA6B,SAAKyB,GAAc,CAAC,IAAMxB,KAAmBA,IAA8B,SAAKyB,GAAe,CAAC,OACtK,SAAKhrE,GAAA,GAAY,OAAS,CACzC9G,QAnB0BlH,IAC5B6gD,EAAa7gD,EAAOu/C,EAAO,EAAE,EAmB3BxiD,SAAmB,IAATwiD,EACV91C,MAAO,UACP,aAAcgvE,EAAiB,WAAYl5B,GAC3C9rC,MAAOglE,EAAiB,WAAYl5B,IACnCi5B,EAAqB,CACtBzlE,SAA8B,QAApB/I,EAAM3H,UAAsBm1E,KAAwBA,IAAmC,SAAKyB,GAAA,EAAoB,CAAC,IAAMxB,KAAuBA,IAAkC,SAAKyB,GAAA,EAAmB,CAAC,QACnM,SAAKlrE,GAAA,GAAY,OAAS,CAC1C9G,QAxB0BlH,IAC5B6gD,EAAa7gD,EAAOu/C,EAAO,EAAE,EAwB3BxiD,UAAqB,IAAXotE,GAAe5qB,GAAQz8C,KAAKq8C,KAAKgrB,EAAQwO,GAAe,EAClElvE,MAAO,UACP,aAAcgvE,EAAiB,OAAQl5B,GACvC9rC,MAAOglE,EAAiB,OAAQl5B,IAC/Bm5B,EAAqB,CACtB3lE,SAA8B,QAApB/I,EAAM3H,UAAsBq1E,KAAwBA,IAAmC,SAAKwB,GAAA,EAAmB,CAAC,IAAMvB,KAAyBA,IAAoC,SAAKsB,GAAA,EAAoB,CAAC,OACpNJ,IAA+B,SAAK7qE,GAAA,EAAY,CACnD9G,QA7B8BlH,IAChC6gD,EAAa7gD,EAAO8C,KAAKs4B,IAAI,EAAGt4B,KAAKq8C,KAAKgrB,EAAQwO,GAAe,GAAG,EA6BlE57E,SAAUwiD,GAAQz8C,KAAKq8C,KAAKgrB,EAAQwO,GAAe,EACnD,aAAcF,EAAiB,OAAQl5B,GACvC9rC,MAAOglE,EAAiB,OAAQl5B,GAChCxsC,SAA8B,QAApB/I,EAAM3H,UAAsBu1E,KAAoBA,IAA+B,SAAKoB,GAAe,CAAC,IAAMnB,KAAmBA,IAA8B,SAAKkB,GAAc,CAAC,SAG/L,IG3EO,SAASI,GAA+BpwE,GAC7C,OAAO,EAAAC,GAAA,GAAqB,qBAAsBD,EACpD,CAEA,ICJIqwE,GDIJ,IAD+B,EAAAnwE,GAAA,GAAuB,qBAAsB,CAAC,OAAQ,UAAW,SAAU,cAAe,aAAc,SAAU,aAAc,QAAS,WAAY,gBAAiB,YCFrM,MAAM,GAAY,CAAC,mBAAoB,sBAAuB,YAAa,UAAW,YAAa,QAAS,mBAAoB,qBAAsB,mBAAoB,sBAAuB,eAAgB,sBAAuB,OAAQ,cAAe,qBAAsB,cAAe,kBAAmB,kBAmBjTowE,IAAsB,EAAAjwE,EAAA,IAAO,GAAW,CAC5C1J,KAAM,qBACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOE,MAHnB,EAIzB,EACDQ,YACI,CACJgF,SAAU,OACVvF,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKQ,QAC1CF,SAAUZ,EAAMS,WAAWI,QAAQ,IAEnC,eAAgB,CACduC,QAAS,OAGPksE,IAAyB,EAAAlwE,EAAA,IAAOyrE,GAAA,EAAS,CAC7Cn1E,KAAM,qBACNqJ,KAAM,UACNM,kBAAmB,CAACrN,EAAOsN,KAAW,OAAS,CAC7C,CAAC,MAAM,cAAmCA,EAAOiwE,SAChDjwE,EAAOwrE,UALmB,EAM5B,EACD9qE,YACI,CACJwF,UAAW,GACXvE,aAAc,EACd,CAAC,GAAGjB,EAAM+F,YAAYC,GAAG,sCAAuC,CAC9DR,UAAW,IAEb,CAACxF,EAAM+F,YAAYC,GAAG,OAAQ,CAC5BR,UAAW,GACXvE,aAAc,GAEhB,CAAC,MAAM,cAAmC,CACxCskE,WAAY,EACZ14D,WAAY,QAGV2iE,IAAwB,EAAApwE,EAAA,IAAO,MAAO,CAC1C1J,KAAM,qBACNqJ,KAAM,SACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOmwE,QAHjB,CAI3B,CACD38D,KAAM,aAEF48D,IAA6B,EAAAtwE,EAAA,IAAO,IAAK,CAC7C1J,KAAM,qBACNqJ,KAAM,cACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOqwE,aAHZ,EAIhC,EACD3vE,YACI,OAAS,CAAC,EAAGA,EAAMS,WAAWuS,MAAO,CACzCuyD,WAAY,MAERqK,IAAwB,EAAAxwE,EAAA,IAAOywE,GAAA,EAAQ,CAC3Cn6E,KAAM,qBACNqJ,KAAM,SACNM,kBAAmB,CAACrN,EAAOsN,KAAW,OAAS,CAC7C,CAAC,MAAM,iBAAsCA,EAAOwwE,WACpD,CAAC,MAAM,aAAkCxwE,EAAO9C,QAC/C8C,EAAO9O,MAAO8O,EAAOywE,aANI,CAO3B,CACDtwE,MAAO,UACPmB,SAAU,UACV2kE,WAAY,EACZrhE,YAAa,GACb2I,WAAY,EACZ,CAAC,MAAM,aAAkC,CACvC7L,YAAa,EACbC,aAAc,GACd8N,UAAW,QACXihE,cAAe,WAIbC,IAA0B,EAAA7wE,EAAA,IAAO43B,GAAA,EAAU,CAC/CthC,KAAM,qBACNqJ,KAAM,WACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO4wE,UAHf,CAI7B,CAAC,GACEC,IAA+B,EAAA/wE,EAAA,IAAO,IAAK,CAC/C1J,KAAM,qBACNqJ,KAAM,gBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO8wE,eAHV,EAIlC,EACDpwE,YACI,OAAS,CAAC,EAAGA,EAAMS,WAAWuS,MAAO,CACzCuyD,WAAY,MAEd,SAAS8K,IAA0B,KACjCxrD,EAAI,GACJnV,EAAE,MACFywD,IAEA,MAAO,GAAGt7C,KAAQnV,SAAoB,IAAXywD,EAAeA,EAAQ,aAAazwD,KACjE,CACA,SAAS4gE,GAAoB/kE,GAC3B,MAAO,SAASA,QAClB,CAyQA,OAlPqC,cAAiB,SAAyB/J,EAAS/D,GACtF,MAAMzL,GAAQ,EAAAyP,GAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,wBAEF,iBACF66E,EAAmB,GAAsB,oBACzC/B,EAAmB,UACnB9sE,EACA0vD,QAASof,EAAW,UACpB7uE,EAAY,GAAS,MACrBw+D,EAAK,iBACLsO,EAAmB6B,GAAmB,mBACtCG,EAAqBJ,GAAyB,iBAC9CK,EAAmB,iBAAgB,oBACnChC,EAAmB,aACnB73B,EAAY,oBACZ85B,EAAmB,KACnBp7B,EAAI,YACJo5B,EAAW,mBACXiC,EAAqB,CAAC,GAAI,GAAI,GAAI,KAAI,YACtCp5C,EAAc,CAAC,EAAC,gBAChBo3C,GAAkB,EAAK,eACvBC,GAAiB,GACf78E,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCuN,EAAavN,EACb4P,EAjDkBrC,KACxB,MAAM,QACJqC,GACErC,EAaJ,OAAO,EAAAuC,EAAA,GAZO,CACZtC,KAAM,CAAC,QACPsrE,QAAS,CAAC,WACV2E,OAAQ,CAAC,UACTE,YAAa,CAAC,eACdnzE,OAAQ,CAAC,UACThM,MAAO,CAAC,SACRs/E,WAAY,CAAC,cACbI,SAAU,CAAC,YACXE,cAAe,CAAC,iBAChBb,QAAS,CAAC,YAEiBJ,GAAgCvtE,EAAQ,EAiCrD,CAAkBrC,GAC5BsxE,EAAoBr5C,EAAY5B,OAAS,SAAWq6C,GAC1D,IAAI7e,EACAzvD,IAAc,IAA2B,OAAdA,IAC7ByvD,EAAUof,GAAe,KAG3B,MAAMM,GAAW,EAAAjgD,GAAA,GAAM2G,EAAY7jC,IAC7Bo9E,GAAU,EAAAlgD,GAAA,GAAM2G,EAAYu5C,SAOlC,OAAoB,SAAK1B,IAAqB,OAAS,CACrDje,QAASA,EACT3zD,IAAKA,EACLuE,GAAIL,EACJpC,WAAYA,EACZmC,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,EAAO,CACR6N,UAAuB,UAAMumE,GAAwB,CACnD5tE,UAAWE,EAAQkpE,QACnB/hE,SAAU,EAAc,SAAKymE,GAAuB,CAClD9tE,UAAWE,EAAQ6tE,SACjBmB,EAAmBx/E,OAAS,IAAkB,SAAKs+E,GAA4B,CACjFhuE,UAAWE,EAAQ+tE,YACnBh8E,GAAIo9E,EACJhoE,SAAU2nE,IACRE,EAAmBx/E,OAAS,IAAkB,SAAKw+E,IAAuB,OAAS,CACrFhkE,QAAS,aACP4rB,EAAY5rB,SAAW,CACzBpb,MAAO4+E,KAAeA,IAA0B,SAAKv8C,GAAA,GAAW,CAAC,KAChE,CACD7+B,MAAO26E,EACP16E,SAAU08E,EACVh9E,GAAIm9E,EACJC,QAASA,GACRv5C,EAAa,CACd51B,SAAS,OAAS,CAAC,EAAG41B,EAAY51B,QAAS,CAEzCpC,MAAM,OAAKoC,EAAQpR,MAAOoR,EAAQmuE,YAAav4C,EAAY51B,SAAW,CAAC,GAAGpC,MAC1EhD,QAAQ,OAAKoF,EAAQpF,QAASg7B,EAAY51B,SAAW,CAAC,GAAGpF,QAEzD0O,MAAM,OAAKtJ,EAAQkuE,YAAat4C,EAAY51B,SAAW,CAAC,GAAGsJ,QAE7DnC,SAAU6nE,EAAmB/nE,KAAImoE,IAAkC,mBAAeH,GAAmB,OAAS,CAAC,IAAI,EAAAI,GAAA,GAAgBJ,IAAsB,CACvJtxE,cACC,CACDmC,UAAWE,EAAQsuE,SACnB70E,IAAK21E,EAAkBx9E,MAAQw9E,EAAkBx9E,MAAQw9E,EACzDh9E,MAAOg9E,EAAkBh9E,MAAQg9E,EAAkBh9E,MAAQg9E,IACzDA,EAAkBx9E,MAAQw9E,EAAkBx9E,MAAQw9E,SACxC,SAAKb,GAA8B,CACnDzuE,UAAWE,EAAQwuE,cACnBrnE,SAAU0nE,EAAmB,CAC3B5rD,KAAgB,IAAVs7C,EAAc,EAAI5qB,EAAOo5B,EAAc,EAC7Cj/D,IAhDS,IAAXywD,GACM5qB,EAAO,GAAKo5B,GAEE,IAAjBA,EAAqBxO,EAAQrnE,KAAKglC,IAAIqiC,GAAQ5qB,EAAO,GAAKo5B,GA8C3DxO,OAAkB,IAAXA,GAAgB,EAAIA,EAC3B5qB,YAEa,SAAKg7B,EAAkB,CACtC7uE,UAAWE,EAAQ2tE,QACnBf,oBAAqBA,EACrBrO,MAAOA,EACPuO,oBAAqBA,EACrB73B,aAAcA,EACdtB,KAAMA,EACNo5B,YAAaA,EACbC,gBAAiBA,EACjBC,eAAgBA,EAChBJ,iBAAkBA,SAI1B,IC7OA,MAAMyC,IAAqB,EAAA9xE,EAAA,IAAO,GAAP,EAAwB,EACjDY,YACI,CACJ,CAAC,MAAM,kBAAuC,CAC5CyF,QAAS,OACT,CAACzF,EAAM+F,YAAYC,GAAG,OAAQ,CAC5BP,QAAS,UAGb,CAAC,MAAM,YAAiC,CACtCA,QAAS,OACT,CAACzF,EAAM+F,YAAYC,GAAG,OAAQ,CAC5BP,QAAS,oBAIF0rE,GAA8B,cAAiB,SAAwBn/E,EAAOyL,GACzF,IAAI2zE,EAEJ,MAAMx8D,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ0gC,GAAkB,EAAAvgC,EAAA,GAAgBF,EAAQgkD,GAAA,IAC1CyY,EAAW,WAAc,IAAMv4E,KAAK6qC,MAAM0R,EAAgBtC,UAAYsC,EAAgB/jD,UAAY,KAAK,CAAC+jD,EAAgBtC,SAAUsC,EAAgB/jD,WAClJggF,EAAuB,eAAkBt7E,IAC7C,MAAMu7E,EAAcz1E,OAAO9F,EAAM4F,OAAO5H,OACxC4gB,EAAOljB,QAAQw5C,YAAYqmC,EAAY,GACtC,CAAC38D,IACE48D,EAAmB,eAAkB,CAACx7E,EAAOu/C,KACjD3gC,EAAOljB,QAAQolD,QAAQvB,EAAK,GAC3B,CAAC3gC,IAgBJ,OAAoB,SAAKs8D,IAAoB,OAAS,CACpDzzE,IAAKA,EACLkE,UAAW,MACXw+D,MAAO9qB,EAAgBtC,SACvBwC,KAAMF,EAAgBE,MAAQ87B,EAAWh8B,EAAgBE,KAAO87B,EAChET,mBAA8E,OAAzDQ,EAAwB18D,EAAUk8D,qBAA+BQ,EAAsB9hD,SAAS+lB,EAAgB/jD,UAAYojB,EAAUk8D,mBAAqB,GAChLjC,YAAat5B,EAAgB/jD,SAC7BulD,aAAc26B,EACdb,oBAAqBW,GACpB18D,EAAOljB,QAAQ+5B,cAAc,sBAAuBz5B,GACzD,IC9DM,GAAY,CAAC,aAUb,GAAoBuN,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,iBAEoB,IAAyBoC,EAAQ,EAG1D6vE,IAAuB,EAAAryE,EAAA,IAAO,MAAO,CACzC1J,KAAM,cACNqJ,KAAM,eACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO2rE,cAHlB,CAI1B,CACDxlE,QAAS,OACTwN,cAAe,SACfjO,SAAU,OACV8N,KAAM,MACNvN,UAAW,MAGb,SAASmsE,GAAiB1/E,GACxB,MAAM,UACJ0P,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAG7CuN,EAAa,CACjBqC,SAFgB,EAAA+S,EAAA,KAEG/S,SAEfA,EAAU,GAAkBrC,GAClC,OAAoB,SAAKkyE,IAAsB,OAAS,CACtD/vE,WAAW,OAAKA,EAAWE,EAAQpC,OAClCtE,GACL,CC9CA,MAAM,GAAY,CAAC,aAUb,GAAoBqE,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,gBAEoB,IAAyBoC,EAAQ,EAG1D+vE,IAAsB,EAAAvyE,EAAA,IAAO,MAAO,CACxC1J,KAAM,cACNqJ,KAAM,cACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOsyE,aAHnB,EAIzB,EACD5xE,YACI,CACJoD,QAASpD,EAAMyT,QAAQ,IACvBhO,QAAS,OACTC,eAAgB,oBAGlB,SAASmsE,GAAgB7/E,GACvB,MAAM,UACJ0P,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAG7CuN,EAAa,CACjBqC,SAFgB,EAAA+S,EAAA,KAEG/S,SAEfA,EAAU,GAAkBrC,GAClC,OAAoB,SAAKoyE,IAAqB,OAAS,CACrDjwE,WAAW,OAAKA,EAAWE,EAAQpC,OAClCtE,GACL,C,gBC9CA,MAAM,GAAY,CAAC,YAAa,aAqB1B42E,IAAuB,EAAA1yE,EAAA,IAAO,MAAO,CACzC1J,KAAM,cACNqJ,KAAM,eACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOyyE,cAHlB,CAI1B,CACDtsE,QAAS,OACTwN,cAAe,SACfH,KAAM,EACN,UAAW,CACTjN,QAAS,KAIPmsE,GAAY,KAAM,EAElBC,GAAgC,cAAiB,SAA0BjgF,EAAOyL,GACtF,MAAM,UACJiE,EAAS,UACT+G,EAAY,CAAC,GACXzW,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EApCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,iBAEoB,IAAyBoC,EAAQ,EA6B9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAK,MAAW,OAAS,CAC3CtN,MAAM,EACN49E,qBAAqB,EACrBF,UAAWA,IACVvpE,EAAU0pE,UAAW,CACtBppE,UAAuB,SAAK+oE,IAAsB,OAAS,CACzDr0E,IAAKA,EACLK,UAAW,EACX4D,WAAW,OAAKA,EAAWE,EAAQpC,OAClCtE,MAEP,I,gBC3DA,MAAM,GAAY,CAAC,OAAQ,qBAAsB,eAAgB,qBAAsB,sBAAuB,2BAA4B,6BAA8B,kCAAmC,kBAAmB,gBAAiB,cAAe,kBAAmB,yBAA0B,qBAAsB,mBAAoB,kBAAmB,YAClW,GAAa,CAAC,uBAmCdk3E,IAAqB,EAAAhzE,EAAA,IAAO,MAAO,CACvC1J,KAAM,cACNqJ,KAAM,aACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO+yE,YAHpB,EAIxB,EACDryE,YACI,CACJyF,QAAS,OACTrC,QAASpD,EAAMyT,QAAQ,OAEnB6+D,IAAuB,EAAAlzE,EAAA,IAAOmzE,GAAA,EAAa,CAC/C78E,KAAM,cACNqJ,KAAM,uBACNM,kBAAmB,CAAC8nE,EAAG7nE,IAAWA,EAAOkzE,sBAHd,EAI1B,EACDxyE,YACI,CACJulE,WAAY,EACZ7/D,eAAgB,WAChBxB,YAAalE,EAAMyT,QAAQ,IAC3Bu0D,aAAchoE,EAAMyT,QAAQ,QAExBg/D,IAA8B,EAAArzE,EAAA,IAAOmzE,GAAA,EAAa,CACtD78E,KAAM,cACNqJ,KAAM,8BACNM,kBAAmB,CAAC8nE,EAAG7nE,IAAWA,EAAOozE,6BAHP,CAIjC,CACDzvE,SAAU,GACViB,YAAa,EACbwB,eAAgB,QAEZitE,IAAwB,EAAAvzE,EAAA,IAAOmzE,GAAA,EAAa,CAChD78E,KAAM,cACNqJ,KAAM,wBACNM,kBAAmB,CAAC8nE,EAAG7nE,IAAWA,EAAOszE,uBAHb,CAI3B,CACD/vE,MAAO,MAEHgwE,IAA0B,EAAAzzE,EAAA,IAAOmzE,GAAA,EAAa,CAClD78E,KAAM,cACNqJ,KAAM,0BACNM,kBAAmB,CAAC8nE,EAAG7nE,IAAWA,EAAOwzE,yBAHX,CAI7B,CACDjwE,MAAO,MAEHkwE,IAAuB,EAAA3zE,EAAA,IAAOmzE,GAAA,EAAa,CAC/C78E,KAAM,cACNqJ,KAAM,uBACNM,kBAAmB,CAAC8nE,EAAG7nE,IAAWA,EAAO0zE,sBAHd,CAI1B,CACDnwE,MAAO,MAGHowE,GAA2BpnC,IAC/B,OAAQA,GACN,KAAKH,GAAiBI,IACpB,MAAO,yBAET,KAAKJ,GAAiBwnC,GACpB,MAAO,wBAET,QACE,MAAM,IAAIxyD,MAAM,kEACpB,EAGIyyD,GAAiB/nB,GAAOA,EAAI1vB,YAAc0vB,EAAIr4B,MAE9CqgD,GAAW,IAAIC,KAAKC,SACpBC,GAA8B,cAAiB,SAAwBvhF,EAAOyL,GAClF,IAAIsZ,EAAuByG,EAAwB6X,EAAuB5X,EAAwB+1D,EAAwBC,EAAwBC,EAElJ,MAAM,KACJrjD,EAAI,mBACJsjD,EAAkB,aAClBC,EAAY,mBACZC,EAAkB,oBAClBC,EAAmB,yBACnBC,EAAwB,2BACxBC,EAA0B,gCAC1BC,EAA+B,gBAC/B1jD,EAAe,cACf2jD,EAAgB,CAACxoC,GAAiBI,IAAKJ,GAAiBwnC,IAAG,YAC3DiB,EAAW,gBACXC,EAAkB,CAAC,EAAC,uBACpBC,EAAyB,CAAC,EAAC,mBAC3BC,EAAqB,CAAC,EAAC,iBACvBC,EAAmB,CAAC,EAAC,gBACrBC,EAAkB,CAAC,GACjBxiF,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACT6/D,GAAoB,EAAA3/D,EAAA,GAAgBF,EAAQ,MAC5C8/D,GAAiB,EAAA7jD,GAAA,KACjB8jD,GAAsB,EAAA9jD,GAAA,KACtB+jD,GAAmB,EAAA/jD,GAAA,KACnBgkD,GAAwB,EAAAhkD,GAAA,KACxBnc,GAAY,EAAAC,EAAA,KAIZ/S,EArHkBrC,KACxB,MAAM,QACJqC,GACErC,EASJ,OAAO,EAAAuC,EAAA,GARO,CACZtC,KAAM,CAAC,cACPsM,WAAY,CAAC,wBACbgpE,kBAAmB,CAAC,+BACpBC,YAAa,CAAC,yBACdC,cAAe,CAAC,2BAChBC,WAAY,CAAC,yBAEc,IAAyBrzE,EAAQ,EAyG9C,CAHG,CACjBA,QAAS8S,EAAU9S,UAGfszE,EAAW,SAAa,MACxBC,EAAoB,SAAa,MACjCC,EAAwBzB,GAAsBO,EAAc9iF,OAAS,EACrEikF,GAA+E,OAAtDt+D,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBu+D,kBAAoB,CAAC,EAE1IC,EAAyE,OAAnDlgD,IADqD,OAAvD7X,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBmY,aAAe,CAAC,GACpEC,SAAkBP,EAChFJ,EAAkBsgD,EAAqB,SAAWv+C,GAAA,GAElD,oBACJ5H,GACEolD,EACEgB,GAAuB,OAA8BhB,EAAiB,IAEtEiB,GAA0B,WAAc,KAC5C,OAAQtB,GACN,IAAK,MACH,OAAOM,EAAkB9d,MAAK,CAAChwB,EAAGtC,IAAM+uC,GAASsC,QAAQvC,GAAexsC,GAAIwsC,GAAe9uC,MAE7F,IAAK,OACH,OAAOowC,EAAkB9d,MAAK,CAAChwB,EAAGtC,KAAO+uC,GAASsC,QAAQvC,GAAexsC,GAAIwsC,GAAe9uC,MAE9F,QACE,OAAOowC,EACX,GACC,CAACA,EAAmBN,IACjBh9C,GAAgB9G,EAAK+G,YAAcxiB,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aAAe,KAChFu+C,GAAkB,WAAc,KACpC,IAAIC,EAEJ,OAAKvlD,EAAK+b,eAAkBjV,GAIsC,OAA1Dy+C,EAAwBz+C,GAAcpH,sBAA2B,EAAS6lD,EAAsB3qD,MAAKsiB,GAAYA,EAASv5C,QAAUq8B,EAAK+b,gBAHxI,IAGsJ,GAC9J,CAAC/b,EAAM8G,KACJ0+C,GAAe,eAAkB7/E,IACrC,MAAMohC,EAAcphC,EAAM4F,OAAO5H,MAC3BukC,EAAS3jB,EAAOljB,QAAQ2lC,UAAUD,GAExC,GAAImB,EAAOxF,QAAUoE,GAAcpE,MAEjC,OAIF,MAAM+iD,EAAcv9C,EAAOxI,gBAAgB9E,MAAKsiB,GAAYA,EAASv5C,QAAUq8B,EAAK+b,iBAAkB7T,EAAOxI,gBAAgB,GAEvHgmD,GAAkBD,EAAY5mD,gBAAkB4mD,EAAY5mD,kBAAuC,MAAnBymD,QAA0B,EAASA,GAAgBzmD,gBACzI2kD,GAAmB,OAAS,CAAC,EAAGxjD,EAAM,CACpC+G,cACAgV,cAAe0pC,EAAY9hF,MAC3BA,MAAO+hF,OAAiBv4E,EAAY6yB,EAAKr8B,QACxC,GACF,CAAC4gB,EAAQi/D,EAAoBxjD,EAAM8G,GAAew+C,KAC/CK,GAAiB,eAAkBhgF,IACvC,MAAMo2C,EAAgBp2C,EAAM4F,OAAO5H,MAC7B8hF,EAA+B,MAAjB3+C,QAAwB,EAASA,GAAcpH,gBAAgB9E,MAAKsiB,GAAYA,EAASv5C,QAAUo4C,IACjH2pC,IAAkC,MAAfD,GAAuBA,EAAY5mD,kBAAmC,MAAf4mD,OAAsB,EAASA,EAAY5mD,mBAAwC,MAAnBymD,QAA0B,EAASA,GAAgBzmD,gBACnM2kD,GAAmB,OAAS,CAAC,EAAGxjD,EAAM,CACpC+b,gBACAp4C,MAAO+hF,OAAiBv4E,EAAY6yB,EAAKr8B,QACxC,GACF,CAAC6/E,EAAoBxjD,EAAM8G,GAAew+C,KACvCM,GAAqB,eAAkBjgF,IAC3C,MAAM61C,EAAe71C,EAAM4F,OAAO5H,QAAU03C,GAAiBI,IAAI9kB,WAAa0kB,GAAiBI,IAAMJ,GAAiBwnC,GACtHe,EAAgCpoC,EAAa,GAC5C,CAACooC,IA4BJ,OAXA,sBAA0B1jD,GAAiB,KAAM,CAC/Cx5B,MAAO,KAEH,IAAIm/E,EADiB,MAAnBP,IAA2BA,GAAgBzmD,eAGjC,MAAZgmD,GAAsE,OAAzCgB,EAAoBhB,EAASxjF,UAA4BwkF,EAAkBn/E,QAExGo+E,EAAkBzjF,QAAQqF,OAC5B,KAEA,CAAC4+E,MACe,UAAMvD,IAAoB,OAAS,CACrD30E,IAAKA,EACLiE,UAAWE,EAAQpC,MAClBtE,EAAO,CACR6N,SAAU,EAAc,SAAKupE,IAAsB,OAAS,CAC1D1mE,QAAS,WACT5J,GAAI0S,EAAUsC,WAAWm/D,iBACxBd,EAAsBjB,EAAiB,CACxC1yE,WAAW,OAAKE,EAAQkK,WAAYupE,EAAqB3zE,UAAW0yE,EAAgB1yE,WACpFqH,UAAuB,SAAK/E,GAAA,EAAY,CACtC,aAAc4Q,EAAOljB,QAAQ+5B,cAAc,8BAC3ChiB,MAAOmL,EAAOljB,QAAQ+5B,cAAc,8BACpCvuB,QAtCqB,KACrBwX,EAAU+3B,qCACOjvC,IAAf6yB,EAAKr8B,MACP4/E,EAAavjD,GAGbwjD,GAAmB,OAAS,CAAC,EAAGxjD,EAAM,CACpCr8B,WAAOwJ,KAIXo2E,EAAavjD,EACf,EA2BI5tB,KAAM,QACNsG,UAAuB,SAAK2L,EAAUsC,WAAWo/D,sBAAuB,CACtEx1E,SAAU,gBAGE,SAAK6xE,IAA6B,OAAS,CAC3D7mE,QAAS,WACT5J,GAAI0S,EAAUsC,WAAWm/D,iBACxBd,EAAsBhB,EAAwB,CAC/C7N,IAAI,OAAS,CACX/gE,QAAS2vE,EAAwB,OAAS,OAC1CxyE,WAAYmxE,EAA2B,UAAY,UAClDsB,EAAqB7O,IAAM,CAAC,EAAG6N,EAAuB7N,IAAM,CAAC,GAChE9kE,WAAW,OAAKE,EAAQkzE,kBAAmBO,EAAqB3zE,UAAW2yE,EAAuB3yE,WAClGqH,UAAuB,SAAK2L,EAAUsC,WAAW+e,YAAY,OAAS,CACpErsB,WAAY,CACV,aAAckL,EAAOljB,QAAQ+5B,cAAc,4BAE7Cz3B,MAAO8/E,EACP7/E,SAAUgiF,GACVljF,WAAYihF,GAAuD,IAAzBE,EAAc9iF,OACxDwkC,OAAQ2/C,GACiD,OAAvD93D,EAAyB/I,EAAUrN,sBAA2B,EAASoW,EAAuBkY,WAAY,CAC5G5sB,SAAUmrE,EAAcrrE,KAAIgjC,IAA6B,SAAK5W,EAAiB,CAC7EjhC,MAAO63C,EAAa7kB,WACpBje,SAAU6L,EAAOljB,QAAQ+5B,cAAcwnD,GAAyBpnC,KAC/DA,EAAa7kB,qBAEF,UAAM2rD,IAAuB,OAAS,CACtD/mE,QAAS,WACT5J,GAAI0S,EAAUsC,WAAWm/D,iBACxBd,EAAsBd,EAAkB,CACzC7yE,WAAW,OAAKE,EAAQmzE,YAAaM,EAAqB3zE,UAAW6yE,EAAiB7yE,WACtFqH,SAAU,EAAc,SAAKstE,GAAA,EAAY,CACvCj5E,QAASs3E,EACT/gF,GAAIghF,EACJ5rE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,yBACxB,SAAK/W,EAAUsC,WAAW+e,YAAY,OAAS,CAC9Dg7C,QAAS4D,EACThhF,GAAI+gF,EACJlhF,MAAOohB,EAAOljB,QAAQ+5B,cAAc,sBACpCz3B,MAAOq8B,EAAK+G,aAAe,GAC3BnjC,SAAU4hF,GACVjgD,OAAQ2/C,GACiD,OAAvD/B,EAAyB9+D,EAAUrN,sBAA2B,EAASmsE,EAAuB79C,WAAY,CAC5G5sB,SAAU0sE,GAAwB5sE,KAAIuiD,IAAoB,SAAKn2B,EAAiB,CAC9EjhC,MAAOo3D,EAAIr4B,MACXhqB,SAAUoqE,GAAe/nB,IACxBA,EAAIr4B,iBAEO,UAAM8/C,IAAyB,OAAS,CACxDjnE,QAAS,WACT5J,GAAI0S,EAAUsC,WAAWm/D,iBACxBd,EAAsBf,EAAoB,CAC3C5yE,WAAW,OAAKE,EAAQozE,cAAeK,EAAqB3zE,UAAW4yE,EAAmB5yE,WAC1FqH,SAAU,EAAc,SAAKstE,GAAA,EAAY,CACvCj5E,QAASw3E,EACTjhF,GAAIkhF,EACJ9rE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,2BACxB,SAAK/W,EAAUsC,WAAW+e,YAAY,OAAS,CAC9Dg7C,QAAS8D,EACTrhF,MAAOohB,EAAOljB,QAAQ+5B,cAAc,wBACpC93B,GAAIihF,EACJ5gF,MAAOq8B,EAAK+b,cACZn4C,SAAU+hF,GACVpgD,OAAQ2/C,EACRvgF,SAAUmgF,GAC+C,OAAvD1B,EAAyB/+D,EAAUrN,sBAA2B,EAASosE,EAAuB99C,WAAY,CAC5G5sB,SAA2B,MAAjBouB,IAA6F,OAA3Du8C,EAAyBv8C,GAAcpH,sBAAjD,EAAqF2jD,EAAuB7qE,KAAI0kC,IAAyB,SAAKtY,EAAiB,CAC/LjhC,MAAOu5C,EAASv5C,MAChB+U,SAAUwkC,EAAS/5C,OAASohB,EAAOljB,QAAQ+5B,cAAc,kBAAiB,EAAA/rB,EAAA,GAAW6tC,EAASv5C,WAC7Fu5C,EAASv5C,iBAEE,SAAK++E,IAAsB,OAAS,CACpDnnE,QAAS,WACT5J,GAAI0S,EAAUsC,WAAWm/D,iBACxBd,EAAsBG,EAAsB,CAC7C9zE,WAAW,OAAKE,EAAQqzE,WAAYI,EAAqB3zE,UAAW8zE,EAAqB9zE,WACzFqH,SAA6B,MAAnB4sE,IAA2BA,GAAgBzmD,gBAA8B,SAAKymD,GAAgBzmD,gBAAgB,OAAS,CAC/Hta,OAAQA,EACRyb,KAAMA,EACNC,WAAYujD,EACZtjD,gBAAiB2kD,GAChBS,GAAgBvmD,oBAAqBA,IAAwB,WAGtE,IC5UM,GAAY,CAAC,gBAAiB,cAAe,kBAAmB,YAgBhEknD,GAA+B,cAAiB,SAAyBtkF,EAAOyL,GACpF,IAAIsZ,EAEJ,MAAMnC,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZm4B,GAAc,EAAAh4B,EAAA,GAAgBF,EAAQ,MACtC6/D,GAAoB,EAAA3/D,EAAA,GAAgBF,EAAQ,MAC5C2hE,EAAgB,SAAa,OAE7B,cACJrC,EAAgB,CAACxoC,GAAiBI,IAAKJ,GAAiBwnC,IAAG,YAC3DiB,EAAW,gBACXqC,GACExkF,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7CykF,EAAc,eAAkBpmD,IACpCzb,EAAOljB,QAAQ0iE,iBAAiB/jC,EAAK,GACpC,CAACzb,IACE8hE,EAA0B,eAAkBnpC,IAChD34B,EAAOljB,QAAQsjE,sBAAsBznB,EAAS,GAC7C,CAAC34B,IACE+hE,EAAiB,eAAkB,KACvC,MAAMC,EAA0BnC,EAAkBxpD,MAAK+H,IACrD,IAAI6jD,EAEJ,OAA2D,OAAnDA,EAAwB7jD,EAAOjD,sBAA2B,EAAS8mD,EAAsBzlF,MAAM,IAGzG,OAAKwlF,EAIE,CACLx/C,YAAaw/C,EAAwB7jD,MACrCqZ,cAAewqC,EAAwB7mD,gBAAgB,GAAG/7B,MAC1DL,GAAImF,KAAK21B,MAAsB,IAAhB31B,KAAK41B,WANb,IAOR,GACA,CAAC+lD,IACE7oC,EAAQ,WAAc,KAC1B,GAAIkB,EAAYlB,MAAMx6C,OACpB,OAAO07C,EAAYlB,MAGrB,MAAMkrC,EAAcH,IACpB,OAAOG,EAAc,CAACA,GAAe,EAAE,GACtC,CAAChqC,EAAYlB,MAAO+qC,IACjBhD,EAAqB/nC,EAAMx6C,OAAS,EAYpCwiF,EAAe,eAAkBvjD,IACrC,MAAM0mD,EAA0C,IAAjBnrC,EAAMx6C,OACrCwjB,EAAOljB,QAAQ8iE,iBAAiBnkC,GAE5B0mD,GACFniE,EAAOljB,QAAQqjE,iBACjB,GACC,CAACngD,EAAQg3B,EAAMx6C,SAWlB,OAVA,aAAgB,KACV8iF,EAAc9iF,OAAS,GAAK07C,EAAYjB,eAAiBqoC,EAAc5kD,SAASwd,EAAYjB,eAC9F6qC,EAAwBxC,EAAc,GACxC,GACC,CAACA,EAAewC,EAAyB5pC,EAAYjB,eACxD,aAAgB,KACVD,EAAMx6C,OAAS,GACjBmlF,EAAc7kF,QAAQqF,OACxB,GACC,CAAC60C,EAAMx6C,UACU,UAAM6gF,IAAkB,OAAS,CACnDx0E,IAAKA,GACJvC,EAAO,CACR6N,SAAU,EAAc,SAAK2oE,GAAkB,CAC7C3oE,SAAU6iC,EAAM/iC,KAAI,CAACwnB,EAAMn5B,KAAuB,SAAKq8E,IAAgB,OAAS,CAC9EljD,KAAMA,EACNwjD,mBAAoB4C,EACpB7C,aAAcA,EACdD,mBAAoBA,EACpBI,yBAA0B78E,EAAQ,EAClC48E,oBAAqBhnC,EAAYjB,aACjCmoC,2BAAsC,IAAV98E,EAC5B+8E,gCAAiCyC,EACjCnmD,gBAAiBr5B,IAAU00C,EAAMx6C,OAAS,EAAImlF,EAAgB,KAC9DrC,cAAeA,EACfC,YAAaA,GACZqC,GAA6B,MAAXnmD,EAAK18B,GAAauD,EAAQm5B,EAAK18B,SACjD+gB,EAAU+3B,kCAAgD,SAAKolC,GAAiB,CACnF9oE,UAAuB,SAAK2L,EAAUsC,WAAWggE,YAAY,OAAS,CACpE95E,QA/Ce,KACnB,MAAM45E,EAAcH,IAEfG,GAILliE,EAAOljB,QAAQ4iE,kBAAkB,IAAI1oB,EAAOkrC,GAAa,EAyCrDG,WAAwB,SAAK,MAAa,CAAC,IACa,OAAtDlgE,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBmgE,WAAY,CAC1GnuE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,gCAI/C,I,2BCvHO,SAAS0rD,GAAkCp4E,GAChD,OAAO,EAAAC,GAAA,GAAqB,sBAAuBD,EACrD,CAEA,QADgC,EAAAE,GAAA,GAAuB,sBAAuB,CAAC,OAAQ,sBAAuB,oBAAqB,uBAAwB,WAAY,QAAS,U,YCHhL,MAAM,GAAY,CAAC,UAAW,YAAa,kBAAmB,UAAW,WAAY,oBAAqB,WAAY,QAAS,iBAAkB,OAAQ,WAAY,YAAa,SA4BrKm4E,IAAuB,EAAAh4E,EAAA,IAAO,QAAS,CAClD1J,KAAM,sBACNqJ,KAAM,OACNM,kBAAmB,CAACrN,EAAOsN,KACzB,MAAM,WACJC,GACEvN,EACJ,MAAO,CAAC,CACN,CAAC,MAAM,YAAkCsN,EAAO9L,OAC/C8L,EAAOE,KAAMF,EAAO,kBAAiB,EAAAI,EAAA,GAAWH,EAAW83E,mBAAmB,GATjD,EAWjC,EACDr3E,QACAT,iBACI,OAAS,CACbkG,QAAS,cACTE,WAAY,SACZC,OAAQ,UAERgH,cAAe,SACf9G,wBAAyB,cACzB+G,YAAa,GACb3I,YAAa,GAEb,CAAC,KAAK,eAAqC,CACzC0B,OAAQ,YAEqB,UAA9BrG,EAAW83E,gBAA8B,CAC1CpkE,cAAe,cACfpG,WAAY,GAEZ3I,aAAc,IACiB,QAA9B3E,EAAW83E,gBAA4B,CACxCpkE,cAAe,iBACfpG,WAAY,IACmB,WAA9BtN,EAAW83E,gBAA+B,CAC3CpkE,cAAe,SACfpG,WAAY,IACX,CACD,CAAC,MAAM,YAAkC,CACvC,CAAC,KAAK,eAAqC,CACzCpN,OAAQO,EAAMI,MAAQJ,GAAOK,QAAQC,KAAKvN,eAmJhD,OA1IsC,cAAiB,SAA0ByO,EAAS/D,GACxF,IAAI65E,EACJ,MAAMtlF,GAAQ,EAAAyP,GAAA,GAAc,CAC1BzP,MAAOwP,EACP9L,KAAM,yBAEF,UACFgM,EAAS,gBACT2F,EAAkB,CAAC,EAAC,QACpBkwE,EACAxkF,SAAUC,EAAY,kBACtBwkF,EACAhkF,MAAOikF,EAAS,eAChBJ,EAAiB,MAAK,UACtB5uE,EAAY,CAAC,GACXzW,EACJkJ,GAAQ,OAA8BlJ,EAAO,IACzCwe,GAAiB,EAAAC,GAAA,KACvB,IAAI1d,EAAWC,OACS,IAAbD,QAA8D,IAA3BwkF,EAAQvlF,MAAMe,WAC1DA,EAAWwkF,EAAQvlF,MAAMe,eAEH,IAAbA,GAA4Byd,IACrCzd,EAAWyd,EAAezd,UAE5B,MAAM2kF,EAAe,CACnB3kF,YAEF,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAY8lB,SAAQxd,SACzB,IAAvBk8E,EAAQvlF,MAAMqJ,SAA8C,IAAfrJ,EAAMqJ,KAC5Dq8E,EAAar8E,GAAOrJ,EAAMqJ,GAC5B,IAEF,MAAMs8E,GAAM,EAAAC,GAAA,GAAiB,CAC3B5lF,QACAwe,iBACAqnE,OAAQ,CAAC,WAELt4E,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCe,WACAskF,iBACAphE,MAAO0hE,EAAI1hE,QAEPrU,EA1GkBrC,KACxB,MAAM,QACJqC,EAAO,SACP7O,EAAQ,eACRskF,EAAc,MACdphE,GACE1W,EACEsC,EAAQ,CACZrC,KAAM,CAAC,OAAQzM,GAAY,WAAY,kBAAiB,EAAA2M,EAAA,GAAW23E,KAAmBphE,GAAS,SAC/FziB,MAAO,CAAC,QAAST,GAAY,aAE/B,OAAO,EAAA+O,EAAA,GAAeD,EAAOs1E,GAAmCv1E,EAAQ,EA+FxD,CAAkBrC,GAC5Bu4E,EAAwE,OAAjDR,EAAwB7uE,EAAUhI,YAAsB62E,EAAwBjwE,EAAgB5G,WAC7H,IAAIjN,EAAQikF,EASZ,OARa,MAATjkF,GAAiBA,EAAM+X,OAASwsE,GAAA,GAAeP,IACjDhkF,GAAqB,SAAKukF,GAAA,GAAY,OAAS,CAC7Cp2E,UAAW,QACVm2E,EAAqB,CACtBp2E,WAAW,OAAKE,EAAQpO,MAA8B,MAAvBskF,OAA8B,EAASA,EAAoBp2E,WAC1FqH,SAAUvV,OAGM,UAAM4jF,IAAsB,OAAS,CACvD11E,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9BnC,WAAYA,EACZ9B,IAAKA,GACJvC,EAAO,CACR6N,SAAU,CAAc,eAAmBwuE,EAASG,GAAelkF,KAEvE,IC3IA,MAAM,GAAY,CAAC,aAUb,GAAoB+L,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,gBAEoB,IAAyBoC,EAAQ,EAG1Do2E,IAAsB,EAAA54E,EAAA,IAAO,MAAO,CACxC1J,KAAM,cACNqJ,KAAM,cACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO24E,aAHnB,EAIzB,EACDj4E,YACI,CACJoD,QAASpD,EAAMyT,QAAQ,OAGzB,SAASykE,GAAgBlmF,GACvB,MAAM,UACJ0P,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAG7CuN,EAAa,CACjBqC,SAFgB,EAAA+S,EAAA,KAEG/S,SAEfA,EAAU,GAAkBrC,GAClC,OAAoB,SAAKy4E,IAAqB,OAAS,CACrDt2E,WAAW,OAAKA,EAAWE,EAAQpC,OAClCtE,GACL,CC7BO,MAAMi9E,IAA4B,ECfnC,GAAY,CAAC,OAAQ,kBAAmB,wBAsBxC,GAAoB54E,IACxB,MAAM,QACJqC,GACErC,EAKJ,OAAO,EAAAuC,EAAA,GAJO,CACZtC,KAAM,CAAC,gBACP44E,gBAAiB,CAAC,oBAES,IAAyBx2E,EAAQ,EAG1Dy2E,IAAuB,EAAAj5E,EAAA,IAAO,MAAO,CACzC1J,KAAM,cACNqJ,KAAM,eACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOytD,cAHlB,EAI1B,KAAM,CACP3pD,QAAS,sBAELk1E,IAA0B,EAAAl5E,EAAA,IAAO,MAAO,CAC5C1J,KAAM,cACNqJ,KAAM,kBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO84E,iBAHf,EAI7B,EACDp4E,YACI,CACJyF,QAAS,OACTC,eAAgB,gBAChBtC,QAAS,kBACT,CAAC,MAAM,WAAuB,CAC5Bc,YAAalE,EAAMyT,QAAQ,SAGzB8kE,IAAqB,EAAAn5E,EAAA,IAAO4E,GAAA,EAAP,CAAmB,CAC5C0B,eAAgB,aAEZ,GAAW,IAAI2tE,KAAKC,SAEpBkF,GAAyB,CAACjgD,EAAQkgD,KAC9BlgD,EAAOmD,YAAcnD,EAAOxF,OAAOtiC,cAAcK,QAAQ2nF,IAAgB,EC5DnF,MAAM,GAAY,CAAC,WAAY,YAAa,WAY/BC,IAAmB,EAAAz5E,GAAA,GAAuB,cAAe,CAAC,QAAS,UAC1E05E,IAAgB,EAAAv5E,EAAA,IAAOoF,GAAA,EAAQ,CACnC9O,KAAM,cACNqJ,KAAM,QACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO6rE,OAHzB,EAInB,EACDnrE,YACI,CACJoB,OAAQpB,EAAMoB,OAAOwD,UAEjBg0E,IAAgB,EAAAx5E,EAAA,IAAO0F,GAAA,EAAO,CAClCpP,KAAM,cACNqJ,KAAM,QACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOiC,OAHzB,EAInB,EACDvB,YACI,CACJqB,gBAAiBrB,EAAMK,QAAQiB,WAAWC,MAC1C0B,SAAU,IACVsC,UAAW,IACXE,QAAS,WAELozE,GAAyB,cAAiB,CAAC7mF,EAAOyL,KACtD,IAAIq7E,EAEJ,MAAM,SACJ/vE,EAAQ,UACRrH,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACThT,EAAU82E,IACTK,EAAUC,GAAe,YAAe,GACzCC,EAAkB,eAAkB,KACxCrkE,EAAOljB,QAAQ4hE,iBAAiB,GAC/B,CAAC1+C,IACE3Z,EAAgB,eAAkBjF,KAClC,SAAYA,EAAMqF,MACpBuZ,EAAOljB,QAAQ4hE,iBACjB,GACC,CAAC1+C,IACEskE,EAAY,WAAc,IAAM,CAAC,CACrCxjF,KAAM,OACNyjF,SAAS,GACR,CACDzjF,KAAM,WACNyjF,SAAS,EACTC,MAAO,OACPtgE,GAAI,KACFkgE,GAAY,EAAK,EAEnBK,OAAQ,IAAM,KACZL,GAAY,EAAM,KAElB,IACE/jF,EAAwF,OAA5E6jF,EAAwBlkE,EAAOljB,QAAQmtB,uCAA4C,EAASi6D,EAAsBpnF,QAEpI,OAAKuD,GAIe,SAAK0jF,IAAe,OAAS,CAC/Cl7E,IAAKA,EACL27B,UAAW,eACX13B,WAAW,OAAKA,EAAWE,EAAQupE,OACnCl2E,SAAUA,EACVikF,UAAWA,GACVh+E,EAAO,CACR6N,UAAuB,SAAKwwB,GAAA,EAAmB,CAC7CC,WAAY,YACZT,YAAakgD,EACblwE,UAAuB,SAAK6vE,GAAe,CACzCl3E,UAAWE,EAAQL,MACnB+3E,UAAW,EACXn+E,UAAWF,EACX8N,SAAUgwE,GAAYhwE,SAjBnB,IAoBN,IC3FC,GAAY,CAAC,WAAY,QAAS,MAAO,QAAS,QAAS,WAAY,YAAa,YAAa,iBAAkB,kBAAmB,iBAAkB,sBAAuB,qBAAsB,YAAa,eAAgB,gBAAiB,gBAAiB,UAAW,gBAAiB,eAAgB,gBAChT,GAAa,CAAC,gBAsCdwwE,GAAY,EAChB12E,YAEA,IAAKA,EACH,OAAO,KAGT,MAAM8G,EAAQ,CACZ9G,SAEF,OAAoB,SAAK,MAAO,CAC9BnB,UAAW,mBACXiI,MAAOA,GACP,EAGE6vE,GAAuB,cAAiB,SAAiBxnF,EAAOynF,GACpE,IAAI78D,EAEJ,MAAM,SACJxe,EAAQ,MACR2iC,EAAK,IACL1uB,EAAG,MACHnb,EACAyS,MAAO+vE,EAAS,SAChBx4E,EAAQ,UACR+S,EAAS,UACTvS,EAAS,eACTmT,EAAc,gBACd8kE,EAAe,eACfC,EAAc,oBACdl5C,EAAmB,UACnB0jB,EAAS,aACTC,EAAY,cACZtM,EAAa,cACbgiB,GAAgB,EAAK,QACrB78D,EAAO,cACP28E,EAAa,aACbC,EAAY,aACZC,GACE/nF,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACTnX,EAAM,SAAa,MACnBiX,GAAY,EAAAC,EAAA,KACZy4C,EAAcnd,GAAmBr7B,EAAQF,GACzCqoD,GAAoB,EAAAjoD,EAAA,GAAgBF,EAAQ,MAC5CmxC,GAAY,EAAAjxC,EAAA,GAAgBF,EAAQ,OACpCo/B,GAAY,EAAAl/B,EAAA,GAAgBF,EAAQ,MACpCP,GAAyB,EAAAS,EAAA,GAAgBF,EAAQR,GACjDjG,GAAY,EAAAC,EAAA,GAAW3Q,EAAKg8E,GAC5BO,EAAe9iF,EAAQmd,EAAyB,GAEhD,WACJmyC,EAAU,WACVC,GACkE,OAA/D7pC,EAAwBhI,EAAOljB,QAAQorB,qBAA+BF,EAAwB,CACjG4pC,YAAY,EACZC,YAAY,GAUR7kD,EApFkBrC,KACxB,MAAM,SACJw8C,EAAQ,QACRk+B,EAAO,SACP77E,EAAQ,cACR27D,EAAa,UACb9lD,EAAS,QACTrS,GACErC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,MAAOpB,GAAY,WAAY29C,GAAY,gBAAiBk+B,GAAW,eAAgBlgB,GAAiB,mBAAkC,SAAd9lD,GAAwB,uBAE7J,OAAO,EAAAnS,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAwE9C,CARG,CACjBxD,WACA27D,gBACAn4D,QAAS8S,EAAU9S,QACnBq4E,QAASrlE,EAAOljB,QAAQ4oD,WAAWvZ,KAAWhM,GAAawd,KAC3DwJ,SAAUrnC,EAAU6gB,WAAaV,GAAcwB,IAC/CpiB,cAGF,mBAAsB,KACF,SAAdA,GAAwBxW,EAAI/L,SAAqC,oBAAnBwoF,gBAEhDtlE,EAAOljB,QAAQ2pE,mCAAmCt6B,EAAOtjC,EAAI/L,QAAQmG,aAAcqJ,EACrF,GACC,CAAC0T,EAAQX,EAAW8sB,EAAO7/B,IAC9B,mBAAsB,KACpB,GAAIksD,EAAYhhC,MAAO,CAMrB,MAAM6kB,EAAWr8B,EAAOljB,QAAQ04D,iCAAiCrpB,GAEjD,MAAZkQ,GACFr8B,EAAOljB,QAAQspE,iCAAiC/pB,EAEpD,CAEA,MAAM6rB,EAAcr/D,EAAI/L,QAGxB,IAAKorE,GAFgC,SAAd7oD,GAEyC,oBAAnBimE,eAC3C,OAGF,MAAMC,EAAiB,IAAID,gBAAelvD,IACxC,MAAOovD,GAASpvD,EACV5e,EAASguE,EAAMC,eAAiBD,EAAMC,cAAcjpF,OAAS,EAAIgpF,EAAMC,cAAc,GAAGC,UAAYF,EAAMG,YAAYnuE,OAC5HwI,EAAOljB,QAAQ2pE,mCAAmCt6B,EAAO30B,EAAQlL,EAAS,IAG5E,OADAi5E,EAAeK,QAAQ1d,GAChB,IAAMqd,EAAeM,YAAY,GACvC,CAAC7lE,EAAQw4C,EAAYhhC,MAAOl1B,EAAO+c,EAAW8sB,EAAO7/B,IACxD,MAAMw5E,EAAU,eAAkB,CAACz3D,EAAW03D,IAAgB3kF,KAI9B,IAA1BA,EAAM4F,OAAOg/E,UAAmB5kF,EAAM+F,cAAcnK,SAASoE,EAAM4F,UAKlEgZ,EAAOljB,QAAQ2mD,OAAOtX,KAI3BnsB,EAAOljB,QAAQqtB,aAAakE,EAAWrO,EAAOljB,QAAQ6oC,aAAawG,GAAQ/qC,GAEvE2kF,GACFA,EAAY3kF,GACd,GACC,CAAC4e,EAAQmsB,IACN85C,EAAe,eAAkB7kF,IACrC,MAAMqb,EAAOkyC,GAA+BvtD,EAAM4F,OAAQ,UACpDm3B,EAAgB,MAAR1hB,OAAe,EAASA,EAAK5Y,aAAa,cAGxD,GAAIs6B,EAAO,CAET,GAAIA,IAAU,WACZ,OAIF,GAAIA,IAAUqd,GACZ,OAIF,GAAc,gBAAVrd,EACF,OAIF,GAAIne,EAAOljB,QAAQkmD,YAAY7W,EAAOhO,KAAW+B,GAAcyd,KAC7D,OAMF,GAFe39B,EAAOljB,QAAQ2lC,UAAUtE,GAE7BxnB,OAAS8vB,GAClB,MAEJ,CAEAq/C,EAAQ,WAAYx9E,EAApBw9E,CAA6B1kF,EAAM,GAClC,CAAC4e,EAAQ1X,EAASw9E,EAAS35C,IACxB+5C,EAAU,eAAkB,CAACviD,EAAQggB,KACzC,IAAIxhC,EAEJ,MAAMutB,EAAa1vB,EAAOljB,QAAQglC,cAAcqK,EAAOxI,EAAOxF,OACxDgoD,EAAa,GACbC,EAAoBtmE,EAAUumE,sBAAwB1iD,EAAO2iD,iBAAmBxmE,EAAUymE,iBAAmBp1B,EAAU30D,QAAU4iD,EAAY,GAAK5yB,OAAOC,KAAK02B,GAAe3mD,OAAS,EAExLmnC,EAAOgtB,eACTw1B,EAAWvgF,MAAK,OAAqC,mBAAzB+9B,EAAOgtB,cAA+BhtB,EAAOgtB,cAAcjhB,GAAc/L,EAAOgtB,gBAG9G,MAAM61B,EAAgBrjC,EAAchX,GAASgX,EAAchX,GAAOxI,EAAOxF,OAAS,KAClF,IAAIoC,EAAU,KAGZ,IAAIkmD,EADe,MAAjBD,GAAyB7iD,EAAOsD,aAGlC1G,EAAUoD,EAAOsD,YAAW,OAAS,CAAC,EAAGyI,EAAY,CACnDhuB,IAAK1B,EAAOljB,WAGdqpF,EAAWvgF,MAAK,OAAK,0BAA+E,OAA3C6gF,EAAqB3mE,EAAU9S,cAAmB,EAASy5E,EAAmB,yBAGzI,GAAqB,MAAjBD,GAAyB7iD,EAAO5D,eAAgB,CAClD,IAAI2mD,EAEJ,IAAIC,EAAalpE,EAEbuC,EAAOljB,QAAQqxD,mCAEjBw4B,EAAa3mE,EAAOljB,QAAQqxD,iCAAiChiB,EAAOxI,EAAOxF,QAG7E,MAAMyoD,GAAoB,OAA8BJ,EAAe,IAEjExyE,GAAS,OAAS,CAAC,EAAG07B,EAAY,CACtCjyB,IAAKkpE,GACJC,EAAmB,CACpBllE,IAAK1B,EAAOljB,UAGdyjC,EAAUoD,EAAO5D,eAAe/rB,GAEhCmyE,EAAWvgF,MAAK,OAAK,qBAA2E,OAA5C8gF,EAAsB5mE,EAAU9S,cAAmB,EAAS05E,EAAoB,kBACtI,CAEI5mE,EAAU+mE,kBAEZV,EAAWvgF,KAAKka,EAAU+mE,iBAAiBn3C,IAG7C,MAAMrR,EAAyB,OAAdmxB,GAAsBA,EAAUzwD,KAAOotC,GAASqjB,EAAUrxB,QAAUwF,EAAOxF,MACtFj1B,EAA4B,OAAjBumD,GAAyBA,EAAa1wD,KAAOotC,GAASsjB,EAAatxB,QAAUwF,EAAOxF,OAAiC,SAAxBuR,EAAWgO,SAAsB,GAAK,EACpJ,OAAoB,SAAK59B,EAAUsC,WAAWwe,MAAM,OAAS,CAC3DxhC,MAAOswC,EAAWtwC,MAClB++B,MAAOwF,EAAOxF,MACdlwB,MAAO01C,EAAU11C,MACjBk+B,MAAOA,EACP30B,OAAQ6H,EACRyyD,gBAAiBnuB,EAAUmuB,gBAC3BzvC,eAAgBqN,EAAWrN,eAC3BxH,MAAO8I,EAAO9I,OAAS,OACvB6iB,SAAUhO,EAAWgO,SACrB5B,SAAU6H,EAAUmjC,0BACpBziC,WAAY3U,EAAW2U,WACvBhmB,SAAUA,EACVn1B,SAAUA,EACV4D,WAAW,OAAKq5E,GAChB3pB,QAAS7Y,EAAU6Y,QACnB4pB,kBAAmBA,GACqC,OAAtDjkE,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB1F,KAAM,CACpGtI,SAAUosB,IACRoD,EAAOxF,MAAM,GAChB,CAACne,EAAQyvC,EAActM,EAAeqM,EAAW1vC,EAAWrC,EAAK4B,EAAW8sB,EAAOiT,EAAW+R,EAAU30D,SACrGy/D,GAAQj8C,EAAOljB,QAAQwpE,6BAA6Bn6B,GAC1D,IAAIv7B,GAAYyO,EAEhB,GAAkB,SAAdzO,IAAwBqrD,GAAO,CACjC,IAAI8qB,EAAoB,EACxB,MAAMC,EAAcx6D,OAAO4J,QAAQ6lC,IAAOh0D,QAAO,CAACC,GAAMzB,EAAKoH,KACtC,aAAag3D,KAAKp+D,IAMvCsgF,GAAqB,EAEjBl5E,EAAO3F,EACF2F,EAGF3F,GATEA,GAUR,GAEC8+E,EAAc,GAAKD,EAAoB,IACzCn2E,GAAYo2E,EAEhB,CAEA,MAAMjyE,IAAQ,OAAS,CAAC,EAAG+vE,EAAW,CACpCn0E,UAAyB,SAAd0O,EAAuB,OAASA,EAE3CzO,eAGF,GAAa,MAATqrD,IAAiBA,GAAMmJ,WAAY,CAErCrwD,GAD8C,WAA7B+K,EAAUmnE,eAA8B,iBAAmB,aAC1DhrB,GAAMmJ,UAC1B,CAEA,GAAa,MAATnJ,IAAiBA,GAAMoJ,cAAe,CACxC,MAAM6hB,EAAwC,WAA7BpnE,EAAUmnE,eAA8B,oBAAsB,eAC/E,IAAInvB,EAAgB/iD,GAAMmyE,GAEG,iBAAlBpvB,IACTA,EAAgB5wC,SAAS4wC,GAAiB,IAAK,KAGjDA,GAAiBmE,GAAMoJ,cACvBtwD,GAAMmyE,GAAYpvB,CACpB,CAEA,MAAMqvB,GAAgBnnE,EAAOljB,QAAQk4B,6BAA6B,eAAgB,GAAImX,GAEtF,GAAyC,mBAA9BrsB,EAAUsnE,gBAAgC,CACnD,IAAIC,GAEJ,MAAMpiB,EAA6B3iE,IAAsD,OAA3C+kF,GAAqB7uB,EAAYhhC,YAAiB,EAAS6vD,GAAmBlsC,gBAAkB,GAExIgL,GAAY,OAAS,CAAC,EAAGnmC,EAAOljB,QAAQ6oC,aAAawG,GAAQ,CACjE+4B,eAA+C,IAA/BD,EAChBE,cAAeF,IAA+BzM,EAAYvd,KAAKz+C,OAAS,EACxEyoE,+BAGFkiB,GAAcvhF,KAAKka,EAAUsnE,gBAAgBjhC,GAC/C,CAEA,MAAMmhC,IAAe,SAAoB,IAAO,GAAI,IAC9CC,GAAQ,GAEd,IAAK,IAAIhrF,EAAI,EAAGA,EAAIwoF,EAAgBvoF,OAAQD,GAAK,EAAG,CAClD,MAAMonC,EAASohD,EAAgBxoF,GACzBuqF,EAA4Bh7C,EAAsBvvC,EAClDirF,EAAeV,IAA8B7mE,EAAezjB,OAAS,EAErEs1E,EAAmB0V,IADKA,GAAgB51B,IAAeC,IACqC/xC,EAAU2nE,0BAApE3nE,EAAU4nE,oBAC5Ct7C,EAAkBpsB,EAAOljB,QAAQuvC,4BAA4BF,EAAO26C,GAE1E,GAAI16C,IAAoBA,EAAgBE,iBACtC,GAAI7uB,EAAK,CACP,MAAM,QACJ++C,EAAO,MACPvuD,GACEm+B,EAAgBuX,UACdA,EAAY,CAChB11C,QACAuuD,UACAsV,kBACAgV,6BAEFS,GAAM3hF,KAAKsgF,EAAQviD,EAAQggB,GAC7B,KAAO,CACL,MAAM,MACJ11C,GACEm+B,EAAgBuX,UACdgkC,EAAezjF,KAAK21B,MAAMytD,MAChCC,GAAM3hF,MAAmB,SAAKka,EAAUsC,WAAWwlE,aAAc,CAC/D35E,MAAOA,EACP05E,aAAcA,EACdxpD,MAAOwF,EAAOxF,MACdtD,MAAO8I,EAAO9I,OACb8I,EAAOxF,OACZ,CAEJ,CAEA,MAAM0pD,GAAiB7C,EAAiB7c,EAClC2f,GAAgBrqE,EAAM,CAC1BnV,QAAS29E,EACThB,cAAea,EAAQ,iBAAkBb,GACzCC,aAAcY,EAAQ,gBAAiBZ,GACvCC,aAAcW,EAAQ,gBAAiBX,IACrC,KACJ,OAAoB,UAAM,OAAO,OAAS,CACxCt8E,IAAK0Q,EACL,UAAW4yB,EACX,gBAAiB7pC,EACjB0G,KAAM,MACN8D,WAAW,UAAQq6E,GAAen6E,EAAQpC,KAAMkC,GAChD,gBAAiBs4E,EACjB,gBAAiB57E,EACjBuL,MAAOA,IACN+yE,GAAexhF,EAAO,CACvB6N,SAAU,CAACozE,GAAOM,GAAiB,IAAkB,SAAKlD,GAAW,CACnE12E,MAAO45E,QAGb,IC/YM,GAAY,CAAC,gBAINE,GAAsC,QAAW,SAAkC3qF,GAC9F,MAAM,aACJ0kE,GACE1kE,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C0iB,GAAY,EAAAC,EAAA,MACXioE,GAAqBlmB,EACtBmmB,EAA6B,QAAtBD,EAA8BloE,EAAUsC,WAAW8lE,0BAA4BpoE,EAAUsC,WAAW+lE,2BACjH,OAAOF,GAAoB,SAAKA,GAAM,OAAS,CAAC,EAAG3hF,IAAU,IAC/D,ICdM,GAAY,CAAC,QAAS,WAAY,aAQ3B+b,GAA4B,cAAiB,SAAsBjlB,EAAOyL,GACrF,MAAM,MACJwY,GACEjkB,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACTooE,EAAepoE,EAAOljB,QAAQ+5B,cAAc,4BAC5CxX,GAAY,EAAAa,EAAA,GAAgBF,EAAQZ,GAC1C,OAAoB,SAAK+4D,IAAa,OAAS,CAC7CtvE,IAAKA,EACL+oE,GAAI,CACF3jE,MAAO,OACP2C,UAAW,EAAIyO,IAEhB/Y,EAAO,CACR6N,UAAoB,MAATkN,OAAgB,EAASA,EAAMQ,UAAYumE,IAE1D,ICvBaC,GAAoC,cAAiB,SAA8BjrF,EAAOyL,GACrG,MACM4hE,GADS,SACsB3tE,QAAQ+5B,cAAc,yBAC3D,OAAoB,SAAKshD,IAAa,OAAS,CAC7CtvE,IAAKA,GACJzL,EAAO,CACR+W,SAAUs2D,IAEd,ICAM6d,GAAqC,CACzCC,oBAAqB,MACrBC,qBAAsB,MACtBC,eAAgB,MAChBC,qBAAsB,MACtBlH,sBAAuB,MACvBmH,mBAAoB,MACpBC,mBAAoB,MACpBC,mBAAoBd,GACpBG,0BAA2B,MAC3BC,2BAA4B,MAC5BW,iBAAkB,MAClBC,mBAAoB,MACpBC,oBAAqB,MACrBC,uBAAwB,MACxBC,WAAY,MACZ5iD,gBAAiB,MACjB6iD,qBAAsB,MACtBC,mBAAoB,MACpBC,6BAA8B,MAC9BC,2BAA4B,MAC5BC,sBAAuB,MACvBC,wBAAyB,MACzBC,eAAgB,MAChBC,gBAAiB,MACjBC,qBAAsB,OAMXC,IAAqC,OAAS,CAAC,EAAGtB,GAAoC,CACjGuB,aAAc,KACdxtD,cAAe,KACfklD,gBAAiB,KACjBpgD,WAAY,KACZ2oD,WAAY,GACZ1H,WAAY,KACZ2H,YAAa,KACbxlD,WAAY,KACZ3D,KjDJF,SAAkBxjC,GAGhB,MAAM,MACJy9B,EAAK,SACL1mB,EAAQ,SACR2nC,EAAQ,SACR4B,EAAQ,MACRvf,EAAK,eACLkE,EAAc,SACdhE,EAAQ,OACR7mB,EAAM,WACN6sC,EAAU,MACVlY,EAAK,SACLjjC,EAAQ,MACR9J,EAAK,MACL6O,EAAK,UACLnB,EAAS,gBACTglE,EAAe,QACftV,EAAO,kBACP4pB,EAAiB,QACjB99E,EAAO,cACP28E,EAAa,YACb58E,EAAW,UACX2hF,EAAS,UACTzjF,EAAS,YACT0jF,EAAW,WACXC,GACE9sF,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C+sF,EAAkC,MAAlB9nD,EAAyBjjC,EAAQijC,EACjD+nD,EAAU,SAAa,MACvBzuD,EAAkB,SAAa,MAC/B3b,GAAS,SAETrV,EAAa,CACjBkwB,QACAi3C,kBACAztB,aACAr3C,SALgB,EAAA+S,EAAA,KAKG/S,SAEfA,EAAU,GAAkBrC,GAC5B0/E,EAAiB,eAAkBh8D,GAAajtB,IACpD,MAAM4S,EAASgM,EAAOljB,QAAQglC,cAAcqK,EAAOhO,GAAS,IAC5Dne,EAAOljB,QAAQqtB,aAAakE,EAAWra,EAAQ5S,GAE3C4oF,GACFA,EAAU5oF,EACZ,GACC,CAAC4e,EAAQme,EAAO6rD,EAAW79C,IACxBm+C,EAAmB,eAAkBj8D,GAAajtB,IACtD,MAAM4S,EAASgM,EAAOljB,QAAQglC,cAAcqK,EAAOhO,GAAS,IAC5Dne,EAAOljB,QAAQqtB,aAAakE,EAAWra,EAAQ5S,GAE3CiH,GACFA,EAAYjH,EACd,GACC,CAAC4e,EAAQme,EAAO91B,EAAa8jC,IAC1B25C,EAAU,eAAkB,CAACz3D,EAAW03D,IAAgB3kF,IAE5D,IAAKA,EAAM+F,cAAcnK,SAASoE,EAAM4F,QACtC,OAIF,IAAKgZ,EAAOljB,QAAQ2mD,OAAOtX,GACzB,OAGF,MAAMn4B,EAASgM,EAAOljB,QAAQglC,cAAcqK,EAAOhO,GAAS,IAC5Dne,EAAOljB,QAAQqtB,aAAakE,EAAWra,EAAQ5S,GAE3C2kF,GACFA,EAAY3kF,EACd,GACC,CAAC4e,EAAQme,EAAOgO,IACbp3B,EAAQ,CACZ1G,SAAUJ,EACVE,SAAUF,EACV2C,UAAW4G,EACX7G,UAAsB,SAAX6G,EAAoB,OAASA,GAG1C,aAAgB,KACd,IAAK6mB,GAAYqf,IAAaxd,GAAcyd,KAC1C,OAGF,MAAM34B,GAAM,EAAAC,GAAA,GAAcjF,EAAOljB,QAAQyjB,eAAezjB,SAExD,GAAIstF,EAAQttF,UAAYstF,EAAQttF,QAAQE,SAASgoB,EAAI9nB,eAAgB,CACnE,MAAMqtF,EAAmBH,EAAQttF,QAAQsF,cAAc,kBACjDooF,EAAiB7uD,EAAgB7+B,SAAWytF,GAAoBH,EAAQttF,QAE9E,QA5HgC8L,IAAhCipE,IACF50E,SAAS0nB,cAAc,OAAOxiB,MAAM,CAC9BqjC,oBAEF,OADAqsC,IAA8B,GACvB,CACT,IAKGA,GAmHD2Y,EAAeroF,MAAM,CACnBqjC,eAAe,QAEZ,CACL,MAAMilD,EAAiBzqE,EAAOljB,QAAQuqE,oBACtCmjB,EAAeroF,QACf6d,EAAOljB,QAAQsqE,OAAOqjB,EACxB,CACF,IACC,CAACpsD,EAAUqf,EAAU19B,IACxB,IAAInZ,EAAcP,EAAMqC,QAqBxB,MACM+hF,EAAkC,YADzB1qE,EAAOljB,QAAQ2lC,UAAUtE,GACTxnB,KAqBzBg0E,EAAyBvE,EAAoB,KAAO,CACxD6D,YAAanE,EAAQ,gBAAiBmE,GACtCC,WAAYpE,EAAQ,eAAgBoE,IAEtC,OAAoB,SAAK,OAAO,OAAS,CACvCrhF,IAAKuhF,EACLt9E,WAAW,OAAKA,EAAWE,EAAQpC,MACnC5B,KAAM,OACN,aAAcm1B,EACd,gBAAiB2d,EACjB,gBAAiBA,EAAW,EAC5B,eAAgB0gB,EAChBznD,MAAOA,EACP7L,SAAwB,SAAbw0C,GAAwB2G,GAAgBqmC,GAA8B,EAAZxhF,EACrEZ,QAASw9E,EAAQ,YAAax9E,GAC9B28E,cAAea,EAAQ,kBAAmBb,GAC1C58E,YAAaiiF,EAAiB,iBAC9BN,UAAWK,EAAe,eAC1B9jF,UAAWu/E,EAAQ,cAAev/E,IACjCokF,EAAwBrkF,EAAO,CAChCqC,QAAS9B,EACTsN,SAxCqB,MACrB,GAAgB,MAAZA,EAAkB,CACpB,MAAMy2E,EAA+B,MAAjBT,OAAwB,EAASA,EAAc/3D,WACnE,OAAoB,SAAK,MAAO,CAC9Bvd,MAAO+1E,EACP99E,UAAWE,EAAQuzB,QACnBpsB,SAAUy2E,GAEd,CAEA,OAAkB,iBAAqBz2E,IAAau2E,EAC9B,eAAmBv2E,EAAU,CAC/CwnB,oBAIGxnB,CAAQ,EAwBL02E,KAEd,EiDvKEjD,a7C/BF,SAA0BxqF,GACxB,MAAM,MACJy9B,EAAK,MACL5sB,EAAK,aACL05E,GACEvqF,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAG7CuN,EAAa,CACjBqC,SAFgB,EAAA+S,EAAA,KAEG/S,QACnB6tB,SAEI7tB,EAAU,GAAkBrC,GAClC,OAAoB,SAAK,OAAO,OAAS,CACvCmC,UAAWE,EAAQpC,KACnBmK,MAAO,CACL9G,UAED3H,EAAO,CACR6N,UAAuB,SAAK,GAAU,CACpClG,MAAO,GAAG05E,SAGhB,E6CQEmD,6B3C9BF,SAA0C1tF,GACxC,IAAI+kB,EAEJ,MAAM,QACJ4oE,EAAO,MACP5sD,EAAK,QACL71B,GACElL,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KAEZpV,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC4P,QAAS8S,EAAU9S,UAGfA,EAAU,GAAkBrC,GAC5BqgF,EAAe,eAAkB5pF,IACrCA,EAAMuF,iBACNvF,EAAMwF,kBACN,MAAM,KACJlH,EAAI,iBACJk/D,IACE,QAAiC5+C,EAAOljB,QAAQkE,OAEhDtB,GAAQk/D,IAAqB,aAC/B5+C,EAAOljB,QAAQqjE,kBAEfngD,EAAOljB,QAAQgjE,kBAGbx3D,GACFA,EAAQ0X,EAAOljB,QAAQoyD,sBAAsB/wB,GAAQ/8B,EACvD,GACC,CAAC4e,EAAQme,EAAO71B,IAEnB,IAAKyiF,EACH,OAAO,KAGT,MAAME,GAA0B,SAAK77E,GAAA,EAAY,CAC/C9G,QAAS0iF,EACTngF,MAAO,UACP,aAAcmV,EAAOljB,QAAQ+5B,cAAc,4BAC3ChpB,KAAM,QACN3E,UAAW,EACXiL,UAAuB,SAAK2L,EAAUsC,WAAWumE,mBAAoB,CACnE77E,UAAWE,EAAQsJ,KACnBtK,SAAU,YAId,OAAoB,SAAK8T,EAAUsC,WAAW2nE,aAAa,OAAS,CAClEl1E,MAAOmL,EAAOljB,QAAQ+5B,cAAc,mCAA7B7W,CAAiE+qE,GACxEG,WAAY,KAC4C,OAAtD/oE,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBgpE,YAAa,CAC3Gh3E,UAAuB,UAAMo/D,GAAyB,CACpDp/D,SAAU,CAAC42E,EAAU,IAAkB,SAAKK,GAAA,EAAO,CACjDC,aAAcN,EACdlgF,MAAO,UACPsJ,SAAU82E,IACI,IAAZF,GAAiBE,OAG3B,E2ChCEK,WAAY7W,GACZpyD,aAAY,GACZoI,OAAQ6qD,GACR7yD,OAAQqzD,GACRG,QAAS,KACTF,iBAAkBI,GAClBjtD,eAAgBkvD,GAChBpvD,iBAAkBq/D,GAClBv/D,cAAeuvD,GACfxC,WAAY0G,GACZ7b,YAAaghB,GACbxpB,aNFF,SAA0B96D,GACxB,IAAI+kB,EAAuB0G,EAAwB+1D,EAEnD,MAAM5+D,GAAS,SACTurE,EAAiB,SAAa,MAC9BvhD,GAAU,EAAA9pB,EAAA,GAAgBF,EAAQ,MAClCwoB,GAAwB,EAAAtoB,EAAA,GAAgBF,EAAQ,MAChDF,GAAY,EAAAC,EAAA,MACX8jE,EAAa2H,GAAkB,WAAe,IAC/C7gF,EAAa,CACjBqC,QAAS8S,EAAU9S,SAEfA,EAAU,GAAkBrC,IAE5B,KACJo3D,EAAI,gBACJ0pB,EAAkB7H,GAAsB,qBACxC8H,GAAuB,GACrBtuF,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7CuuF,EAAgB,WAAc,KAClC,OAAQ5pB,GACN,IAAK,MACH,MAAO,IAAI/3B,GAAS+3B,MAAK,CAAChwB,EAAGtC,IAAM,GAASqxC,QAAQ/uC,EAAEjL,YAAciL,EAAE5T,MAAOsR,EAAE3I,YAAc2I,EAAEtR,SAEjG,IAAK,OACH,MAAO,IAAI6L,GAAS+3B,MAAK,CAAChwB,EAAGtC,KAAO,GAASqxC,QAAQ/uC,EAAEjL,YAAciL,EAAE5T,MAAOsR,EAAE3I,YAAc2I,EAAEtR,SAElG,QACE,OAAO6L,EACX,GACC,CAACA,EAAS+3B,IAEPoS,EAAe/yE,IACnB,MACEN,KAAMq9B,GACJ/8B,EAAM4F,OACVgZ,EAAOljB,QAAQ85D,oBAAoBz4B,GAAwC,IAAjCqK,EAAsBrK,GAAiB,EAG7EytD,EAAmB,eAAkB/0B,IACzC,GAAI72C,EAAOljB,QAAQi1B,gBAAgBiY,QAAQmD,6BAA8B,CACvE,MAAM0+C,GAAe,QAAkC7rE,GAEjDiqC,GAAW,OAAS,CAAC,EAAG4hC,GAY9B,OAVA7hD,EAAQ/lB,SAAQuyC,IACVA,EAAI4d,WACFvd,SAEK5M,EAASuM,EAAIr4B,OAEpB8rB,EAASuM,EAAIr4B,QAAS,EAE1B,IAEKne,EAAOljB,QAAQs2C,yBAAyB6W,EACjD,CAGA,OAAOjqC,EAAOljB,QAAQ45D,cAAc1sB,EAAQ/1B,KAAIuiD,IACzB,IAAjBA,EAAI4d,SACC,CACLj2C,MAAOq4B,EAAIr4B,MACXuM,MAAOmsB,GAIJL,IACN,GACF,CAACx2C,EAAQgqB,IACN8hD,EAA0B,eAAkB1qF,IAChDoqF,EAAepqF,EAAM4F,OAAO5H,MAAM,GACjC,IACG2sF,EAAiB,WAAc,KACnC,IAAKlI,EACH,OAAO8H,EAGT,MAAMK,EAAqBnI,EAAYhoF,cACvC,OAAO8vF,EAAc5vF,QAAO4nC,GAAU8nD,EAAgB9nD,EAAQqoD,IAAoB,GACjF,CAACL,EAAe9H,EAAa4H,IAC1BQ,EAAiB,SAAa,MACpC,aAAgB,KACVP,EACFH,EAAezuF,QAAQqF,QACd8pF,EAAenvF,SAAmD,mBAAjCmvF,EAAenvF,QAAQqF,OACjE8pF,EAAenvF,QAAQqF,OACzB,GACC,CAACupF,IACJ,IAAIQ,GAA2B,EAE/B,MAAMC,EAAwBxoD,IACK,IAA7BuoD,IAA0D,IAApBvoD,EAAOywC,WAC/C8X,GAA2B,GACpB,GAMX,OAAoB,UAAM7O,IAAkB,OAAS,CAAC,EAAG/2E,EAAO,CAC9D6N,SAAU,EAAc,SAAKmvE,GAAiB,CAC5CnvE,UAAuB,SAAK2L,EAAUsC,WAAWia,eAAe,OAAS,CACvEz9B,MAAOohB,EAAOljB,QAAQ+5B,cAAc,8BACpCyF,YAAatc,EAAOljB,QAAQ+5B,cAAc,oCAC1Cz2B,SAAUmrF,EACVnsF,MAAOykF,EACPxkF,SAAUysF,EACV90E,QAAS,WACTvJ,WAAW,GAC6C,OAAtD0U,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBsa,mBACjF,SAAKqgD,GAAkB,CACtC3oE,UAAuB,SAAKsvE,GAAsB,CAChD32E,UAAWE,EAAQpC,KACnBuJ,SAAU43E,EAAe93E,KAAI0vB,IAC3B,IAAI/a,EAEJ,OAAoB,UAAM86D,GAAyB,CACjD52E,UAAWE,EAAQw2E,gBACnBrvE,SAAU,EAAc,SAAK,GAAkB,CAC7CwuE,SAAsB,SAAK7iE,EAAUsC,WAAW0nE,YAAY,OAAS,CACnE3rF,UAA8B,IAApBwlC,EAAOywC,SACjBh5D,SAAiD,IAAxCotB,EAAsB7E,EAAOxF,OACtC71B,QAAS6rE,EACTrzE,KAAM6iC,EAAOxF,MACbtwB,KAAM,QACNzN,SAAU+rF,EAAsBxoD,GAAUsoD,OAAiBrjF,GACF,OAAvDggB,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBwjE,aAClGxtF,MAAO+kC,EAAOmD,YAAcnD,EAAOxF,SAChCre,EAAUumE,sBAAwB9C,KAA0C,SAAKI,GAAoB,CACxG0I,WAAW,EACX,aAAcrsE,EAAOljB,QAAQ+5B,cAAc,6BAC3ChiB,MAAOmL,EAAOljB,QAAQ+5B,cAAc,6BACpChpB,KAAM,QACN1P,UAAU,EACVgW,UAAuB,SAAK,MAAc,CAAC,OAE5CwvB,EAAOxF,MAAM,SAGL,UAAM8+C,GAAiB,CACtC9oE,SAAU,EAAc,SAAK2L,EAAUsC,WAAWggE,YAAY,OAAS,CACrE95E,QAAS,IAAMsjF,GAAiB,IACyB,OAAvD/iE,EAAyB/I,EAAUrN,sBAA2B,EAASoW,EAAuBy5D,WAAY,CAC5GnuE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,iCACvB,SAAK/W,EAAUsC,WAAWggE,YAAY,OAAS,CAC/D95E,QAAS,IAAMsjF,GAAiB,IACyB,OAAvDhN,EAAyB9+D,EAAUrN,sBAA2B,EAASmsE,EAAuB0D,WAAY,CAC5GnuE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,sCAI/C,EMvJEy/C,MAAO2N,GACPxiD,IAAKmjD,KChED0H,GAAyB,CAC7BtsE,YAAQpX,EACRivC,iCAAiC,EACjCuZ,+BAA+B,EAC/BxwC,0BAA0B,EAC1Bo4C,oBAAgBpwD,EAChB8sE,oBAAoB,EACpBr/B,YAAY,EACZ+e,8BAA8B,EAC9BixB,sBAAsB,EACtBkG,qBAAqB,EACrBC,oCAAoC,EACpCv6D,UAAW,YAOAw6D,GAAiC,CAC5CpwE,YAAY,EACZ+jC,cAAc,EACd0Q,mBAAmB,EACnBsE,8BAA8B,EAC9BzoB,aAAc,EACd+/C,UAAW,EACXC,gBAAiB,EACjBC,aAAc,EACd3tE,QAASouB,GAAiBw/C,SAC1BpF,2BAA2B,EAC3BzT,qBAAqB,EACrBjtC,mBAAmB,EACnB8sC,uBAAuB,EACvBiZ,wBAAwB,EACxBj1C,iCAAiC,EACjCj3B,0BAA0B,EAC1BwwC,+BAA+B,EAC/B0B,yBAAyB,EACzBrpC,uBAAuB,EACvBqgC,6CAA6C,EAC7CnpB,SAAUV,GAAcW,KACxBy+B,WAAYxoB,GACZt3B,aAAc,GACdiL,YAAY,EACZorD,sBAAsB,EACtBF,oBAAoB,EACpBF,4BAA4B,EAC5B10D,OAAQ8K,QACRF,SAAkD,QAClD2qB,YAAY,EACZ6E,eAAgBrE,GAChBx3B,UAAW,GACX28D,mBAAoB,CAAC,GAAI,GAAI,KAC7BiL,eAAgB,SAChBS,qBAAqB,EACrBqF,uBAAuB,EACvBjrB,aAAc,CAAC,MAAO,OAAQ,MAC9BE,YAAanrB,GACbmiB,eAAgB,EAChBqtB,sBAAsB,EACtBkG,qBAAqB,EACrB/3B,6BAA6B,EAC7Bg4B,oCAAoC,GCjEhC,GAAY,CAAC,aAmBbQ,IAAsB,EAAAxiF,EAAA,IAAO,MAAO,CACxC1J,KAAM,cACNqJ,KAAM,kBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOuiF,iBAHnB,CAIzB,CACD78E,SAAU,OAEV9D,SAAU,WACV,eAAgB,CACd8D,SAAU,YAGR88E,GAAmC,cAAiB,SAA6B9vF,EAAOyL,GAC5F,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EAhCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,oBAEoB,IAAyBoC,EAAQ,EAyB9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAKggF,IAAqB,OAAS,CACrDnkF,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,GACL,IC9CM,GAAY,CAAC,YAAa,SAoB1B6mF,IAA6B,EAAA3iF,EAAA,IAAO,MAAO,CAC/C1J,KAAM,cACNqJ,KAAM,yBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO0iF,wBAHZ,CAIhC,CAAC,GACEC,GAA0C,cAAiB,SAAoCjwF,EAAOyL,GAC1G,MAAM,UACJiE,EAAS,MACTiI,GACE3X,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C0iB,GAAY,EAAAC,EAAA,KAKZ/S,EA5BkBrC,KACxB,MAAM,QACJqC,EAAO,kBACPsgF,GACE3iF,EACEsC,EAAQ,CACZrC,KAAM,CAAC,yBAA0B0iF,GAAqB,uCAExD,OAAO,EAAApgF,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAoB9C,CAJG,CACjBA,QAAS8S,EAAU9S,QACnBsgF,mBAAoBxtE,EAAUzD,YAA6D,UAArC,MAATtH,OAAgB,EAASA,EAAMnE,aAG9E,OAAoB,SAAKu8E,IAA4B,OAAS,CAC5DtkF,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,GAC9BiI,MAAOA,GACNzO,GACL,IC3CM,GAAY,CAAC,aAmBbinF,IAAgC,EAAA/iF,EAAA,IAAO,MAAO,CAClD1J,KAAM,cACNqJ,KAAM,4BACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO8iF,2BAHT,CAInC,CACDlhF,SAAU,WACVuE,QAAS,OAETwN,cAAe,WAEXovE,GAA6C,cAAiB,SAAuCrwF,EAAOyL,GAChH,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EA9BkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,8BAEoB,IAAyBoC,EAAQ,EAuB9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAKugF,IAA+B,OAAS,CAC/D1kF,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,GACL,I,gBC5CA,MAAM,GAAY,CAAC,SAmBZ,SAASonF,GAAaC,EAAQ57B,EAAW67B,EAAa,EAAGC,EAAW97B,EAAUv1D,QACnF,GAAIu1D,EAAUv1D,QAAU,EACtB,OAAQ,EAGV,GAAIoxF,GAAcC,EAChB,OAAOD,EAGT,MAAME,EAAQF,EAAa1pF,KAAK6qC,OAAO8+C,EAAWD,GAAc,GAEhE,OAAOD,GADY57B,EAAU+7B,GACCJ,GAAaC,EAAQ57B,EAAW67B,EAAYE,GAASJ,GAAaC,EAAQ57B,EAAW+7B,EAAQ,EAAGD,EAChI,CAaO,MAAME,GAAuB,EAClCC,aACAC,YACAC,SACAC,gBACAC,kBAEO,EAAC,SAAMJ,EAAaE,EAAQC,EAAeC,IAAe,SAAMH,EAAYC,EAAQC,EAAeC,IAW/FC,GAAyBjxF,IACpC,IAAIkxF,EAAqBC,EAEzB,MAAMvuE,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZE,GAAiB,EAAAC,EAAA,GAAgBF,EAAQ,OACzC,IACJnX,EAAG,sBACH4gB,EAAqB,wBACrB+kE,EAAuB,yBACvBC,EAA2B,EAAC,yBAC5BC,EAA2BzuE,EAAezjB,OAAM,YAChDmyF,GACEvxF,EACEypE,GAAkB,EAAA3mD,EAAA,GAAgBF,EAAQ,MAC1CmoD,GAAoB,EAAAjoD,EAAA,GAAgBF,EAAQ,MAC5CX,GAAY,EAAAa,EAAA,GAAgBF,EAAQZ,GACpCowC,GAAY,EAAAtvC,EAAA,GAAgBF,EAAQ,OACpCyvC,GAAe,EAAAvvC,EAAA,GAAgBF,EAAQ,OACvC8yB,GAAW,EAAA5yB,EAAA,GAAgBF,EAAQ6yB,IACnCsQ,GAAgB,EAAAjjC,EAAA,GAAgBF,EAAQwiC,IACxCosC,GAAqB,EAAA1uE,EAAA,GAAgBF,EAAQ,OAC7Cw4C,EAAcnd,GAAmBr7B,EAAQF,GACzC+uE,EAAgB,SAAa,MAC7BhoE,EAAU,SAAa,MACvBtN,GAAY,EAAAC,EAAA,GAAW3Q,EAAKge,IAC3B+hD,EAAekmB,GAAoB,WAAe,MACnDC,EAAoB,SAAanmB,GACjC6hB,EAAiB,SAAa,CAClCl+E,IAAK,EACL4O,KAAM,KAED6zE,EAAqBC,GAA0B,WAAe,CACnEhhF,MAAO,KACPuJ,OAAQ,OAEJ03E,EAAiB,SAAa/mB,GAC9BgnB,EAA0B,eAAkBxB,IAChD,IAAItG,EAAoB+H,EAExB,MAAMC,EAAqCrvE,EAAOljB,QAAQqpE,mCAC1D,IAAImpB,EAAkBD,IAAuC5kD,IAEb,OAA3C48C,EAAqB7uB,EAAYhhC,QAAkB6vD,EAAmBjsC,eAAiBk0C,IAE1FA,EAAkBD,GAAsC72B,EAAYhhC,MAAM4jB,cAG5E,MAAMm0C,GAAyC,SAAMF,IAAoF,OAA5CD,EAAsB52B,EAAYhhC,YAAiB,EAAS43D,EAAoBj0C,gBAAkB,GAAI,EAAGrI,EAASif,UAAUv1D,QAEzN,OAAI8yF,GAAmBx8C,EAASif,UAAUw9B,IAA2C5B,EAG5ED,GAAaC,EAAQ76C,EAASif,WAlF3C,SAA2B47B,EAAQ57B,EAAWzvD,GAC5C,IAAIktF,EAAW,EAEf,KAAOltF,EAAQyvD,EAAUv1D,QAAUu1D,EAAUzvD,GAASqrF,GACpDrrF,GAASktF,EACTA,GAAY,EAGd,OAAO9B,GAAaC,EAAQ57B,EAAW7tD,KAAK6qC,MAAMzsC,EAAQ,GAAI4B,KAAKglC,IAAI5mC,EAAOyvD,EAAUv1D,QAC1F,CAgFWizF,CAAkB9B,EAAQ76C,EAASif,UAAWw9B,EAAuC,GAC3F,CAACvvE,EAAqD,OAA5CsuE,EAAsB91B,EAAYhhC,YAAiB,EAAS82D,EAAoBnzC,cAA4D,OAA5CozC,EAAsB/1B,EAAYhhC,YAAiB,EAAS+2D,EAAoBnzC,aAActI,EAASif,YAC9M29B,EAAuB,eAAkB,KAC7C,GAAIjmE,EACF,MAAO,CACL0xB,cAAe,EACfC,aAAcod,EAAYvd,KAAKz+C,OAC/BiwC,iBAAkB,EAClBkjD,gBAAiB1vE,EAAezjB,QAIpC,MAAM,IACJ+P,EAAG,KACH4O,GACEsvE,EAAe3tF,QAGbq+C,EAAgBj3C,KAAKglC,IAAIimD,EAAwB5iF,GAAMumC,EAASif,UAAUv1D,OAAS,GACnF4+C,EAAet7B,EAAUzD,WAAa8+B,EAAgBqd,EAAYvd,KAAKz+C,OAAS2yF,EAAwB5iF,EAAMyiF,EAAoBx3E,QACxI,IAAIqsD,GAAuB,EACvBp3B,EAAmB,EACnBkjD,EAAkB9oB,EAAgBrqE,OACtC,MAAOuvC,EAAkBC,GAAmB+hD,GAAqB,CAC/DC,WAAY7yC,EACZ8yC,UAAW7yC,EACX+yC,cAAe,EACfC,aAAc51B,EAAYvd,KAAKz+C,OAC/B0xF,OAAQpuE,EAAU4sE,YAGpB,IAAK,IAAInwF,EAAIwvC,EAAkBxvC,EAAIyvC,IAAoB63B,EAAsBtnE,GAAK,EAAG,CACnF,MAAMkhB,EAAM+6C,EAAYvd,KAAK1+C,GAC7BsnE,EAAuB7jD,EAAOljB,QAAQupE,0BAA0B5oD,EAAI1e,GACtE,CAOA,OALK8kE,IACHp3B,EAAmBihD,GAAavyE,EAAM0rD,GACtC8oB,EAAkBjC,GAAavyE,EAAO6zE,EAAoB/gF,MAAO44D,IAG5D,CACL1rB,gBACAC,eACA3O,mBACAkjD,kBACD,GACA,CAAClmE,EAAuB0lE,EAAyBr8C,EAASif,UAAUv1D,OAAQsjB,EAAUzD,WAAYyD,EAAU4sE,UAAWl0B,EAAYvd,KAAM4rB,EAAiB5mD,EAAezjB,OAAQwjB,EAAQgvE,KAC5L,EAAAtuE,EAAA,IAAkB,KACZ+I,EACFolE,EAAc/xF,QAAQiY,MAAMrF,UAAY,8BAGxCmX,EAAQ/pB,QAAQwmB,WAAa,EAC7BuD,EAAQ/pB,QAAQgG,UAAY,EAC9B,GACC,CAAC2mB,KACJ,EAAA/I,EAAA,IAAkB,KAChBuuE,EAAuB,CACrBhhF,MAAO4Y,EAAQ/pB,QAAQkY,YACvBwC,OAAQqP,EAAQ/pB,QAAQmG,cACxB,GACD,CAAC6vC,EAAS+B,yBACb,MAAM/tB,EAAe,eAAkB9S,IACrCi7E,EAAuB,CACrBhhF,MAAO+F,EAAO/F,MACduJ,OAAQxD,EAAOwD,QACf,GACD,IACH2W,GAAuBnO,EAAQ,SAAU8G,GACzC,MAAM8oE,EAA2B,eAAkBC,IACjD,MAAO9jD,EAAkBC,GAAmB+hD,GAAqB,CAC/DC,WAAY6B,EAAkB10C,cAC9B8yC,UAAW4B,EAAkBz0C,aAC7B+yC,cAAe,EACfC,aAAc51B,EAAYvd,KAAKz+C,OAC/B0xF,OAAQpuE,EAAU4sE,aAEboD,GAA8B/B,GAAqB,CACxDC,WAAY6B,EAAkBpjD,iBAC9BwhD,UAAW4B,EAAkBF,gBAC7BxB,cAAeM,EACfL,aAAcM,EACdR,OAAQpuE,EAAU6sB,eAEdb,EAAsBD,GAAiC,CAC3DC,oBAAqBgkD,EACrB9vE,SACA+rB,mBACAC,kBACAC,YAAausB,EAAYvd,OAErB1uC,EAAMsmC,GAAqB7yB,EAAOljB,QAAQkE,OAAO+wD,UAAUhmB,GAC3D5wB,GAAO,QAA4B6E,GAAQ8rB,GAEjD+iD,EAAc/xF,QAAQiY,MAAMrF,UAAY,eAAeyL,QAAW5O,YAE3B,mBAA5BiiF,GACTA,EAAwB,CACtBjiF,MACA4O,QAEJ,GACC,CAAC6E,EAAQw4C,EAAYvd,KAAMuzC,EAAyBC,EAA0BC,EAA0B5uE,EAAU6sB,aAAc7sB,EAAU4sE,YACvIqD,EAAsB,eAAkBF,IAC5C,GAAId,EAAkBjyF,UA7KMkzF,EA6K4BH,EA7KlBI,EA6KqClB,EAAkBjyF,QA5K3FkzF,IAAaC,GAIVD,EAAS70C,gBAAkB80C,EAAS90C,eAAiB60C,EAAS50C,eAAiB60C,EAAS70C,cAAgB40C,EAASvjD,mBAAqBwjD,EAASxjD,kBAAoBujD,EAASL,kBAAoBM,EAASN,iBA0K5M,YADAC,EAAyBC,GA9KA,IAACG,EAAUC,EAkLtCnB,EAAiBe,GACjBD,EAAyBC,GACzB,MAAO9jD,EAAkBC,GAAmB+hD,GAAqB,CAC/DC,WAAY6B,EAAkB10C,cAC9B8yC,UAAW4B,EAAkBz0C,aAC7B+yC,cAAe,EACfC,aAAc51B,EAAYvd,KAAKz+C,OAC/B0xF,OAAQpuE,EAAU4sE,YAEpB1sE,EAAOljB,QAAQqtB,aAAa,6BAA8B,CACxD4hB,mBACAC,oBAEF+iD,EAAkBjyF,QAAU+yF,CAAiB,GAC5C,CAAC7vE,EAAQ8uE,EAAkBC,EAAmBv2B,EAAYvd,KAAKz+C,OAAQsjB,EAAU4sE,UAAWkD,KAC/F,EAAAlvE,EAAA,IAAkB,KAChB,GAAiC,MAA7BsuE,EAAoB/gF,MACtB,OAGF,MAAMiiF,EAAuBR,IAC7BK,EAAoBG,GACpB,MAAM,IACJ3jF,EAAG,KACH4O,GACEsvE,EAAe3tF,QACbkX,EAAS,CACbzH,MACA4O,OACAytD,cAAesnB,GAEjBlwE,EAAOljB,QAAQqtB,aAAa,aAAcnW,EAAO,GAChD,CAACgM,EAAQ0vE,EAAsBV,EAAoB/gF,MAAO8hF,IAE7D,MAAMI,EAAe/uF,IACnB,MAAM,UACJ0B,EAAS,WACTwgB,GACEliB,EAAM+F,cAIV,GAHAsjF,EAAe3tF,QAAQyP,IAAMzJ,EAC7B2nF,EAAe3tF,QAAQqe,KAAOmI,EAE1BA,EAAa,GAAKxgB,EAAY,IAAMisF,EAAkBjyF,QACxD,OAIF,MAAM+yF,EAAoBpmE,EAAwBslE,EAAkBjyF,QAAU4yF,IACxEU,EAAqClsF,KAAKC,IAAI0rF,EAAkB10C,cAAgB4zC,EAAkBjyF,QAAQq+C,eAC1Gk1C,EAAwCnsF,KAAKC,IAAI0rF,EAAkBz0C,aAAe2zC,EAAkBjyF,QAAQs+C,cAC5Gk1C,EAAwCpsF,KAAKC,IAAI0rF,EAAkBpjD,iBAAmBsiD,EAAkBjyF,QAAQ2vC,kBAChH8jD,EAA2CrsF,KAAKC,IAAI0rF,EAAkBF,gBAAkBZ,EAAkBjyF,QAAQ6yF,iBAClHa,EAAiBJ,GAAsCtwE,EAAU8sE,cAAgByD,GAAyCvwE,EAAU8sE,cAAgB0D,GAAyCxwE,EAAU6sE,iBAAmB4D,GAA4CzwE,EAAU6sE,iBAAmBuC,EAAepyF,UAAYqrE,EAEpUnoD,EAAOljB,QAAQqtB,aAAa,aAAc,CACxC5d,IAAKzJ,EACLqY,KAAMmI,EACNslD,cAAe4nB,EAAiBX,EAAoBd,EAAkBjyF,SACrEsE,GAECovF,IAEF,cAAmB,KACjBT,EAAoBF,EAAkB,IAExCX,EAAepyF,QAAUqrE,EAC3B,EAGIsoB,EAAcrvF,IAClB4e,EAAOljB,QAAQqtB,aAAa,uBAAwB,CAAC,EAAG/oB,EAAM,EAG1DsvF,EAAkBtvF,IACtB4e,EAAOljB,QAAQqtB,aAAa,2BAA4B,CAAC,EAAG/oB,EAAM,EAoH9DuvF,EAA2B3B,EAAoB/gF,OAASk6D,EAAoB6mB,EAAoB/gF,MAChG2iF,EAAc,WAAc,KAIhC,MAAMp5E,EAAStT,KAAKs4B,IAAIsW,EAAS+B,uBAAwB,GACzD,IAAIg8C,GAAsB,EAEX,MAAXhqE,GAAmBA,EAAQ/pB,SAAW0a,IAAsB,MAAXqP,OAAkB,EAASA,EAAQ/pB,QAAQmG,gBAC9F4tF,GAAsB,GAGxB,MAAMhjF,EAAO,CACXI,MAAO0iF,EAA2BxoB,EAAoB,OACtD3wD,SACA5G,UAAWigF,EAAsB,OAAS,QAO5C,OAJI/wE,EAAUzD,YAA0C,IAA5Bm8C,EAAYvd,KAAKz+C,SAC3CqR,EAAK2J,OAAS,EAAI6H,GAGbxR,CAAI,GACV,CAACgZ,EAASshD,EAAmBr1B,EAAS+B,uBAAwB2jB,EAAYvd,KAAKz+C,OAAQm0F,EAA0B7wE,EAAUzD,WAAYgD,IAC1I,aAAgB,KACdW,EAAOljB,QAAQqtB,aAAa,mCAAmC,GAC9D,CAACnK,EAAQ4wE,IAER9wE,EAAUzD,YAA0C,IAA5Bm8C,EAAYvd,KAAKz+C,SAC3Co0F,EAAYp5E,OAAS,EAAI6H,GAG3B,MAAMm4D,EAAY,CAAC,EAEdmZ,IACHnZ,EAAUsZ,UAAY,UAGpBhxE,EAAUzD,aACZm7D,EAAUuZ,UAAY,UAGxB,MAAMC,EAAmB,eAAkB,IAClCjC,EAAkBjyF,SACxB,IAEH,OADAkjB,EAAOljB,QAAQ+rE,0BAA4BmoB,EACpC,CACLpoB,gBACAgnB,2BACAqB,QAlKc,CAACj9E,EAAS,CACxB40D,oBAEA,MACEA,cAAeinB,EAAiB,eAChClzB,EAAiB8xB,EAAwB,cACzC7xB,EAAgB8xB,EAAwB,eACxCwC,EAAiBlC,EAAoB/gF,MAAK,eAC1CkjF,EAAiB,EAAC,SAClB7kF,EAAW,UACT0H,EAEJ,IAAK67E,GAAuC,MAAlBqB,EACxB,OAAO,KAGT,MAAMxE,EAAajjE,EAA8C,EAAtB3J,EAAU4sE,UAC/C//C,EAAgBljB,EAAiD,EAAzB3J,EAAU6sB,cACjDZ,EAAkBC,GAAmB+hD,GAAqB,CAC/DC,WAAY6B,EAAkB10C,cAC9B8yC,UAAW4B,EAAkBz0C,aAC7B+yC,cAAe,EACfC,aAAc51B,EAAYvd,KAAKz+C,OAC/B0xF,OAAQxB,IAEJ0E,EAAe,GAErB,GAAIp9E,EAAOinC,KACTjnC,EAAOinC,KAAKh3B,SAAQxG,IAClB2zE,EAAaxrF,KAAK6X,GAClBuC,EAAOljB,QAAQ+/D,0BAA0B,CACvC1wB,MAAO1uB,EAAI1e,GACX49D,iBACAC,gBACA5yB,QAAS/pB,GACT,QAEC,CACL,IAAKu4C,EAAYhhC,MACf,OAAO,KAGT,IAAK,IAAIj7B,EAAIwvC,EAAkBxvC,EAAIyvC,EAAiBzvC,GAAK,EAAG,CAC1D,MAAMkhB,EAAM+6C,EAAYvd,KAAK1+C,GAC7B60F,EAAaxrF,KAAK6X,GAClBuC,EAAOljB,QAAQ+/D,0BAA0B,CACvC1wB,MAAO1uB,EAAI1e,GACX49D,iBACAC,gBACA5yB,QAAS/pB,GAEb,CACF,CAEA,MAAO6vE,EAA4BuB,GAAsBtD,GAAqB,CAC5EC,WAAY6B,EAAkBpjD,iBAC9BwhD,UAAW4B,EAAkBF,gBAC7BxB,cAAexxB,EACfyxB,aAAcxxB,EACdsxB,OAAQvhD,IAEJb,EAAsBD,GAAiC,CAC3DC,oBAAqBgkD,EACrB9vE,SACA+rB,mBACAC,kBACAC,YAAausB,EAAYvd,OAErB8pC,EAAkB9kE,EAAe9jB,MAAM2vC,EAAqBulD,GAC5Dp2C,EAAO,GAEb,IAAK,IAAI1+C,EAAI,EAAGA,EAAI60F,EAAa50F,OAAQD,GAAK,EAAG,CAC/C,IAAI+0F,EAAqBnvE,EAEzB,MAAM,GACJpjB,EAAE,MACF00B,GACE29D,EAAa70F,GACXg1F,EAAsBxlD,EAAmBxvC,IAAMi8D,EAAYvd,KAAKz+C,OAAS,EACzEgoE,EAAiBxkD,EAAOljB,QAAQupE,0BAA0BtnE,GAAiD,OAA3CihB,EAAOljB,QAAQojD,sBAAsBnhD,GAC3G,IAAIu0D,EAGFA,EAD4B,MAA1Bs7B,EAAmB7vF,IAGRihB,EAAOljB,QAAQi2D,gBAAgBh0D,GAG9Ck8C,EAAKr1C,MAAmB,SAAKka,EAAUsC,WAAWqf,KAAK,OAAS,CAC9DhkB,IAAKgW,EACL0Y,MAAOptC,EACPsgB,UAAWmlD,EACXhV,UAAWA,EAEXC,aAAcA,EAEdtM,cAAeA,EAEf4hC,gBAAiBA,EACjB9kE,eAAgBA,EAChB6rB,oBAAqBA,EACrBulD,mBAAoBA,EACpB7nF,SAAU8pD,EACVhxD,MAAO6uF,IAAkC,MAAf34B,GAA4E,OAA5C84B,EAAsB94B,EAAYhhC,YAA5C,EAAsE85D,EAAoBn2C,gBAAkB,GAAKpP,EAAmBxvC,EACpLyoF,eAAgBkM,EAChB/rB,cAAeosB,EACfjlF,SAAUA,GACc,mBAAhBqiF,EAA6BA,EAAY5vF,EAAI00B,GAAS,CAAC,EAA0D,OAAtDtR,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB1E,KAAM1e,GACzK,CAEA,OAAOk8C,CAAI,EAqDX7yC,aAAc,CAACqtB,EAAO,CAAC,KACrB,IAAI,MACF1gB,EAAQ,CAAC,GACP0gB,EACAnvB,GAAQ,OAA8BmvB,EAAM,IAEhD,OAAO,OAAS,CACd5sB,IAAK0Q,EACLi4E,SAAUrB,EACVsB,QAAShB,EACTiB,YAAahB,EACb37E,OAAO,OAAS,CAAC,EAAGA,EAAOyiE,IAC1BlxE,EAAM,EAEXqrF,gBAAiB,EACf58E,QAAQ,CAAC,GACP,CAAC,KAAM,CACTA,OAAO,OAAS,CAAC,EAAGA,EAAO67E,KAE7BgB,mBAAoB,KAAM,CACxB/oF,IAAKgmF,IAER,EC9eG,GAAY,CAAC,YAAa,yBAO1BgD,GAAuC,cAAiB,SAAiCz0F,EAAOyL,GACpG,MAAM,UACJiE,EAAS,sBACT2c,GACErsB,EACEkJ,GAAQ,OAA8BlJ,EAAO,KAE7C,aACJgL,EAAY,gBACZupF,EAAe,mBACfC,EAAkB,QAClBX,GACE5C,GAAuB,CACzBxlF,MACA4gB,0BAEF,OAAoB,SAAKyjE,IAAqB,OAAS,CACrDpgF,UAAWA,GACV1E,EAAa9B,GAAQ,CACtB6N,UAAuB,SAAKk5E,IAA4B,OAAS,CAAC,EAAGsE,IAAmB,CACtFx9E,UAAuB,SAAKs5E,IAA+B,OAAS,CAAC,EAAGmE,IAAsB,CAC5Fz9E,SAAU88E,YAIlB,I,gBCrBA,MAAM,GAAoBtmF,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZoJ,KAAM,CAAC,aAEoB,IAAyBtJ,EAAQ,EAsBhE,SAAS8kF,GAA4B10F,GACnC,MAAM,UACJqG,EAAS,MACTnB,EAAK,aACLw/D,GACE1kE,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KAEZpV,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC4P,QAAS8S,EAAU9S,UAGfA,EAAU,GAAkBrC,GAC5BonF,EAjCR,SAAiBC,EAAOvuF,EAAWqJ,EAAWg1D,GAC5C,IAAImmB,EACJ,MAAMgK,EAAY,CAAC,EAWnB,MATkB,QAAdxuF,EACFwkF,EAAO+J,EAAM9J,0BACU,SAAdzkF,EACTwkF,EAAO+J,EAAM7J,4BAEbF,EAAO+J,EAAMnJ,mBACboJ,EAAUnwB,aAAeA,GAGpBmmB,GAAoB,SAAKA,GAAM,OAAS,CAC7Cj8E,SAAU,QACVc,UAAWA,GACVmlF,IAAc,IACnB,CAgBsBC,CAAQpyE,EAAUsC,WAAY3e,EAAWuJ,EAAQsJ,KAAMwrD,GAE3E,IAAKiwB,EACH,OAAO,KAGT,MAAM9G,GAA0B,SAAK77E,GAAA,EAAY,CAC/ClG,UAAW,EACX,aAAc8W,EAAOljB,QAAQ+5B,cAAc,6BAC3ChiB,MAAOmL,EAAOljB,QAAQ+5B,cAAc,6BACpChpB,KAAM,QACNsG,SAAU49E,IAGZ,OAAoB,UAAMxe,GAAyB,CACjDp/D,SAAU,CAAU,MAAT7R,IAA8B,SAAK8oF,GAAA,EAAO,CACnDC,aAAc/oF,EACduI,MAAO,UACPsJ,SAAU82E,IACC,MAAT3oF,GAAiB2oF,IAEzB,CAEA,MAAMkH,GAAwC,OAAWL,IC1D5CM,GAAoC,QAAWh1F,IAC1D,MAAM,OACJumC,EAAM,KACNjkC,EAAI,aACJ2yF,EAAY,mBACZC,EAAkB,cAClBC,GACEn1F,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KAMZ/S,EA3BkBrC,KACxB,MAAM,QACJqC,EAAO,KACPtN,GACEiL,EACEsC,EAAQ,CACZrC,KAAM,CAAC,WAAYlL,GAAQ,YAC3B0mC,OAAQ,CAAC,mBAEX,OAAO,EAAAl5B,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAkB9C,EAJG,OAAS,CAAC,EAAG5P,EAAO,CACrC4P,QAAS8S,EAAU9S,WAIfwlF,EAAsB,eAAkBpxF,IAC5CA,EAAMuF,iBACNvF,EAAMwF,kBACNoZ,EAAOljB,QAAQ0gD,iBAAiB7Z,EAAOxF,MAAM,GAC5C,CAACne,EAAQ2jB,EAAOxF,QACnB,OAAoB,SAAK,MAAO,CAC9BrxB,UAAWE,EAAQpC,KACnBuJ,UAAuB,SAAK/E,GAAA,EAAY,CACtCvG,IAAK0pF,EACLrpF,UAAW,EACX4D,UAAWE,EAAQo5B,OACnB,aAAcpmB,EAAOljB,QAAQ+5B,cAAc,mBAC3ChiB,MAAOmL,EAAOljB,QAAQ+5B,cAAc,mBACpChpB,KAAM,QACNvF,QAASkqF,EACT,gBAAiB9yF,EAAO,YAASkJ,EACjC,gBAAiB,OACjB,gBAAiBypF,EACjBtzF,GAAIuzF,EACJn+E,UAAuB,SAAK2L,EAAUsC,WAAWqmE,eAAgB,CAC/Dz8E,SAAU,aAGd,ICpDJ,SAASymF,IAAqB,aAC5BJ,EAAY,mBACZC,EAAkB,iBAClBI,EAAgB,sBAChBC,EAAqB,MACrBx0D,EAAK,KACLz+B,EAAI,OACJsH,EAAM,SACNo9B,IAEA,MAAMpkB,GAAS,SACTuiB,EAAgBviB,EAAOljB,QAAQ2lC,UAAUtE,GACzC6H,EAAW,eAAkB5kC,IAEjCA,EAAMwF,kBACNoZ,EAAOljB,QAAQ0qE,gBAAgB,GAC9B,CAACxnD,IAEJ,OAAKhZ,GAIe,SAAKk9B,GAAU,CACjCM,UAAW,WAAkC,UAAxBjC,EAAc1H,MAAoB,QAAU,OACjEn7B,KAAMA,EACNsH,OAAQA,EACRm9B,YAAa6B,EACb5B,SAAUA,EACVjwB,UAAuB,SAAKu+E,GAAkB,OAAS,CACrDnwD,cAAeA,EACfyD,SAAUA,EACVtmC,KAAMA,EACNX,GAAIszF,EACJ5e,WAAY6e,GACXK,MAfI,IAiBX,CC1CA,MAAM,GAAY,CAAC,aAqBbC,IAA4B,EAAApoF,EAAA,IAAO,MAAO,CAC9C1J,KAAM,cACNqJ,KAAM,oBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOmoF,mBAHb,EAI/B,EACDznF,YACI,CACJ2D,aAAc,WACdqB,SAAU,SACVsH,WAAY,SACZ5L,WAAYV,EAAMS,WAAWE,qBAEzB+mF,GAAsC,cAAiB,SAAgC11F,EAAOyL,GAClG,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EAhCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,sBAEoB,IAAyBoC,EAAQ,EAyB9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAK4lF,IAA2B,OAAS,CAC3D/pF,IAAKA,EACLiE,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,GACL,IAGA,SAASysF,GAAsB31F,GAC7B,IAAI+kB,EAEJ,MAAM,MACJvjB,EAAK,YACLo0F,EAAW,YACXC,GACE71F,EACE0iB,GAAY,EAAAC,EAAA,KACZmzE,EAAW,SAAa,OACvBC,EAASC,GAAc,WAAe,IAY7C,OAXA,aAAgB,KACd,IAAKJ,GAAeE,GAAYA,EAASp2F,QAAS,CAChD,MAAMu2F,G3EjEgBnwF,E2EiEKgwF,EAASp2F,S3EhEzBkG,aAAeE,EAAQD,cAAgBC,EAAQqgB,YAAcrgB,EAAQ8R,Y2EmE9Eo+E,EADEC,EACSz0F,EAEA,GAEf,C3ExEG,IAAqBsE,C2EwExB,GACC,CAACgwF,EAAUD,EAAaD,EAAap0F,KACpB,SAAKkhB,EAAUsC,WAAW2nE,aAAa,OAAS,CAClEl1E,MAAOm+E,GAAeG,GACkC,OAAtDhxE,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBgpE,YAAa,CAC3Gh3E,UAAuB,SAAK2+E,GAAwB,CAClDjqF,IAAKqqF,EACL/+E,SAAUvV,MAGhB,CCjFA,MAAM,GAAY,CAAC,YAAa,WAAY,SAAU,QAQtD,IAAI00F,IAEJ,SAAWA,GACTA,EAAqC,KAAI,OACzCA,EAAsC,MAAI,OAC3C,CAHD,CAGGA,KAAmCA,GAAiC,CAAC,IAExE,MAAM,GAAoB3oF,IACxB,MAAM,UACJ4oF,EAAS,SACTC,EAAQ,QACRxmF,EAAO,KACPymF,GACE9oF,EACEsC,EAAQ,CACZrC,KAAM,CAAC,kBAAmB2oF,GAAa,6BAA8BC,GAAY,4BAA6BC,GAAQ,yBAAwB,EAAA3oF,EAAA,GAAW2oF,MACzJn9E,KAAM,CAAC,kBAET,OAAO,EAAApJ,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAGhE,SAAS0mF,GAA6Bt2F,GACpC,MAAM,OACJoa,EAAM,KACNi8E,EAAOH,GAA+BK,OACpCv2F,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C0iB,GAAY,EAAAC,EAAA,KAEZpV,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrCq2F,OACAzmF,QAAS8S,EAAU9S,UAGfA,EAAU,GAAkBrC,GAC5BipF,EAAY,eAAkBxyF,IAClCA,EAAMuF,iBACNvF,EAAMwF,iBAAiB,GACtB,IACH,OAGE,SAAK,OAAO,OAAS,CACnBkG,UAAWE,EAAQpC,KACnBmK,MAAO,CACLnE,UAAW4G,EACXxI,QAAS8Q,EAAUitE,sBAAwB,EAAI,IAEhDzmF,EAAO,CACRgC,QAASsrF,EACTz/E,UAAuB,SAAK2L,EAAUsC,WAAW0mE,iBAAkB,CACjEh8E,UAAWE,EAAQsJ,SAI3B,CAEA,MAAMu9E,GAAyC,OAAWH,IClEpD,GAAY,CAAC,UAAW,iBAAkB,WAAY,SAAU,aAAc,gBAAiB,WAAY,WAAY,gBAAiB,cAAe,kBAAmB,cAAe,YAAa,QAAS,uBAAwB,aAAc,yBAA0B,kBAAmB,QAAS,YAAa,0BAA2B,6BAA8B,0BAUjXI,GAA2C,cAAiB,SAAqC12F,EAAOyL,GAC5G,MAAM,QACJmE,EAAO,eACP+mF,EAAc,SACdj4C,EAAQ,OACRtkC,EAAM,WACNw8E,EAAU,cACVzf,EAAa,SACbl2C,EAAQ,SACRn1B,EAAQ,cACR+qF,EAAa,YACbC,EAAW,gBACXC,EAAe,YACfnB,EAAW,MACX/kF,EAAK,qBACLmmF,EAAuB,KAAI,WAC3B56D,EAAa,KAAI,uBACjB66D,EAAyB,KAAI,gBAC7BzjC,EAAe,MACfhyD,EAAK,UACL20F,EAAS,wBACTe,EAAuB,2BACvBC,EAA0B,uBAC1BC,GACEp3F,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ00E,EAAgB,SAAa,OAC5BC,EAAoBC,GAAyB,WAAeZ,GAC7Dx6E,GAAY,EAAAC,EAAA,GAAWi7E,EAAe5rF,GAC5C,IAAI8wE,EAAW,OAqBf,OAnBqB,MAAjBpF,IACFoF,EAA6B,QAAlBpF,EAA0B,YAAc,cAGrD,aAAgB,KACTmgB,GACHC,EAAsBZ,EACxB,GACC,CAACW,EAAoBX,IACxB,mBAAsB,KACpB,MAAMa,EAAkB50E,EAAOljB,QAAQkE,MAAMw4B,WAE7C,GAAI6E,IAAau2D,EAAgBl1F,KAAM,CACrC,MACM8qF,EADmBiK,EAAc33F,QAAQsF,cAAc,mBAClBqyF,EAAc33F,QACvC,MAAlB0tF,GAAkCA,EAAeroF,QACjD6d,EAAOljB,QAAQmtB,iCAAiCntB,QAAQwmB,WAAa,CACvE,IACC,CAACtD,EAAQqe,KACQ,UAAM,OAAO,OAAS,CACxCx1B,IAAK0Q,EACLzM,WAAW,OAAKE,EAAQpC,KAAMgmD,GAC9B77C,MAAO,CACLyC,SACAvJ,QACAI,SAAUJ,EACVE,SAAUF,GAEZjF,KAAM,eACNE,SAAUA,EACV,gBAAiB4yC,EAAW,EAC5B,YAAa69B,EACb,aAAiC,MAAnBwa,EAA0Bv1F,OAAQgK,GAC/CtC,EAAO,CACR6N,SAAU,EAAc,UAAM,OAAO,OAAS,CAC5CrH,UAAWE,EAAQ6nF,mBACnBxI,UAAW6H,GACVI,EAAyB,CAC1BngF,SAAU,EAAc,UAAM,MAAO,CACnCrH,UAAWE,EAAQ8nF,eACnB3gF,SAAU,EAAc,SAAK,MAAO,CAClCrH,UAAWE,EAAQ+nF,sBACnB5gF,cAA8BvL,IAApBurF,EAAgCA,GAA+B,SAAKpB,GAAuB,CACnGn0F,MAAOA,EACPo0F,YAAaA,EACbC,YAAahlF,MAEbomF,KACFD,OACAI,IAAuC,SAAKX,IAA2B,OAAS,CACpFN,WAAYzzE,EAAUysE,uBAAyBgH,EAC/CC,SAAUQ,EACVx8E,OAAQA,EACRi8E,KAAMQ,GACLM,IAA8B/6D,KAErC,ICvFM,GAAoB7uB,IACxB,MAAM,OACJg5B,EAAM,QACN32B,EAAO,WACPgoF,EAAU,cACVzgB,EAAa,gBACbzC,EAAe,mBACfmjB,GACEtqF,EACEuqF,EAAkC,MAAjB3gB,EACjB4gB,EAAyC,MAAtBF,GAA8BA,EAAqB,EAEtEG,EAAkC,WAAhBzxD,EAAOhtB,KACzB1J,EAAQ,CACZrC,KAAM,CAAC,eAAuC,SAAvB+4B,EAAO7I,aAA0B,0BAAkD,WAAvB6I,EAAO7I,aAA4B,4BAAoD,UAAvB6I,EAAO7I,aAA2B,2BAA4B6I,EAAOgD,UAAY,yBAA0BquD,GAAc,uBAAwBE,GAAkB,uBAAwBC,GAAoB,yBAA0BC,GAAmB,wBAAyBtjB,GAAmB,cAC3b+iB,mBAAoB,CAAC,kCACrBC,eAAgB,CAAC,8BACjBC,sBAAuB,CAAC,sCAE1B,OAAO,EAAA7nF,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAGhE,SAASqoF,GAAqBj4F,GAC5B,IAAI4qB,EAAuB7F,EAAuBmyD,EAAsB1rD,EAAwB0sE,EAEhG,MAAM,OACJ3xD,EAAM,eACNowD,EAAc,SACdj4C,EAAQ,aACRv8B,EAAY,WACZy0E,EAAU,aACVxM,EAAY,cACZjT,EAAa,UACbghB,EAAS,mBACTN,EAAkB,SAClB52D,EAAQ,SACRn1B,EAAQ,mBACRssF,EAAkB,eAClBlP,EAAc,cACd2N,GACE72F,EACE4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KACZ00E,EAAgB,SAAa,MAC7BpC,GAAe,EAAAp2D,GAAA,KACfq2D,GAAqB,EAAAr2D,GAAA,KACrBs2D,EAAgB,SAAa,OAC5BmC,EAAoBC,GAAyB,WAAeZ,IAC7D,WACJniC,EAAU,WACVC,GACkE,OAA/D7pC,EAAwBhI,EAAOljB,QAAQorB,qBAA+BF,EAAwB,CACjG4pC,YAAY,EACZC,YAAY,GAERqiC,EAAc,WAAc,KAAOp0E,EAAUumE,uBAAyBC,IAAmB3iD,EAAO2iD,gBAAgB,CAACxmE,EAAUumE,qBAAsBC,EAAgB3iD,EAAO2iD,iBAC9K,IAAI6N,EAEAxwD,EAAO8xD,eACTtB,EAAkBxwD,EAAO8xD,aAAaz1E,EAAOljB,QAAQoyD,sBAAsBvrB,EAAOxF,SAGpF,MACM2zC,EAAmB0V,IADKA,GAAgB51B,IAAeC,KACwC2jC,EAA7D11E,EAAUitE,sBAE5CpiF,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC4P,QAAS8S,EAAU9S,QACnB8kE,oBAGI9kE,EAAU,GAAkBrC,GAC5Bm7E,EAAU,eAAkBz3D,GAAajtB,IAGxCA,EAAM+F,cAAcnK,SAASoE,EAAM4F,SAIxCgZ,EAAOljB,QAAQqtB,aAAakE,EAAWrO,EAAOljB,QAAQoyD,sBAAsBvrB,EAAOxF,OAAQ/8B,EAAM,GAChG,CAAC4e,EAAQ2jB,EAAOxF,QACbu3D,EAAsB,WAAc,KAAM,CAC9CptF,QAASw9E,EAAQ,qBACjBb,cAAea,EAAQ,2BACvBr8E,YAAaq8E,EAAQ,oBAErB6P,WAAY7P,EAAQ,mBAEpBZ,aAAcY,EAAQ,qBAEtBX,aAAcW,EAAQ,qBAEtBv/E,UAAWu/E,EAAQ,uBACnBn9E,QAASm9E,EAAQ,qBACjBp9E,OAAQo9E,EAAQ,uBACd,CAACA,IACC6E,EAAyB,WAAc,IAAMuJ,EAAc,CAC/D0B,YAAa9P,EAAQ,yBACrBmE,YAAanE,EAAQ,yBACrBoE,WAAYpE,EAAQ,wBACpB+P,UAAW/P,EAAQ,wBACjB,CAAC,GAAG,CAACoO,EAAapO,IAChByO,EAA6B,WAAc,KAAM,CACrDlsF,YAAay9E,EAAQ,+BACnB,CAACA,IACL,aAAgB,KACT4O,GACHC,EAAsBZ,EACxB,GACC,CAACW,EAAoBX,IACxB,MAAM+B,EAAe,eAAkB,KACrCnB,GAAsB,EAAM,GAC3B,IAEGP,GAAwBt0E,EAAUinB,oBAAsBpD,EAAOoD,oBAAkC,SAAKqrD,GAAsB,CAChIzuD,OAAQA,EACR0uD,aAAcA,EACdC,mBAAoBA,EACpB5yF,KAAMg1F,EACNnC,cAAeA,IAGX/4D,GAA0B,SAAKi5D,GAAsB,CACzDJ,aAAcA,EACdC,mBAAoBA,EACpBn0D,MAAOwF,EAAOxF,MACdz+B,KAAMq0F,EACN/sF,OAAQurF,EAAcz1F,QACtB41F,iBAAkB5yE,EAAUsC,WAAWkpE,WACvCqH,sBAA8E,OAAtDxwE,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBqX,WACpH4K,SAAU0xD,IAGNh0B,EAA+D,OAA/CwS,EAAuB3wC,EAAOm+B,cAAwBwS,EAAuBx0D,EAAUgiD,aAEvGuyB,GAAsC,UAAM,WAAgB,CAChElgF,SAAU,EAAE2L,EAAUk0D,sBAAoC,SAAKl0D,EAAUsC,WAAW0oE,8BAA8B,OAAS,CACzH3sD,MAAOwF,EAAOxF,MACd4sD,QAASkK,GACgD,OAAvDrsE,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBmtE,+BAAgCpyD,EAAOgD,WAAahD,EAAOqyD,gBAA8B,SAAK7D,GAA0B,CACxN1uF,UAAW8wE,EACXjyE,MAAOizF,EACPzzB,aAAcA,OAIlB,mBAAsB,KACpB,MAAM8yB,EAAkB50E,EAAOljB,QAAQkE,MAAMw4B,WAE7C,GAAI6E,IAAau2D,EAAgBl1F,KAAM,CACrC,MACM8qF,EADmBiK,EAAc33F,QAAQsF,cAAc,mBAClBqyF,EAAc33F,QACvC,MAAlB0tF,GAAkCA,EAAeroF,QACjD6d,EAAOljB,QAAQmtB,iCAAiCntB,QAAQwmB,WAAa,CACvE,IACC,CAACtD,EAAQqe,IACZ,MAAMuyB,EAAoD,mBAA3BjtB,EAAOitB,gBAAiCjtB,EAAOitB,gBAAgB,CAC5FzyB,MAAOwF,EAAOxF,MACdC,OAAQuF,IACLA,EAAOitB,gBACNhyD,EAAoD,OAA3C02F,EAAqB3xD,EAAOmD,YAAsBwuD,EAAqB3xD,EAAOxF,MAC7F,OAAoB,SAAK21D,IAA6B,OAAS,CAC7DjrF,IAAK4rF,EACLznF,QAASA,EACT+mF,eAAgBA,EAChBj4C,SAAUA,EACVtkC,OAAQ+H,EACRy0E,WAAYA,EACZzf,cAAeA,EACfl2C,SAAUA,EACVn1B,SAAUA,EACV+qF,cAAeA,EACfC,YAAaA,EACbC,gBAAiBA,EACjBnB,YAAarvD,EAAOqvD,YACpBiD,UAAWtyD,EAAOxF,MAClBlwB,MAAO01B,EAAO8E,cACd2rD,qBAAsBA,EACtBC,uBAAwBA,EACxBzjC,gBAAiBA,EACjBhyD,MAAOA,EACP20F,WAAYzzE,EAAUysE,uBAAyB5oD,EAAO4vD,UACtD,aAAc5vD,EAAOxF,MACrB3E,WAAYA,EACZ86D,wBAAyB3J,EACzB4J,2BAA4BA,GAC3BmB,GACL,CCxMA,IAAI,GAAW,EAkBf,MAAMQ,GAAkB,EAAkB,MAO3B,SAAS,GAAMC,GAC5B,QAAwBvtF,IAApBstF,GAA+B,CACjC,MAAME,EAAUF,KAChB,OAAqB,MAAdC,EAAqBA,EAAaC,CAC3C,CAEA,OA9BF,SAAqBD,GACnB,MAAOE,EAAWC,GAAgB,WAAeH,GAC3Cp3F,EAAKo3F,GAAcE,EAWzB,OAVA,aAAgB,KACG,MAAbA,IAKF,IAAY,EACZC,EAAa,OAAO,MACtB,GACC,CAACD,IACGt3F,CACT,CAgBSw3F,CAAYJ,EACrB,CCrBA,MAAM,GAAoBxrF,IACxB,MAAM,QACJqC,EAAO,YACP8tB,EAAW,WACXk6D,EAAU,gBACVljB,EAAe,iBACf0kB,EAAgB,QAChB3oD,GACEljC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,eAAgC,SAAhBkwB,GAA0B,0BAA2C,WAAhBA,GAA4B,4BAA6C,UAAhBA,GAA2B,2BAA4Bk6D,GAAc,uBAAwBljB,GAAmB,aAAc0kB,GAAoB,iCAA8C,OAAZ3oD,EAAmB,2BAA6B,6BACzWgnD,mBAAoB,CAAC,kCACrBC,eAAgB,CAAC,8BACjBC,sBAAuB,CAAC,sCAE1B,OAAO,EAAA7nF,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAGhE,SAASypF,GAAsBr5F,GAC7B,IAAI4qB,EAAuB0uE,EAE3B,MAAM,QACJ7oD,EAAO,MACP5/B,EAAK,MACLsgD,EAAK,SACLrf,EAAQ,OACRU,EAAM,OACNp4B,EAAM,SACNskC,EAAQ,aACR0rC,EAAY,mBACZgO,GACEp4F,EACE0iB,GAAY,EAAAC,EAAA,KACZC,GAAS,SACT22E,GAAqB,EAAAz2E,EAAA,GAAgBF,EAAQutB,KAC7C,WACJqkB,EAAU,WACVC,GACkE,OAA/D7pC,EAAwBhI,EAAOljB,QAAQorB,qBAA+BF,EAAwB,CACjG4pC,YAAY,EACZC,YAAY,GAER1pD,EAAQ0lC,EAAU8oD,EAAmB9oD,GAAW,CAAC,GACjD,WACJ/G,GAAwB,MAAX+G,EAAkBA,EAAU,IAAE,YAC3CmlD,EAAc,GAAE,YAChBl4D,GACE3yB,EACJ,IAAIgsF,EACJ,MAAMryE,EAAS+rB,IAAqE,OAAxD6oD,EAAwBC,EAAmB9oD,SAAoB,EAAS6oD,EAAsBE,mBACpHC,EAAe,CACnBhpD,UACA/G,aACAksD,cACAzkC,QACArf,WACAU,SACAkM,WACA0rC,gBAGE35C,GAAW/rB,IACbqyE,EAAkBryE,EAAO+0E,IAG3B,MACM/kB,EAAmB0V,IADKA,GAAgB51B,IAAeC,KACwC2jC,EAA7D11E,EAAUitE,sBAC5CyJ,EAAmB12E,EAAUitE,sBAE7BpiF,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC4P,QAAS8S,EAAU9S,QACnB8kE,kBACA0kB,mBACA17D,cACAyzB,QACAymC,YAAY,IAGRp2F,EAAsB,MAAdkoC,EAAqBA,EAAa+G,EAC1C9uC,EAAK,KACLk3F,EAAwB,OAAZpoD,EAAmB,oBAAoB9uC,IAAO8uC,EAC1D7gC,EAAU,GAAkBrC,GAC5BimD,EAAmD,mBAA1BzoD,EAAMyoD,gBAAiCzoD,EAAMyoD,gBAAgBimC,GAAgB1uF,EAAMyoD,gBAClH,OAAoB,SAAKkjC,GAA6B,CACpD9mF,QAASA,EACT+mF,gBAAgB,EAChBj4C,SAAUA,EACVtkC,OAAQA,EACRw8E,YAAY,EACZzf,cAAe,KACfl2C,UAAU,EACVn1B,UAAW,EACXgrF,aAAa,EACbC,gBAAiBA,EACjBvjC,gBAAiBA,EACjBoiC,YAAaA,EACbiD,UAAWA,EACXhoF,MAAOA,EACPmmF,qBAAsB,KACtBC,uBAAwB,KACxBd,WAAW,EACX30F,MAAOA,EACP,eAAgBgxC,EAAOpzC,OAEvB,cAAe,KAAKozC,EAAOpc,KAAK,WAChCghE,wBAAwB,GAE5B,CC/FA,MACMsC,IAAsB,EAAAtsF,EAAA,IAAO,MAAO,CACxC1J,KAAM,cACNqJ,KAAM,kBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOqsF,iBAHnB,EAIzB,KAAM,CACPlmF,QAAS,WAOJ,MCxBDmmF,GAAQ,EACRC,GAAO,IAEP,GAAoBtsF,IACxB,MAAM,gBACJusF,EAAe,QACflqF,GACErC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,aAAc,eAAessF,MAEtC,OAAO,EAAAhqF,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAG1DmqF,IAAwB,EAAA3sF,EAAA,IAAO,MAAO,CAC1C1J,KAAM,cACNqJ,KAAM,aACNM,kBAAmB,CAACrN,EAAOsN,IAAW,CAAC,CACrC,CAAC,KAAK,2BAAoCA,EAAO,qBAChD,CACD,CAAC,KAAK,4BAAqCA,EAAO,sBACjDA,EAAO0sF,aAPkB,EAQ3B,KAAM,CACP9qF,SAAU,WACVC,IAAK,EACLC,OAAQ,IACRyB,MAAO,GACPsa,OAAQ,EACR,CAAC,KAAK,2BAAoC,CACxCpN,KAAM,GAER,CAAC,KAAK,4BAAqC,CACzCxM,MAAO,OAIX,SAAS0oF,GAAkBj6F,GACzB,MAAM,gBACJ85F,GACE95F,EACEypB,EAAU,SAAa,MACvB7G,GAAS,SACT8M,EAAU,YACTwqE,EAAUC,GAAe,YAAe,GACzC//E,GAAS,EAAA0I,EAAA,GAAgBF,EAAQV,GACjCmrE,EAAiB,SAAa,CAClCtvE,KAAM,EACN5O,IAAK,IAEDuT,GAAY,EAAAC,EAAA,KAEZpV,GAAa,OAAS,CAAC,EAAGvN,EAAO,CACrC4P,QAAS8S,EAAU9S,UAGfA,EAAU,GAAkBrC,GAC5B6sF,EAAkB,eAAkBC,IACxChN,EAAe3tF,QAAU26F,CAAiB,GACzC,IACGC,EAAiB,eAAkBt2F,IACvC,IAAIusF,EAEJ,GAAwB,SAApBuJ,EACFvJ,EAASvsF,EAAMu2F,QAAU9wE,EAAQ/pB,QAAQ86F,wBAAwBjpF,UAC5D,IAAwB,UAApBuoF,EAGT,MAAM,IAAIprE,MAAM,6BAFhB6hE,EAASzpF,KAAKs4B,IAAI,EAAGp7B,EAAMu2F,QAAU9wE,EAAQ/pB,QAAQ86F,wBAAwBz8E,KAG/E,CAEAwyE,GAAUA,EAASqJ,IAASC,GAAOD,GACnCrpE,aAAab,EAAQhwB,SAErBgwB,EAAQhwB,QAAUuwB,YAAW,KAC3BrN,EAAOljB,QAAQsqE,OAAO,CACpBjsD,KAAMsvE,EAAe3tF,QAAQqe,KAAOwyE,EACpCphF,IAAKk+E,EAAe3tF,QAAQyP,KAC5B,GACF,GACD,CAAC2qF,EAAiBl3E,IACrB,aAAgB,IACP,KACL2N,aAAab,EAAQhwB,QAAQ,GAE9B,IACH,MAAM+6F,EAAiB,eAAkB,KACvCN,GAAYO,IAAiBA,GAAa,GACzC,IAIH,OAHA3pE,GAAuBnO,EAAQ,aAAcw3E,GAC7CrpE,GAAuBnO,EAAQ,wBAAyB63E,GACxD1pE,GAAuBnO,EAAQ,sBAAuB63E,GAC/CP,GAAwB,SAAKH,GAAuB,CACzDtuF,IAAKge,EACL/Z,WAAW,OAAKE,EAAQpC,MACxBs/E,WAAYwN,EACZ3iF,MAAO,CACLyC,YAEC,IACP,CASA,MAAMugF,GAA8B,OAAWV,ICvHzC,GAAY,CAAC,aAmBbW,IAAwB,EAAAxtF,EAAA,IAAO,MAAO,CAC1C1J,KAAM,cACNqJ,KAAM,gBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOutF,eAHjB,EAI3B,EACD7sF,YAGO,CACLkB,SAAU,WACVC,IAAK,EACL4O,KAAM,EACNxM,MAAO,EACPyB,SAAU,SACVS,QAAS,OACTE,WAAY,SACZ1F,UAAW,aACXiP,aAAc,aAV2B,UAAvBlP,EAAMK,QAAQ6L,MAAmB,SAAQ,QAAMlM,EAAMK,QAAQyO,QAAS,GAAI,MAAQ,SAAO,QAAM9O,EAAMK,QAAQyO,QAAS,GAAI,OAW5Ig+E,oBAAqB9sF,EAAM+S,MAAM1G,aACjC0gF,qBAAsB/sF,EAAM+S,MAAM1G,iBAGzB2gF,GAAiC,cAAiB,SAA2Bh7F,EAAOyL,GAC/F,MAAM,UACJiE,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAM7C4P,EA1CkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,kBAEoB,IAAyBoC,EAAQ,EAmC9C,CAHG,CACjBA,SAFgB,EAAA+S,EAAA,KAEG/S,UAGrB,OAAoB,SAAKgrF,IAAuB,OAAS,CACvDnvF,IAAKA,EACLiE,WAAW,OAAKA,EAAWE,EAAQpC,OAClCtE,GACL,ICxDM,GAAY,CAAC,aAAc,aAsB3B+xF,IAA6B,EAAA7tF,EAAA,IAAO,MAAO,CAC/C1J,KAAM,cACNqJ,KAAM,qBACNM,kBAAmB,CAACrN,EAAOsN,IAAW,CAAC,CACrC,CAAC,KAAK,4BAAqCA,EAAO4tF,sBACjD5tF,EAAO6tF,qBALuB,EAMhC,KAAM,CACP1nF,QAAS,OACTE,WAAY,aACZsN,cAAe,SACf,CAAC,KAAK,6BAAqC,sCAA+C,CACxFrN,OAAQ,QAEV,CAAC,KAAK,0CAAkD,+BAAwC,CAC9F8N,YAAa,YAGJ05E,GAAsC,cAAiB,SAAgCp7F,EAAOyL,GACzG,IAAImf,EAAuBC,EAE3B,MAAM,WACJ+sE,EAAU,UACVloF,GACE1P,EACEkJ,GAAQ,OAA8BlJ,EAAO,IAE7C4iB,GAAS,SACTF,GAAY,EAAAC,EAAA,KAMZ/S,EA7CkBrC,KACxB,MAAM,WACJqqF,EAAU,WACVpjC,EAAU,QACV5kD,GACErC,EACEsC,EAAQ,CACZrC,KAAM,CAAC,qBAAsBoqF,GAAc,uBAAwBpjC,GAAc,mCAEnF,OAAO,EAAA1kD,EAAA,GAAeD,EAAO,IAAyBD,EAAQ,EAoC9C,CALG,CACjBgoF,aACApjC,WAA4J,OAA/I5pC,EAAyF,OAAhEC,EAAyBjI,EAAOljB,QAAQorB,0BAA+B,EAASD,EAAuB2pC,aAAsB5pC,EACnKhb,QAAS8S,EAAU9S,UAGrB,OAAoB,SAAKqrF,IAA4B,OAAS,CAC5DxvF,IAAKA,EACLiE,WAAW,OAAKA,EAAWE,EAAQpC,OAClCtE,GACL,IC5DM,GAAY,CAAC,WAAY,aAQlBmyF,GAAqC,cAAiB,SAA2Br7F,EAAOyL,GACnG,MAAM,SACJuhB,GACEhtB,EACEkJ,GAAQ,OAA8BlJ,EAAO,KAE7C,WACJ43F,EAAU,aACV5sF,EAAY,cACZswF,EAAa,iBACbC,EAAgB,sBAChBC,GJgBgCx7F,KAClC,MACEgtB,SAAUyuE,EAAY,eACtBnsD,EAAiB,GACftvC,GACG07F,EAASC,GAAc,WAAe,KACtCC,EAAWC,GAAgB,WAAe,IAC3Cj5E,GAAS,SACTC,GAAiB,EAAAC,EAAA,GAAgBF,EAAQ,MACzC6mD,GAAkB,EAAA3mD,EAAA,GAAgBF,EAAQ,MAC1Ck5E,GAAgB,EAAAh5E,EAAA,GAAgBF,EAAQ,OACxCm5E,GAAoB,EAAAj5E,EAAA,GAAgBF,EAAQ,OAC5Co5E,GAAoB,EAAAl5E,EAAA,GAAgBF,EAAQ,OAC5CT,GAAe,EAAAW,EAAA,GAAgBF,EAAQV,GACvCG,GAAyB,EAAAS,EAAA,GAAgBF,EAAQR,GACjDqI,GAAoB,EAAA3H,EAAA,GAAgBF,EAAQJ,GAC5Cy5E,GAAqB,EAAAn5E,EAAA,GAAgBF,EAAQ,MAC7Cs5E,GAAmB,EAAAp5E,EAAA,GAAgBF,EAAQ,OAC3C40E,GAAkB,EAAA10E,EAAA,GAAgBF,EAAQuZ,IAC1CzZ,GAAY,EAAAC,EAAA,KACZqK,EAAW,SAAa,MACxBmvE,GAAiB,EAAA//E,EAAA,GAAWq/E,EAAczuE,IACzCw+C,EAAekmB,GAAoB,WAAe,MACnDC,EAAoB,SAAanmB,GACjC4wB,EAAiB,SAAa,GAC9BhhC,EAAcnd,GAAmBr7B,EAAQF,GAC/C,aAAgB,KACdE,EAAOljB,QAAQmtB,iCAAiCntB,QAAQwmB,WAAa,CAAC,GACrE,CAACtD,IAEJ,MAAMy5E,EAAiC,UAAa,EAAAC,GAAA,IAAeltD,GAA6B,CAC9FmtD,cAAe,CAAC5nD,EAAGtC,IAAM,CAAC,mBAAoB,iBAAkB,gBAAgBjrC,OAAMiC,GAAOsrC,EAAEtrC,KAASgpC,EAAEhpC,QAEtGmzF,EAAsB,eAAkB/J,IAC5C,MAAO9jD,EAAkBC,GAAmB+hD,GAAqB,CAC/DC,WAAY6B,EAAkB10C,cAC9B8yC,UAAW4B,EAAkBz0C,aAC7B+yC,cAAe,EACfC,aAAc51B,EAAYvd,KAAKz+C,OAC/B0xF,OAAQpuE,EAAU4sE,YAEd5gD,EAAsB2tD,EAA+B38F,QAAQ,CACjE2vC,iBAAkBojD,EAAkBpjD,iBACpCC,iBACAC,aAAc7sB,EAAU6sB,aACxBZ,mBACAC,kBACAhsB,SACAisB,YAAausB,EAAYvd,OAErB0yC,EAAS7hD,EAAsB,EAAI0tD,EAAe18F,QAAU+pE,EAAgB/6B,GAAuB0tD,EAAe18F,QACxHstB,EAASttB,QAAQiY,MAAMrF,UAAY,gBAAgBi+E,gBAAqB,GACvE,CAAC9mB,EAAiBn6B,EAAgB5sB,EAAU6sB,aAAc3sB,EAAQw4C,EAAYvd,KAAMn7B,EAAU4sE,YACjG,mBAAsB,KAChB9jB,GACFgxB,EAAoBhxB,EACtB,GACC,CAACA,EAAegxB,IACnB,MAAMzJ,EAAe,eAAkB,EACrCh1E,OACAytD,cAAeinB,EAAoB,MAClCzuF,KACD,IAAIy4F,EAAuBC,EAE3B,IAAK1vE,EAASttB,QACZ,OAKF,GAAI08F,EAAe18F,UAAYqe,IAAgE,OAAtD0+E,EAAwB9K,EAAkBjyF,cAAmB,EAAS+8F,EAAsBptD,qBAA4C,MAArBojD,OAA4B,EAASA,EAAkBpjD,oBAA8E,OAAvDqtD,EAAyB/K,EAAkBjyF,cAAmB,EAASg9F,EAAuBnK,oBAA2C,MAArBE,OAA4B,EAASA,EAAkBF,iBACnZ,OAGF6J,EAAe18F,QAAUqe,EAGzB,IAAI4+E,GAAyB,EAEzBlK,IAAsBd,EAAkBjyF,SAAYiyF,EAAkBjyF,QAgBxEi9F,GAAyB,GAnG/B,SAAmB34F,GACjB,QAASA,EAAM4F,MACjB,CAmFUgzF,CAAU54F,IAIZ,cAAmB,KACjB0tF,EAAiBe,EAAkB,IAErCkK,GAAyB,GAEzBjL,EAAiBe,GAGnBd,EAAkBjyF,QAAU+yF,GAM1BA,GAAqBkK,GACvBH,EAAoB/J,EACtB,GACC,CAAC+J,IACEK,EAA0B,eAAkBjmF,GAAUilF,EAAajlF,EAAOmqB,QAAQ,IAClF+7D,EAAyB,eAAkB,IAAMjB,EAAa,KAAK,IACnEkB,EAA2B,eAAkBnmF,GAAU+kF,EAAW/kF,EAAOmqB,QAAQ,IACjFi8D,EAA0B,eAAkB,IAAMrB,EAAW,KAAK,IACxE5qE,GAAuBnO,EAAQ,oBAAqBi6E,GACpD9rE,GAAuBnO,EAAQ,mBAAoBk6E,GACnD/rE,GAAuBnO,EAAQ,wBAAyBm6E,GACxDhsE,GAAuBnO,EAAQ,sBAAuBo6E,GACtDjsE,GAAuBnO,EAAQ,aAAcmwE,GAE7C,MAAMkK,EAAqBrmF,IACzB,MACE40D,cAAeinB,EAAoBjnB,EAAa,eAChDjM,EAAiBjwB,EAAc,cAC/BkwB,EAAgB38C,EAAezjB,QAC7BwX,GAAU,CAAC,EAEf,IAAK67E,EACH,OAAO,KAGT,MAAO9jD,EAAkBC,GAAmB+hD,GAAqB,CAC/DC,WAAY6B,EAAkB10C,cAC9B8yC,UAAW4B,EAAkBz0C,aAC7B+yC,cAAe,EACfC,aAAc51B,EAAYvd,KAAKz+C,OAC/B0xF,OAAQpuE,EAAU4sE,YAEd5gD,EAAsB2tD,EAA+B38F,QAAQ,CACjE2vC,iBAAkBojD,EAAkBpjD,iBACpCC,eAAgBiwB,EAChBhwB,aAAc7sB,EAAU6sB,aACxB3sB,SACA+rB,mBACAC,kBACAC,YAAausB,EAAYvd,OAErBo2C,EAAqBntF,KAAKglC,IAAI2mD,EAAkBF,gBAAkB7vE,EAAU6sB,aAAciwB,GAEhG,MAAO,CACLmoB,gBAFsB9kE,EAAe9jB,MAAM2vC,EAAqBulD,GAGhEvlD,sBACAulD,qBACA10B,iBACAC,gBACD,EA8CG09B,EAAa,CAACC,EAAO,GAAIhsC,IAAUgsC,EAAKp+F,MAAM,EAAGoyD,EAAQ,GA6JzDipB,EAAY,CAChB5mE,UAAWiX,EACXlX,UAAWkX,EACXvc,WAAY,GAAGiU,OAEjB,MAAO,CACLqpD,gBACA+vB,iBA/MuB,CAAC3kF,EAAQ1N,EAAQ,CAAC,KACzC,MAAMk0F,EAAkBH,EAAmBrmF,GAE3C,GAAuB,MAAnBwmF,EACF,OAAO,KAGT,MAAM,gBACJzV,EAAe,oBACfj5C,GACE0uD,EACExwD,EAAU,GAEhB,IAAK,IAAIztC,EAAI,EAAGA,EAAIwoF,EAAgBvoF,OAAQD,GAAK,EAAG,CAClD,MAAMonC,EAASohD,EAAgBxoF,GACzBy/D,EAAclwB,EAAsBvvC,EACpCk+F,EAAgC,IAAhBz+B,EAChB0+B,IAAyC,OAAlBxB,GAAgD,OAAtBC,GACjDjwF,EAA6B,OAAlBgwF,GAA0BA,EAAc/6D,QAAUwF,EAAOxF,OAASs8D,IAAkBC,EAAqB,GAAK,EACzHr8D,EAAiC,OAAtB+6D,GAA8BA,EAAkBj7D,QAAUwF,EAAOxF,MAC5Ez+B,EAAOk1F,EAAgBl1F,MAAQk1F,EAAgBz2D,QAAUwF,EAAOxF,MACtE6L,EAAQpkC,MAAmB,SAAKyvF,IAAsB,OAAS,CAAC,EAAGiE,EAAiB31D,EAAOxF,OAAQ,CACjG41D,eAAgBr0F,EAChBu1F,mBAAoBoE,EAAmB11D,EAAOxF,QAAUk7D,EAAmB11D,EAAOxF,OAAO3hC,OACzF+iB,aAAcA,EACdy1E,WAAYrxD,EAAOxF,QAAU26D,EAC7Bn1D,OAAQA,EACRmY,SAAUkgB,EACVg4B,WAAYgF,IAAcr1D,EAAOxF,MACjCqpD,aAAcxrB,IAAgB/7C,EAAezjB,OAAS,EACtDg5F,oBAAqB11E,EAAU2nE,0BAC/BppD,SAAUA,EACVn1B,SAAUA,GACT5C,GAAQq9B,EAAOxF,OACpB,CAEA,OAAoB,SAAK24D,GAAqB,CAC5C9tF,KAAM,MACN,gBAAiByW,EAAyB,EAC1CtL,SAAU61B,GACV,EAwKF4uD,sBAnK4B5kF,IAC5B,GAA+B,IAA3ByL,EACF,OAAO,KAGT,MAAM+6E,EAAkBH,EAAmBrmF,GAE3C,GAAuB,MAAnBwmF,GAAsE,IAA3CA,EAAgBzV,gBAAgBvoF,OAC7D,OAAO,KAGT,MAAM,gBACJuoF,EAAe,oBACfj5C,EAAmB,mBACnBulD,EAAkB,cAClBz0B,GACE49B,EACExwD,EAAU,GACV2wD,EAAiB,GAEvB,IAAK,IAAIpsC,EAAQ,EAAGA,EAAQ9uC,EAAwB8uC,GAAS,EAAG,CAC9D,IAAIqsC,EAAuBC,EAAwBC,EAGnD,MAAMC,EAAgB,GACtB,IAAIC,EAAe,EACfh/B,EAAclwB,EAAsB,EACxC,MAAMmvD,EAA4F,OAAhEL,EAAwB36E,EAAe6rB,KAAuG,OAA7D+uD,EAAyBD,EAAsBroC,gBAAzD,EAAuFsoC,EAAuBtsC,GAGjN2sC,EAAkCZ,EAA6E,OAAjEQ,EAAyB76E,EAAe6rB,SAAgC,EAASgvD,EAAuBvoC,UAAWhE,GAEvK,KAAoC,OAA7B0sC,GAAqCj/B,GAAetvB,GAA2E,OAAxDyuD,EAAwBl7E,EAAe+7C,KAAyBm/B,EAAsB5oC,YAAa,SAAY+nC,EAAqE,OAAzDc,EAAyBn7E,EAAe+7C,SAAwB,EAASo/B,EAAuB7oC,UAAWhE,GAAQ2sC,IAAkC,CAC5V,IAAIC,EAAuBC,EAAwBC,EAEnD,MAAM13D,EAAS1jB,EAAe+7C,GAI5B,IAAIs/B,EAUAC,EAbNP,GAAkE,OAAjDK,EAAwB13D,EAAO8E,eAAyB4yD,EAAwB,EAEpE,IAAzBN,EAAcv+F,OAGhBu+F,EAAcn1F,KAAK,CACjBqI,MAA0D,OAAlDqtF,EAAyB33D,EAAO8E,eAAyB6yD,EAAyB,EAC1F1rD,OAAQ,CAACjM,EAAOxF,OAChB0P,QAASotD,EACTO,aAAcN,EACdp/C,SAAUkgB,KAKZ++B,EAAc,GAAG9sF,OAA4D,OAAlDstF,EAAyB53D,EAAO8E,eAAyB8yD,EAAyB,EAC7GR,EAAc,GAAGnrD,OAAOhqC,KAAK+9B,EAAOxF,OACpC48D,EAAc,GAAGj/C,SAAWkgB,GAG9BA,GAAe,CACjB,CAEA,MAAMy/B,EAAY1W,EAAgB98E,QAAO,CAACyzF,EAAY/3D,EAAQpnC,KAC5D,IAAIo/F,EAEJ,MAAMC,EAAWF,EAAWA,EAAWl/F,OAAS,GAG9C,IAAIq/F,EAGEC,EAoBFC,EAxBN,OAAIp4D,EAAO4uB,WAAa5uB,EAAO4uB,UAAU/1D,OAAS+xD,EAG5CqtC,GAAYA,EAAS/tD,UAAYlK,EAAO4uB,UAAUhE,GAI7C,IAAImtC,EAAWv/F,MAAM,EAAGu/F,EAAWl/F,OAAS,IAAI,OAAS,CAAC,EAAGo/F,EAAU,CAC5E3tF,MAAO2tF,EAAS3tF,OAA4D,OAAlD6tF,EAAyBn4D,EAAO8E,eAAyBqzD,EAAyB,GAC5GlsD,OAAQ,IAAIgsD,EAAShsD,OAAQjM,EAAOxF,UAKjC,IAAIu9D,EAAY,CACrB7tD,QAASlK,EAAO4uB,UAAUhE,GAC1BitC,aAAclB,EAAW32D,EAAO4uB,UAAWhE,GAC3CtgD,MAA0D,OAAlD4tF,EAAyBl4D,EAAO8E,eAAyBozD,EAAyB,EAC1FjsD,OAAQ,CAACjM,EAAOxF,OAChB2d,SAAUhQ,EAAsBvvC,IAIXq/F,GAAiC,OAArBA,EAAS/tD,UAAoB,SAAYysD,EAAW32D,EAAO4uB,UAAWhE,GAAQqtC,EAASJ,cAInH,IAAIE,EAAWv/F,MAAM,EAAGu/F,EAAWl/F,OAAS,IAAI,OAAS,CAAC,EAAGo/F,EAAU,CAC5E3tF,MAAO2tF,EAAS3tF,OAA4D,OAAlD8tF,EAAyBp4D,EAAO8E,eAAyBszD,EAAyB,GAC5GnsD,OAAQ,IAAIgsD,EAAShsD,OAAQjM,EAAOxF,UAKjC,IAAIu9D,EAAY,CACrB7tD,QAAS,KACT2tD,aAAclB,EAAW32D,EAAO4uB,UAAWhE,GAC3CtgD,MAA0D,OAAlD0tF,EAAyBh4D,EAAO8E,eAAyBkzD,EAAyB,EAC1F/rD,OAAQ,CAACjM,EAAOxF,OAChB2d,SAAUhQ,EAAsBvvC,GAChC,GACDw+F,GACH/+B,EAAcq1B,EACd,MAAM2K,EAA0BP,EAAUA,EAAUj/F,OAAS,GAAGqxC,QAEhE,KAAmC,OAA5BmuD,GAAoChgC,EAAcY,GAA2E,OAAzDq/B,EAAyBh8E,EAAe+7C,KAAyBigC,EAAuB1pC,YAAwE,OAAzD2pC,EAAyBj8E,EAAe+7C,KAAgG,OAA9DmgC,EAAyBD,EAAuB3pC,gBAA1D,EAAwF4pC,EAAuB5tC,MAAYytC,GAAyB,CACpY,IAAIC,EAAwBC,EAAwBC,EAAwBC,EAE5E,MAAMz4D,EAAS1jB,EAAe+7C,GAC9By/B,EAAUA,EAAUj/F,OAAS,GAAGyR,OAA4D,OAAlDmuF,EAAyBz4D,EAAO8E,eAAyB2zD,EAAyB,EAC5HX,EAAUA,EAAUj/F,OAAS,GAAGozC,OAAOhqC,KAAK+9B,EAAOxF,OACnD69B,GAAe,CACjB,CAEA2+B,EAAe/0F,KAAK,CAClBo1F,eACAqB,SAAU,IAAIZ,IAElB,CA8BA,OA5BAd,EAAe12E,SAAQ,CAACw3E,EAAWa,KACjCtyD,EAAQpkC,MAAmB,SAAKkxF,GAAqB,CACnD/hF,MAAO,CACLyC,OAAQ,GAAG+H,MACX7P,UAAW,eAAe+rF,EAAUT,mBAEtChyF,KAAM,MACN,gBAAiBszF,EAAa,EAC9BnoF,SAAUsnF,EAAUY,SAASpoF,KAAI,EAC/B45B,UACA5/B,QACA2hC,SACAkM,YACCygD,KACmB,SAAK9F,GAAuB,CAC9C5oD,QAASA,EACT5/B,MAAOA,EACP2hC,OAAQA,EACRkM,SAAUA,EACVyS,MAAO+tC,EACP9U,aAAc1rC,IAAa77B,EAAezjB,OAASozC,EAAOpzC,OAC1Dg5F,oBAAqB11E,EAAU2nE,0BAC/Bv4C,SAAUyrD,EAAen+F,OACzBgb,OAAQ+H,GACPg9E,MAEJD,GAAY,IAEVtyD,CAAO,EAYdgrD,aAAc8D,EACd1wF,aAAc,CAAC9B,EAAQ,CAAC,KAAM,OAAS,CACrCyO,MAAOyiE,GACNlxE,GACHoyF,cAAe,KAAM,CACnB7vF,IAAK0wF,EACLvwF,KAAM,aAET,EI/XGwzF,CAAqB,CACvBpyE,aAEF,OAAoB,UAAMguE,IAAmB,OAAS,CACpDvvF,IAAKA,GACJT,EAAa9B,GAAQ,CACtB6N,SAAU,EAAc,SAAK4jF,GAAgB,CAC3Cb,gBAAiB,UACF,UAAMsB,IAAwB,OAAS,CACtDxD,WAAYA,GACX0D,IAAiB,CAClBvkF,SAAU,CAACykF,IAAyBD,SACpB,SAAKZ,GAAgB,CACrCb,gBAAiB,aAGvB,IC3BMuF,GAA2B,cAAiB,SAAkB7vF,EAAS/D,GAC3E,MAAMzL,EpByDwBwP,KAC9B,GAAIA,EAAQlQ,SAnDe,IAoDzB,MAAM,IAAIovB,MAAM,mDAGlB,MAAM4wE,GAAc,EAAA7vF,GAAA,GAAc,CAChCzP,MAAOwP,EACP9L,KAAM,gBAEFg2B,EAAa,WAAc,KAAM,OAAS,CAAC,EAAGyzC,GAA0BmyB,EAAY5lE,aAAa,CAAC4lE,EAAY5lE,aAC9G1U,EAAa,WAAc,KAC/B,MAAMu6E,EAAYD,EAAYt6E,WAE9B,IAAKu6E,EACH,OAAO,OAAS,CAAC,EAAG/S,IAGtB,MAAMgT,EAAmB,CAAC,EAI1B,OAHApwE,OAAO4J,QAAQwzD,IAAoC3lE,SAAQ,EAAExd,EAAKo2F,MAChED,EAAiBn2F,QAA0BmC,IAAnB+zF,EAAUl2F,GAAqBo2F,EAAmBF,EAAUl2F,EAAI,IAEnFm2F,CAAgB,GACtB,CAACF,EAAYt6E,aAChB,OAAO,WAAc,KAAM,OAAS,CAAC,EAAGqqE,GAAgCiQ,EAAa,CACnF5lE,aACA1U,cACCkqE,KAAyB,CAACoQ,EAAa5lE,EAAY1U,GAAY,EoBnFpD06E,CAAiBlwF,GACzBoT,EAASgyC,GAAqB50D,GACpC,OAAoB,SAAKutB,EAAqB,CAC5C3K,OAAQA,EACR5iB,MAAOA,EACP+W,UAAuB,SAAK0L,EAAU,CACpC/S,UAAW1P,EAAM0P,UACjBiI,MAAO3X,EAAM2X,MACb68D,GAAIx0E,EAAMw0E,GACV/oE,IAAKA,EACLsL,UAAuB,UAAM6N,EAAkB,CAC7C7N,SAAU,EAAc,SAAKoO,EAAuB,CAAC,IAAiB,SAAK6G,EAAU,CACnFE,uBAAwBmvE,GACxBpvE,yBAA0BwoE,MACX,SAAKvnE,EAAuB,CAAC,SAItD,IACa8uC,GAAwB,OAAWqjC,IAChDA,GAAYM,UAAY,CAStB,aAAc,WAKd,kBAAmB,WAMnB1gF,WAAY,SAMZ+jC,aAAc,SAKdkI,eAAgB,WAMhBwI,kBAAmB,SAKnB9jD,QAAS,WAMT2/B,aAAc,WACdqB,oBAAqB,YAAkB,YAKvChE,SAAwB,qBCpFf,IAAM,MDiGf2iD,gBAAiB,WAKjBjjD,YAAa,WAMblB,sBAAuB,WAKvBpmB,WAAY,WAKZ3P,gBAAiB,WAMjBwM,QAAS,UAAgB,CAAC,cAAe,UAAW,aAMpD+0D,oBAAqB,SAMrBjtC,kBAAmB,SAMnB8sC,sBAAuB,SAMvBiZ,uBAAwB,SAMxBrF,0BAA2B,SAM3B39B,4CAA6C,SAM7CgJ,wBAAyB,SAMzBrpC,sBAAuB,SAMvBkX,SAAU,UAAgB,CAAC,OAAQ,QAKnComB,cAAe,WAKf1lC,MAAO,QAMPkgB,qBAAsB,UAAgB,CACpCiM,eAAgB,SAChBhM,cAAe,SACfkiB,6BAA8B,SAC9Bs5C,4BAA6B,WAQ/B39B,WAAY,UAAgB,CAAC,SAAU,WAKvCnnB,YAAa,UAAgB,CAC3BlB,MAAO,YAAkB,UAAgB,CACvCxU,YAAa,sBACbzjC,GAAI,cAAoB,CAAC,WAAkB,aAC3Cy4C,cAAe,WACfp4C,MAAO,WACL69F,WACJhmD,aAAc,UAAgB,CAAC,MAAO,OACtCG,yBAA0B,UAAgB,CAAC,MAAO,OAClDD,kBAAmB,YAQrB0vC,iBAAkB,SAOlBqW,sBAAuB,SASvBx5B,sBAAuB,SAOvB0jB,gBAAiB,SAOjB7jB,aAAc,SAKdzlB,SAAU,SAOV2lB,cAAe,SAMflkD,aAAc,WAMdiL,WAAY,SAMZorD,qBAAsB,SAMtBJ,2BAA4B,SAO5B/rC,aAAc,WAOdwd,eAAgB,SAOhB8L,gBAAiB,SAQjByB,4BAA6B,SAK7BlkD,QAAS,SAMTwmB,WAAY,WAMZhW,OAAQ,UAAgB,CACtBuK,MAAO,oBACPhK,MAAO,oBACPiK,KAAM,oBACNC,KAAM,sBAORG,SAAU,UAAgB,CAAC,QAAS,QAAS,OAAQ,QAAQ,IAK7D9I,MAAO,WAQP6mD,YAAa,SAQbC,kBAAmB,SAQnBxkB,iBAAkB,SAOlBC,gBAAiB,SAOjBC,eAAgB,SAQhBwkB,eAAgB,SAQhBD,cAAe,SAOf9gB,uBAAwB,SAQxBqgB,oBAAqB,SAQrBC,0BAA2B,SAQ3BG,oBAAqB,SAQrBC,oBAAqB,SAQrBF,kBAAmB,SAQnBD,mBAAoB,SAQpBI,oBAAqB,SAUrBnR,yBAA0B,SAO1BjC,8BAA+B,SAS/BpO,sBAAuB,SAOvBhB,sBAAuB,SAQvBmjB,QAAS,SAOTjL,oBAAqB,SAQrB8K,YAAa,SAQbD,WAAY,SAOZ9nB,aAAc,SAOdb,iBAAkB,SAQlByoB,uBAAwB,SAQxBC,sBAAuB,SAMvBnhB,wBAAyB,SAQzBhiC,SAAU,SASVujD,WAAY,SAQZD,iBAAkB,SAOlBvjB,gBAAiB,SAOjBC,eAAgB,SAOhBC,cAAe,SAOfuF,sBAAuB,SAOvB0G,uBAAwB,SAOxBqO,kBAAmB,SASnBkJ,cAAe,SAMfzpB,KAAM,WAONjkD,UAAyB,WCtpBhB,IAAM,MD6pBf25C,WAAYj5C,IACe,IAArBA,EAAMi5C,WACD,IAAIvqB,MAAM,CAAC,8DAA+D,0DAA2D,GAAI,8FAA8F0H,KAAK,OAG9O,KAST0nB,eAAgB,UAAgB,CAAC,SAAU,WAU3CwN,iBAAkB,SAMlBgkC,UAAW,WAMXvuC,SAAU,WAMV9+B,UAAW,WAKXysC,cAAe,WAKf7Q,KAAM,YAAkB,YAAkBgiD,WAM1ChW,eAAgB,UAAgB,CAAC,SAAU,WAM3CjL,mBAAoB,YAAkB,YAMtC4Q,aAAc,WAKdvkB,cAAe,WAKf9X,gBAA+B,cAAoB,CAAC,WAAkB,WAAkB,YC7uB/E,IAAM,MDyvBfm3B,oBAAqB,SAMrBqF,sBAAuB,SAQvB/qB,YAAa,UAAgB,CAAC,SAAU,WAMxCF,aAAc,YAAkB,UAAgB,CAAC,MAAO,UAKxD3Q,UAAW,YAAkB,UAAgB,CAC3ChzB,MAAO,sBACP4jC,KAAM,UAAgB,CAAC,MAAO,YAMhC6P,GAAI,cAAoB,CAAC,YAAkB,cAAoB,CAAC,SAAgB,WAAkB,YAAmB,SAAgB,a,+JE1xBvI,MAAMtnE,EAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,YAmB5I6yF,EAAqB//F,IACzB,MAAM,MACJgC,GACEhC,EACEkJ,GAAQ,OAA8BlJ,EAAOkN,GAE7C0V,GAAS,EAAAo9E,EAAA,KACTt9E,GAAY,EAAAC,EAAA,KAIZ/S,EArBkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,gBAEoB,IAAyBoC,EAAQ,EAc9CG,CAHG,CACjBH,QAAS8S,EAAU9S,UAGfi7E,EAAO,WAAc,IAAM7oF,EAAQ0gB,EAAUsC,WAAWmmE,oBAAsBzoE,EAAUsC,WAAWomE,sBAAsB,CAAC1oE,EAAUsC,WAAWomE,qBAAsB1oE,EAAUsC,WAAWmmE,oBAAqBnpF,IACrN,OAAoB,SAAK6oF,GAAM,OAAS,CACtCj8E,SAAU,QACVc,UAAWE,EAAQpC,KACnByyF,YAAar9E,EAAOljB,QAAQ+5B,cAAcz3B,EAAQ,uBAAyB,yBAC3E,aAAcuc,QAAQvc,IACrBkH,GAAO,EA2FNg3F,EAA+B,OAAWH,G,qCChIhD,MAAM,EAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,WAAY,eAAgB,oBAAqB,QAAS,iBAWnN,EAAoBxyF,IACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,oBAEoB,IAAyBoC,EAAQ,EAGhE,SAASuwF,EAAoBngG,GAC3B,IAAI+kB,EAEJ,MACEpjB,GAAIC,EAAM,MACVI,EAAK,MACL++B,EAAK,UACLrxB,EAAS,SACTuxB,EAAQ,cACRC,GACElhC,EACEkJ,GAAQ,OAA8BlJ,EAAO,GAE7C4iB,GAAS,EAAAo9E,EAAA,KACTh9F,EAAW,SAAa,MACxBrB,GAAK,EAAAk9B,EAAA,MACJ+C,EAAYr+B,GAAiB,WAAevB,GAC7C0gB,GAAY,EAAAC,EAAA,KACZpV,EAAa,CACjBqC,QAAS8S,EAAU9S,SAEfA,EAAU,EAAkBrC,GAC5Bs0B,EAAe,eAAkBC,UACrC,MAAM79B,EAAWD,EAAM4F,OAAOoU,QAE1BkjB,SACIA,EAAcl9B,EAAOC,GAG7BV,EAAcU,SACR2e,EAAOljB,QAAQ2iC,iBAAiB,CACpC1gC,GAAIC,EACJm/B,QACA/+B,MAAOiC,GACND,EAAM,GACR,CAAC4e,EAAQme,EAAOn/B,EAAQs/B,IAS3B,OARA,aAAgB,KACd39B,EAAcvB,EAAM,GACnB,CAACA,KACJ,EAAAshB,EAAA,IAAkB,KACZ2d,GACFj+B,EAAStD,QAAQqF,OACnB,GACC,CAACk8B,KACgB,SAAK,SAAS,OAAS,CACzC71B,QAASzJ,EACT+N,WAAW,OAAKE,EAAQpC,KAAMkC,IAC7BxG,EAAO,CACR6N,UAAuB,SAAK2L,EAAUsC,WAAWynE,cAAc,OAAS,CACtE9qF,GAAIA,EACJqB,SAAUA,EACVgb,QAASO,QAAQqjB,GACjB3/B,SAAU4/B,EACVpxB,KAAM,SACkD,OAAtDsU,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBq7E,iBAEpG,C,0BC7EA,MAAM,EAAY,CAAC,OAAQ,aAAc,SAAU,mBAM5C,SAASC,EAAuBrgG,GACrC,IAAI+kB,EAAuBse,EAAuB7X,EAAwBC,EAE1E,MAAM,KACJ4S,EAAI,WACJC,EAAU,OACV1b,EAAM,gBACN2b,GACEv+B,EACEy1B,GAAS,OAA8Bz1B,EAAO,IAE7Cy+B,EAAkBC,GAAuB,WAAeL,EAAKr8B,OAAS,IACvE0gB,GAAY,EAAAC,EAAA,KAEZ+gB,EAAqE,OAAnDL,IADwD,OAAtDte,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB4e,aAAe,CAAC,GACtEC,SAAkBP,EAC5EJ,EAAkBS,EAAiB,SAAWsB,EAAA,EAC9ClG,EAAiB,eAAkB96B,IACvC,MAAMhC,EAAQgC,EAAM4F,OAAO5H,MAC3B08B,EAAoB18B,GACpBs8B,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,UACC,GACF,CAACs8B,EAAYD,IAIhB,OAHA,aAAgB,KACdK,EAAoBL,EAAKr8B,OAAS,GAAG,GACpC,CAACq8B,EAAKr8B,SACW,UAAM0gB,EAAUsC,WAAWia,eAAe,OAAS,CACrEz9B,MAAOohB,EAAOljB,QAAQ+5B,cAAc,yBACpCz3B,MAAOy8B,EACPx8B,SAAU68B,EACVt0B,QAAQ,EACRoP,QAAS,WACT4rB,aAAa,OAAS,CACpB5B,OAAQF,EACR48D,cAAc,GAC2C,OAAvD90E,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBmY,YAClGpsB,gBAAiB,CACf4nB,QAAQ,GAEVn8B,SAAUu7B,GACT9I,EAAgE,OAAvDhK,EAAyB/I,EAAUrN,sBAA2B,EAASoW,EAAuB4T,cAAe,CACvHtoB,SAAU,EAAc,SAAKksB,EAAiB,CAC5CjhC,MAAO,GACP+U,SAAU6L,EAAOljB,QAAQ+5B,cAAc,qBACxB,SAAKwJ,EAAiB,CACrCjhC,MAAO,OACP+U,SAAU6L,EAAOljB,QAAQ+5B,cAAc,sBACxB,SAAKwJ,EAAiB,CACrCjhC,MAAO,QACP+U,SAAU6L,EAAOljB,QAAQ+5B,cAAc,yBAG7C,CC9CO,MAAM8mE,GAAuB,OAAS,CAAC,EAAG,IAAqB,CACpEhnF,KAAM,UACNkkB,MAAO,SACPC,YAAa,SACbmM,WHkH+BjzB,GAC3BA,EAAOkzC,QAAQlH,gBACV,IAGW,SAAKs9C,GAAiB,OAAS,CAAC,EAAGtpF,IGtHvD+rB,eFuJmC/rB,IAAuB,SAAKupF,GAAqB,OAAS,CAAC,EAAGvpF,IEtJjG+mB,eAAgB,KAChBE,eAdF,UAA8B,MAC5B77B,EAAK,IACLsiB,IAEA,OAAOtiB,EAAQsiB,EAAImV,cAAc,wBAA0BnV,EAAImV,cAAc,wBAC/E,EAUEsE,gBCrB2C,CAAC,CAC5C/7B,MAAO,KACP+6B,iBAAkBC,IAChB,IAAKA,EAAWh7B,MACd,OAAO,KAGT,MAAMw+F,EAAsC,SAArBxjE,EAAWh7B,MAClC,MAAO,EACLA,WAEOuc,QAAQvc,KAAWw+F,CAC3B,EAEHtjE,eAAgBmjE,IDQhBriE,2BAAuBxyB,EAEvBi+B,YAAY,G,iMEvBd,MAAMv8B,EAAY,CAAC,QAAS,KAAM,QAAS,iBAAkB,MAAO,UAAW,SAAU,aAAc,WAAY,WAAY,WAAY,WAAY,OAmM1IuzF,EA9KmC,cAAiB,SAAkCzgG,EAAOyL,GACxG,IAAIsZ,EAEJ,MAAM,MACJgc,EAAK,GACLp/B,EACAK,MAAO0+F,EAAS,QAChB52C,EAAO,SACP7oB,EAAQ,SACRn1B,GACE9L,EACEkJ,GAAQ,OAA8BlJ,EAAOkN,GAE7C0V,GAAS,EAAAo9E,EAAA,KACTt9E,GAAY,EAAAC,EAAA,KAIZ/S,EA5BkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,kBAEoB,IAAyBoC,EAAQ,EAqB9CG,CAHG,CACjBH,QAAS8S,EAAU9S,UAGf+wF,EAAkB,SAAa,MAC/BC,EAAY,WACZzkF,GAAY,EAAAC,EAAA,GAAWukF,EAAiBl1F,GACxC3F,EAAU8c,EAAOljB,QAAQizD,eAAehxD,EAAIo/B,GAUlD,mBAAsB,KACH,IAAbj1B,GAAkBhG,IACpBA,EAAQgG,UAAY,EACtB,GACC,CAAChG,EAASgG,IACb,aAAgB,KACd,GAAIm1B,EAAU,CACZ,IAAI4/D,EAEJ,MAAMriG,EAA6D,OAApDqiG,EAAwBF,EAAgBjhG,cAAmB,EAASmhG,EAAsB77F,cAAc,SAC9G,MAATxG,GAAyBA,EAAMuG,MAAM,CACnCqjC,eAAe,GAEnB,MAAWw4D,EAAUlhG,SAEnBkhG,EAAUlhG,QAAQyoC,KAAK,CAAC,EAC1B,GACC,CAAClH,IACJ,MAAMh4B,EAAgB,eAAkBjF,KAClC,QAAWA,EAAMqF,MACnBrF,EAAMwF,mBAGJ,QAAgBxF,EAAMqF,OAASrF,EAAMg8C,UACvCp9B,EAAOljB,QAAQqtB,aAAa,wBAAyB/sB,EAAOgE,EAC9D,GACC,CAAC4e,EAAQ5iB,IAEZ,GAAyB,WAArB8pD,EAAQ56C,SACV,OAAO,KAGT,MAAMwpD,EAAe91C,EAAOljB,QAAQi2D,gBAAgBh0D,GAC9CH,EAAQohB,EAAOljB,QAAQ+5B,cAAcinE,EAAY,+BAAiC,8BAExF,OAAI52C,EAAQ3H,SACH,MAGW,SAAKz/B,EAAUsC,WAAWynE,cAAc,OAAS,CACnEhhF,IAAK0Q,EACLrQ,SAAUA,EACVkS,QAAS0iF,EACTz+F,SAnDmB+B,IACnB,MAAM4S,EAAS,CACb5U,MAAOgC,EAAM4F,OAAOoU,QACpBrc,MAEFihB,EAAOljB,QAAQqtB,aAAa,6BAA8BnW,EAAQ5S,EAAM,EA+CxE0L,UAAWE,EAAQpC,KACnBkK,WAAY,CACV,aAAclW,GAEhB2H,UAAWF,EACXlI,UAAW23D,EACXzvB,eAAgB23D,GACwC,OAAtD77E,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBq7E,aAAcl3F,GAChH,I,2DCzGA,MAAM,EAAY,CAAC,QAAS,UAyBtB43F,EAAkC,cAAiB,SAA4B9gG,EAAOyL,GAC1F,IAAIsZ,EAEJ,MAAM7b,GAAQ,OAA8BlJ,EAAO,IAE5C,CAAE02B,GAAe,YAAe,GACjC9T,GAAS,EAAAo9E,EAAA,KACTt9E,GAAY,EAAAC,EAAA,KAIZ/S,EArBkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,kBAEoB,IAAyBoC,EAAQ,EAc9C,CAHG,CACjBA,QAAS8S,EAAU9S,UAGfksF,GAAgB,EAAAh5E,EAAA,GAAgBF,EAAQ,MACxC2X,GAAY,EAAAzX,EAAA,GAAgBF,EAAQ,MACpCwzC,GAAgB,EAAAtzC,EAAA,GAAgBF,EAAQ,MACxCm+E,GAAyB,EAAAj+E,EAAA,GAAgBF,EAAQ,MACjDo+E,EAAoB,WAAc,IACG,mBAA9Bt+E,EAAUizC,gBACZp7B,EAGFA,EAAU57B,QAAOgD,KAEjBihB,EAAOljB,QAAQ2mD,OAAO1kD,IAIpB+gB,EAAUizC,gBAAgB/yC,EAAOljB,QAAQ6oC,aAAa5mC,OAE9D,CAACihB,EAAQF,EAAUizC,gBAAiBp7B,IAEjC0mE,EAAsB,WAAc,KACxBv+E,EAAUu2B,YAAev2B,EAAUs1C,6BAA+C+oC,EAAhB3qC,GAGpEvrD,QAAO,CAACC,EAAKnJ,KACzBmJ,EAAInJ,IAAM,EACHmJ,IACN,CAAC,IACH,CAAC4X,EAAUu2B,WAAYv2B,EAAUs1C,6BAA8B+oC,EAAwB3qC,IAEpF8qC,EAAuB,WAAc,IAAMF,EAAkBriG,QAAOgD,GAAMs/F,EAAoBt/F,KAAKvC,QAAQ,CAAC4hG,EAAmBC,IAC/HE,EAAkBD,EAAuB,GAAKA,EAAuB9xE,OAAOC,KAAK4xE,GAAqB7hG,OACtGshG,EAAYQ,EAAuB,EASnCp1F,EAA6B,OAAlBgwF,GAA0BA,EAAc/6D,QAAU/gC,EAAM+gC,MAAQ,GAAK,EACtF,mBAAsB,KACpB,MAAMj7B,EAAU8c,EAAOljB,QAAQ6yD,uBAAuBvyD,EAAM+gC,OAE3C,IAAbj1B,GAAkBhG,IACpBA,EAAQgG,UAAY,EACtB,GACC,CAACA,EAAU8W,EAAQ5iB,EAAM+gC,QAC5B,MAAM93B,EAAgB,eAAkBjF,IACpB,MAAdA,EAAMqF,KAERuZ,EAAOljB,QAAQqtB,aAAa,gCAAiC,CAC3D/qB,OAAQ0+F,KAKR,QAAgB18F,EAAMqF,OAASrF,EAAMg8C,UACvCp9B,EAAOljB,QAAQqtB,aAAa,gCAAiC/sB,EAAOgE,EACtE,GACC,CAAC4e,EAAQ5iB,EAAO0gG,IACbU,EAAwB,eAAkB,KAC9C1qE,GAAY2qE,IAAMA,GAAE,GACnB,IACH,aAAgB,IACPz+E,EAAOljB,QAAQwrB,eAAe,kBAAmBk2E,IACvD,CAACx+E,EAAQw+E,IACZ,MAAM5/F,EAAQohB,EAAOljB,QAAQ+5B,cAAcinE,EAAY,mCAAqC,kCAC5F,OAAoB,SAAKh+E,EAAUsC,WAAWynE,cAAc,OAAS,CACnEhhF,IAAKA,EACL4M,cAAe8oF,EACfnjF,QAAS0iF,EACTz+F,SAvCmB+B,IACnB,MAAM4S,EAAS,CACb5U,MAAOgC,EAAM4F,OAAOoU,SAEtB4E,EAAOljB,QAAQqtB,aAAa,gCAAiCnW,EAAO,EAoCpElH,UAAWE,EAAQpC,KACnBkK,WAAY,CACV,aAAclW,GAEhBsK,SAAUA,EACV3C,UAAWF,GAC6C,OAAtD8b,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBq7E,aAAcl3F,GAChH,I,eChHO,MAAMo4F,EAAgC,YAChCC,GAAkC,OAAS,CAAC,EAAG,IAAsB,CAChFxgE,MAAOugE,EACP/nF,KAAM,oBACN1I,MAAO,GACPslF,WAAW,EACX5sD,UAAU,EACVC,YAAY,EAEZC,YAAY,EACZE,mBAAmB,EACnBu/C,gBAAgB,EAChBt/C,eAAe,EACf5L,2BAAuBxyB,EACvB8mD,YAAa17C,QAE2BpL,KADd,QAA0BoL,EAAO0N,IAAI1gB,MAAOgT,EAAO0N,IAAIsQ,YACxDhe,EAAOjV,IAEhC02F,aAAczhF,IAAuB,SAAKkqF,GAAoB,OAAS,CAAC,EAAGlqF,IAC3EizB,WAAYjzB,IAAuB,SAAK6pF,GAA0B,OAAS,CAAC,EAAG7pF,K,2MCxBjF,MAAM1J,EAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,WAAY,eAAgB,aAAc,oBAAqB,iBAwB3Ms0F,GAAwB,EAAAp0F,EAAA,IAAOyzB,EAAA,GAAW,CAC9Cn9B,KAAM,cACNqJ,KAAM,gBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAOm0F,eAHjB,EAI3B,EACDzzF,YACI,OAAS,CAAC,EAAGA,EAAMS,WAAWuS,MAAO,CACzC5P,QAAS,QACT,UAAW,CACTA,QAAS,SACTgJ,OAAQ,YAGNsnF,EAAiC,cAAiB,CAAC1hG,EAAOyL,KAC9D,IAAIu4B,EAAuB29D,EAE3B,MAAMj/E,GAAY,EAAAC,EAAA,MAEZ,GACJhhB,EAAE,MACFK,EAAK,MACL++B,EAAK,OACLC,EAAM,SACNC,EAAQ,WACRipB,GAAyE,OAA3DlmB,EAAwBthB,EAAUyhB,uBAAiCH,EAAsBI,cAAgB,IAAM,KAAyB,kBACtJqoB,EAAiB,cACjBvrB,GACElhC,EACEkJ,GAAQ,OAA8BlJ,EAAOkN,GAE7C0V,GAAS,EAAAo9E,EAAA,KACTh9F,EAAW,YACV4+B,EAAYr+B,GAAiB,WAAevB,GAI7C4N,EA9CkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,kBAEoB,IAAyBoC,EAAQ,EAuC9CG,CAHG,CACjBH,QAAS8S,EAAU9S,UAGfiyB,EAAe,eAAkBC,UACrC,IAAI+C,EAEJ,MAAM5gC,EAAWD,EAAM4F,OAAO5H,MAE1Bk/B,SACIA,EAAcl9B,EAAOC,GAG7B,MAAMsiC,EAAS3jB,EAAOljB,QAAQ2lC,UAAUtE,GACxC,IAAIka,EAAch3C,EAEdsiC,EAAO3I,aAA4E,OAA5DiH,EAAyBniB,EAAUyhB,uBAAiCU,EAAuBT,gBACpH6W,EAAc1U,EAAO3I,YAAY35B,EAAU2e,EAAOljB,QAAQglC,cAAc/iC,EAAIo/B,KAG9Ex9B,EAAc03C,GACdr4B,EAAOljB,QAAQ2iC,iBAAiB,CAC9B1gC,KACAo/B,QACA/+B,MAAOi5C,EACPiP,aACA4D,0BAA0B,GACzB9pD,EAAM,GACR,CAAC4e,EAAQsnC,EAAYnpB,EAAOp/B,EAAIu/B,EAA4E,OAA5DygE,EAAyBj/E,EAAUyhB,2BAAgC,EAASw9D,EAAuBv9D,gBAChJw9D,EAAOh/E,EAAOljB,QAAQsxD,yBAA2BpuC,EAAOljB,QAAQsxD,yBAAyBrvD,EAAIo/B,GAAS,CAAC,EAW7G,OAVA,aAAgB,KACY,8BAAtB6gE,EAAK5zC,cACPzqD,EAAcvB,EAChB,GACC,CAAC4/F,EAAK5zC,aAAchsD,KACvB,EAAAshB,EAAA,IAAkB,KACZ2d,GACFj+B,EAAStD,QAAQqF,OACnB,GACC,CAACk8B,KACgB,SAAKugE,GAAuB,OAAS,CACvD/1F,IAAKA,EACLzI,SAAUA,EACV0M,UAAWE,EAAQpC,KACnB6C,WAAW,EACXkJ,KAAsB,WAAhBynB,EAAOznB,KAAoBynB,EAAOznB,KAAO,OAC/CvX,MAAqB,MAAd4/B,EAAqBA,EAAa,GACzC3/B,SAAU4/B,EACV/vB,aAAc26C,GAAiC,SAAK,KAAc,CAAC,QAAKjhD,GACvEtC,GAAO,I,qCCzGL,MCIM24F,EAAsB,CACjChxF,MAAO,IACPI,SAAU,GACVF,SAAUs8B,IACVC,MAAM,EACN0pC,UAAU,EACVztC,UAAU,EACV4sD,WAAW,EACX3sD,YAAY,EACZs4D,WAAW,EACXC,UAAU,EAEVt4D,YAAY,EACZsgB,UAAU,EACVpsB,eAAgB,KAChBpkB,KAAM,SACNkkB,MAAO,OACPM,gBDToC,EAACikE,GAAc,IAAU,CAAC,CAC9DhgG,MAAO,WACP+6B,iBAAkBC,IAChB,IAAKA,EAAWh7B,MACd,OAAO,KAGT,MAAMigG,EAAkBD,EAAchlE,EAAWh7B,MAAQg7B,EAAWh7B,MAAM5D,OACpE8jG,EAAc,IAAIC,QAAO,QAAaF,GAAkB,KAC9D,MAAO,EACLjgG,WAEgB,MAATA,GAAgBkgG,EAAYz6B,KAAKzlE,EAAMgzB,WAC/C,EAEHkI,eAAgBC,EAAA,GACf,CACDn7B,MAAO,SACP+6B,iBAAkBC,IAChB,IAAKA,EAAWh7B,MACd,OAAO,KAGT,MAAMigG,EAAkBD,EAAchlE,EAAWh7B,MAAQg7B,EAAWh7B,MAAM5D,OACpEgjF,EAAW,IAAIC,KAAKC,cAAS91E,EAAW,CAC5C42F,YAAa,OACbC,MAAO,WAET,MAAO,EACLrgG,WAEgB,MAATA,GAAwE,IAAxDo/E,EAASsC,QAAQue,EAAiBjgG,EAAMgzB,WAChE,EAEHkI,eAAgBC,EAAA,GACf,CACDn7B,MAAO,aACP+6B,iBAAkBC,IAChB,IAAKA,EAAWh7B,MACd,OAAO,KAGT,MAAMigG,EAAkBD,EAAchlE,EAAWh7B,MAAQg7B,EAAWh7B,MAAM5D,OACpE8jG,EAAc,IAAIC,OAAO,KAAI,QAAaF,QAAuB,KACvE,MAAO,EACLjgG,WAEgB,MAATA,GAAgBkgG,EAAYz6B,KAAKzlE,EAAMgzB,WAC/C,EAEHkI,eAAgBC,EAAA,GACf,CACDn7B,MAAO,WACP+6B,iBAAkBC,IAChB,IAAKA,EAAWh7B,MACd,OAAO,KAGT,MAAMigG,EAAkBD,EAAchlE,EAAWh7B,MAAQg7B,EAAWh7B,MAAM5D,OACpE8jG,EAAc,IAAIC,OAAO,MAAK,QAAaF,MAAqB,KACtE,MAAO,EACLjgG,WAEgB,MAATA,GAAgBkgG,EAAYz6B,KAAKzlE,EAAMgzB,WAC/C,EAEHkI,eAAgBC,EAAA,GACf,CACDn7B,MAAO,UACP+6B,iBAAkB,IACT,EACL/6B,WAEiB,KAAVA,GAAyB,MAATA,EAG3Bq7B,qBAAqB,GACpB,CACDr7B,MAAO,aACP+6B,iBAAkB,IACT,EACL/6B,WAEiB,KAAVA,GAAyB,MAATA,EAG3Bq7B,qBAAqB,GACpB,CACDr7B,MAAO,UACP+6B,iBAAkBC,IAChB,IAAK10B,MAAMC,QAAQy0B,EAAWh7B,QAAsC,IAA5Bg7B,EAAWh7B,MAAM5C,OACvD,OAAO,KAGT,MAAM6iG,EAAkBD,EAAchlE,EAAWh7B,MAAQg7B,EAAWh7B,MAAM6U,KAAIxP,GAAOA,EAAIjJ,SACnFgjF,EAAW,IAAIC,KAAKC,cAAS91E,EAAW,CAC5C42F,YAAa,OACbC,MAAO,WAET,MAAO,EACLrgG,WACa,MAATA,GAAgBigG,EAAgBz9F,MAAK89F,GACwB,IAA1DlhB,EAASsC,QAAQ4e,EAAatgG,EAAMgzB,YAAc,KACjD,EAEZkI,eAAgBK,EAAA,IChGCglE,GACjB5/D,eF+KiC/rB,IAAuB,SAAK8qF,GAAmB,OAAS,CAAC,EAAG9qF,IE9K7FonB,sBDvBwCh8B,IACxC,IAAKA,EACH,OAAO,KAGT,MAAMkgG,EAAc,IAAIC,QAAO,QAAangG,GAAQ,KACpD,MAAO,EACLA,MAAOi8B,KAEe,MAAfA,GAAsBikE,EAAYz6B,KAAKxpC,EAAYjJ,WAC3D,E,wDEZI,MAAMtH,E,SAA8B,mBAAoBliB,E,4jBCExD,MAAMg3F,GAAsB,QAA4B,SAAK,OAAQ,CAC1E31F,EAAG,gEACD,eACS41F,GAAwB,QAA4B,SAAK,OAAQ,CAC5E51F,EAAG,mEACD,iBACS61F,GAAyB,QAA4B,SAAK,OAAQ,CAC7E71F,EAAG,2DACD,sBACS81F,GAAqB,QAA4B,SAAK,OAAQ,CACzE91F,EAAG,iDACD,cACS+1F,GAAqB,QAA4B,SAAK,OAAQ,CACzE/1F,EAAG,mDACD,cACSg2F,GAAoB,QAA4B,SAAK,OAAQ,CACxEh2F,EAAG,mJACD,aACSi2F,GAAiB,QAA4B,SAAK,OAAQ,CACrEj2F,EAAG,+OACD,UAOSk2F,IANe,QAA4B,SAAK,OAAQ,CACnEl2F,EAAG,kDACD,SAC+B,QAA4B,SAAK,OAAQ,CAC1EA,EAAG,0HACD,gBAC0B,QAA4B,SAAK,OAAQ,CACrEA,EAAG,mPACD,eACSm2F,GAAoB,QAA4B,SAAK,OAAQ,CACxEn2F,EAAG,mBACD,aACSo2F,GAAuB,QAA4B,SAAK,OAAQ,CAC3Ep2F,EAAG,gEACD,gBACSq2F,GAAoB,QAA4B,SAAK,OAAQ,CACxEr2F,EAAG,wDACD,aACSs2F,GAAqB,QAA4B,SAAK,OAAQ,CACzEt2F,EAAG,mCACD,cACSu2F,GAA6B,QAA4B,SAAK,OAAQ,CACjFv2F,EAAG,sJACD,sBACSw2F,GAAgB,QAA4B,SAAK,OAAQ,CACpEx2F,EAAG,0GACD,SACSy2F,GAAc,QAA4B,SAAK,OAAQ,CAClEz2F,EAAG,wCACD,OACS02F,GAAiB,QAA4B,SAAK,OAAQ,CACrE12F,EAAG,sBACD,UACS22F,GAAe,QAA4B,SAAK,OAAQ,CACnE32F,EAAG,oOACD,QACS42F,GAAe,QAA4B,SAAK,OAAQ,CACnE52F,EAAG,wSACD,QACS62F,GAAkB,QAA4B,SAAK,OAAQ,CACtE72F,EAAG,uHACD,WACS82F,GAAgB,QAA4B,SAAK,OAAQ,CACpE92F,EAAG,sDACD,SACS+2F,GAAmB,QAA4B,SAAK,OAAQ,CACvE/2F,EAAG,sJACD,W,mJCrEJ,MAAMK,EAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,WAStH,SAASqwB,EAA6Bv9B,GACpC,MAAM,KACJq+B,EAAI,WACJC,EAAU,KACV/kB,EAAI,OACJqJ,EAAM,gBACN2b,EAAe,MACf9wB,EAAK,MACLwW,EAAK,WACLyhB,EAAU,KACVj1B,EAAI,QACJmJ,GACE5Z,EACEkJ,GAAQ,OAA8BlJ,EAAOkN,GAE7Cy4B,EAAiB,CACrBl4B,QACAwW,QACAyhB,aACAj1B,OACAmJ,YAEK6kB,EAAkBC,GAAuB,WAAeL,EAAKr8B,OAAS,IACvEL,GAAK,SACL+gB,GAAY,SAClB,aAAgB,KACd,IAAI0b,EAEJ,MAAMY,EAA0C,OAA7BZ,EAAcC,EAAKr8B,OAAiBo8B,EAAc,GACrEM,EAAoBM,EAAUnoB,IAAIhU,QAAQ,GACzC,CAACw7B,EAAKr8B,QACT,MAAM6/B,EAAe,eAAkB,CAAC79B,EAAOhC,KAC7C08B,EAAoB18B,EAAM6U,IAAIhU,SAC9By7B,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,MAAO,IAAIA,KACV,GACF,CAACs8B,EAAYD,IAChB,OAAoB,SAAK,KAAc,OAAS,CAC9Cz9B,UAAU,EACVJ,UAAU,EACVnC,QAAS,GACT8C,cAAe,CAAC9C,EAASuY,KACvB,MAAM,WACJtY,GACEsY,EACJ,OAAqB,MAAdtY,GAAqC,KAAfA,EAAoB,GAAK,CAACA,EAAW,EAEpEqD,GAAIA,EACJK,MAAOy8B,EACPx8B,SAAU4/B,EACVrrB,WAAY,CAACxU,EAAOgK,IAAgBhK,EAAM6U,KAAI,CAACjY,EAAQsG,KAAuB,SAAK,KAAM,OAAS,CAChG0U,QAAS,WACTnJ,KAAM,QACNjP,MAAO5C,GACNoN,EAAY,CACb9G,cAEFmR,YAAaO,IACX,IAAImO,EAEJ,OAAoB,SAAKrC,EAAUsC,WAAWia,eAAe,OAAS,CAAC,EAAGroB,EAAQ,CAChFpV,MAAOohB,EAAOljB,QAAQ+5B,cAAc,yBACpCyF,YAAatc,EAAOljB,QAAQ+5B,cAAc,+BAC1CliB,iBAAiB,OAAS,CAAC,EAAGX,EAAOW,gBAAiB,CACpD4nB,QAAQ,IAEVn8B,SAAUu7B,EACVhlB,KAAMA,GAAQ,QACbosB,EAAuE,OAAtD5gB,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBsa,eAAe,GAEhIn2B,GACL,C,sLChFA,MAAMgE,EAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,mBAgB3D,MAAM81B,EAA4B,EAChCc,eACAjG,iBACAkD,SACCzc,EAAK2e,KAC+C,mBAAjBa,EAA8B,CAAC,MAAOA,EAAa,CACrF/C,WACI,CAAC,MAAQ+C,GAAgB,KACHjtB,KAAIjY,IAC9B,MAAMskC,EAAuC,iBAAXtkC,EAC5ByK,EAAM65B,EAAqBtkC,EAAOoD,MAAQpD,EAC1CoD,EAAQkhC,EAAqBtkC,EAAOoD,MAAQpD,EAC5CqmC,EAAiBpH,GAA6B,KAAXj/B,EAAgBi/B,EAAe,CACtE77B,MAAOpD,EACPmiC,QACAzc,QACG1lB,EACCukC,EAAUD,EAAqBtkC,EAAO4C,MAAQyjC,EACpD,OAAoB,SAAKhC,EAAiB,CACxCjhC,MAAOA,EACP+U,SAAUosB,GACT95B,EAAI,IAIEw6F,EAA4B,IAEzC,SAAS1mE,EAAqBn9B,GAC5B,IAAIo+B,EAAarZ,EAAuBse,EAAuB7X,EAAwBC,EAEvF,MAAM,KACJ4S,EAAI,WACJC,EAAU,KACV/kB,EAAI,OACJqJ,EAAM,gBACN2b,GACEv+B,EACEy1B,GAAS,OAA8Bz1B,EAAOkN,GAMpD,MAAMsxB,EAAgB,YACfC,EAAkBC,GAAuB,WAA6C,OAA7BN,EAAcC,EAAKr8B,OAAiBo8B,EAAc,KAC3GO,EAAUC,GAAiB,YAAe,GAC3Cj9B,GAAK,SACL+gB,GAAY,SAEZghB,EAAqE,OAAnDL,IADwD,OAAtDte,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsB4e,aAAe,CAAC,GACtEC,SAAkBP,EAC5EygE,EAA6B,iBAATvqF,EAA0B,CAClD/O,QAAQ,EACRg7B,aAAa,OAAS,CACpB5B,OAAQF,GACiD,OAAvDlY,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuBmY,YAClG5sB,SAAUisB,EAA0BpgB,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aAAcxiB,EAAOljB,QAASgkC,EAAiB,SAAW,MAC1H,CAAC,EACC5E,EAAiB,eAAkB96B,IACvC,IAAIhC,EAAQgC,EAAM4F,OAAO5H,MAEzB,GAAa,iBAATuX,EAAyB,CAC3B,MAAMgtB,EAAS3jB,EAAOljB,QAAQ2lC,UAAUhH,EAAK+G,aACvC2+D,EAAoD,mBAAxBx9D,EAAOzC,aAA8ByC,EAAOzC,aAAa,CACzF/C,MAAOwF,EAAOxF,QACXwF,EAAOzC,aACZ9hC,GAAQ,OAAyBA,EAAO+hG,EAC1C,CAEAxzE,aAAaiO,EAAc9+B,SAC3Bg/B,EAAoB77B,OAAOb,IAC3B48B,GAAc,GAEdJ,EAAc9+B,QAAUuwB,YAAW,KACjCqO,GAAW,OAAS,CAAC,EAAGD,EAAM,CAC5Br8B,WAEF48B,GAAc,EAAM,GACnBilE,EAA0B,GAC5B,CAACjhF,EAAQ0b,EAAYD,EAAM9kB,IAC9B,aAAgB,IACP,KACLgX,aAAaiO,EAAc9+B,QAAQ,GAEpC,IACH,aAAgB,KACd,IAAIq/B,EAEJ,MAAMC,EAA2C,OAA9BD,EAAeV,EAAKr8B,OAAiB+8B,EAAe,GACvEL,EAAoB77B,OAAOm8B,GAAW,GACrC,CAACX,EAAKr8B,QACT,MAAMwV,EAAamnB,EAAW,CAC5B7sB,cAA2B,SAAK,KAAc,CAAC,IAC7C2jB,EAAOje,WACX,OAAoB,SAAKkL,EAAUsC,WAAWia,eAAe,OAAS,CACpEt9B,GAAIA,EACJH,MAAOohB,EAAOljB,QAAQ+5B,cAAc,yBACpCyF,YAAatc,EAAOljB,QAAQ+5B,cAAc,+BAC1Cz3B,MAAOy8B,EACPx8B,SAAU68B,EACVllB,QAAS,WACTL,KAAMA,GAAQ,OACd/B,WAAYA,EACZD,gBAAiB,CACf4nB,QAAQ,GAEVn8B,SAAUu7B,GACTulE,EAAmBruE,EAAgE,OAAvDhK,EAAyB/I,EAAUrN,sBAA2B,EAASoW,EAAuB4T,eAC/H,C,wBC7HO,SAAS2kE,EAAmBplG,GACjC,MAAsB,iBAAXA,GAAkC,OAAXA,EACzBA,EAAOoD,MAGTpD,CACT,CACO,SAASqlG,EAAyBjiG,EAAO8hC,GAC9C,QAAqBt4B,IAAjBs4B,EACF,OAGF,MAAMoZ,EAASpZ,EAAa7K,MAAKr6B,IAC/B,MAAM8nC,EAAcs9D,EAAmBplG,GACvC,OAAOiE,OAAO6jC,KAAiB7jC,OAAOb,EAAM,IAE9C,OAAOgiG,EAAmB9mD,EAC5B,C,oJChBO,SAASgnD,EAAwBn3F,GACtC,OAAO,OAAqB,cAAeA,EAC7C,CACO,MAAMo3F,GAAc,E,QAAA,GAAuB,cAAe,CAAC,cAAe,0BAA2B,qCAAsC,uCAAwC,sCAAuC,aAAc,cAAe,iBAAkB,gBAAiB,mBAAoB,iBAAkB,kBAAmB,qBAAsB,OAAQ,cAAe,eAAgB,eAAgB,gBAAiB,4BAA6B,0BAA2B,2BAA4B,yBAA0B,uBAAwB,wBAAyB,yBAA0B,uBAAwB,yBAA0B,eAAgB,uBAAwB,iCAAkC,uBAAwB,oBAAqB,6BAA8B,oCAAqC,oBAAqB,4BAA6B,2BAA4B,iCAAkC,gBAAiB,qBAAsB,iCAAkC,6BAA8B,4BAA6B,4BAA6B,6BAA8B,kBAAmB,eAAgB,kBAAmB,cAAe,eAAgB,wBAAyB,kCAAmC,aAAc,QAAS,cAAe,eAAgB,eAAgB,cAAe,QAAS,kBAAmB,gBAAiB,aAAc,uBAAwB,8BAA+B,wBAAyB,0BAA2B,uBAAwB,aAAc,kBAAmB,sBAAuB,gBAAiB,OAAQ,OAAQ,WAAY,iBAAkB,WAAY,WAAY,UAAW,OAAQ,wBAAyB,2BAA4B,uBAAwB,MAAO,gBAAiB,eAAgB,mBAAoB,gBAAiB,qBAAsB,2BAA4B,4BAA6B,WAAY,0BAA2B,iBAAkB,4BAA6B,mBAAoB,oBAAqB,aAAc,mBAAoB,WAAY,mBAAoB,oBAAqB,kBAAmB,yBAA0B,qCAAsC,4BAA6B,gBAAiB,sBAAuB,uBAAwB,sBAAuB,4BAA6B,6BAA8B,aAAc,uBAAwB,6BAA8B,uBAAwB,6BAA8B,aAAc,kBAAmB,qBAAsB,wB,uDCHpkF,MAAM32E,E,SAAoC,mBAAoBhiB,E,mUCQvD,MAAMuhC,EAAsBnpC,GAASA,EAAMgpC,QAMrCw3D,GAA2B,OAAer3D,GAAqBe,GAAgBA,EAAa7C,MAM5Fo5D,GAA2B,OAAet3D,GAAqBe,GAAgBA,EAAa3C,SAM5Fm5D,GAAgC,OAAeF,EAA0BC,GAA0B,CAACE,EAAWp5D,IAAWo5D,EAAU1tF,KAAIkqB,GAASoK,EAAOpK,OAOxJyjE,GAAoC,OAAez3D,GAAqBe,GAAgBA,EAAa1C,wBAMrGq5D,GAAuC,OAAeH,EAA+BE,GAAmC,CAAC53D,EAASxB,IAA0BwB,EAAQjuC,QAAO4nC,IAAkD,IAAxC6E,EAAsB7E,EAAOxF,WAYlN2jE,IANkC,OAAeD,GAAsC5hF,GAAkBA,EAAehM,KAAI0vB,GAAUA,EAAOxF,WAM/G,OAAe0jE,GAAsC5hF,IAC9F,MAAM8xC,EAAY,GAClB,IAAIgwC,EAAkB,EAEtB,IAAK,IAAIxlG,EAAI,EAAGA,EAAI0jB,EAAezjB,OAAQD,GAAK,EAC9Cw1D,EAAUnsD,KAAKm8F,GACfA,GAAmB9hF,EAAe1jB,GAAGksC,cAGvC,OAAOspB,CAAS,KAOLiwC,GAAgC,OAAeH,EAAsCC,GAA6B,CAAC7hF,EAAgB8xC,KAC9I,MAAMkwC,EAAWhiF,EAAezjB,OAEhC,OAAiB,IAAbylG,EACK,EAGFlwC,EAAUkwC,EAAW,GAAKhiF,EAAegiF,EAAW,GAAGx5D,aAAa,IAOhEy5D,GAA0C,OAAeR,GAA+B13D,GAAWA,EAAQjuC,QAAOy6D,GAAOA,EAAI5vB,eAM7Hu7D,GAAqC,OAAeT,GAA+B13D,GAAWA,EAAQ/hC,QAAO,CAACC,EAAKsuD,KAC1HA,EAAI5vB,aACN1+B,EAAIsuD,EAAIr4B,OAASq4B,GAGZtuD,IACN,CAAC,KAkDSk6F,IA3C+B,OAAsBZ,EAA0B,CAAC,4GAA6G,0CAOpK,OAAsBE,EAA+B,CAAC,sGAAuG,+CAOzJ,OAAsBG,EAAsC,CAAC,0GAA2G,sDAOrK,OAAsBK,EAAyC,CAAC,6GAA8G,yDAO3K,QAAsB,OAAeA,GAAyCl4D,GAAWA,EAAQ/1B,KAAIuiD,GAAOA,EAAIr4B,UAAS,CAAC,gHAAiH,uDAAwD,2GAA4G,GAAI,6DAA8D,qFAQjd,QAAsB,OAAe0jE,GAAsC5hF,GAAkBA,EAAezjB,SAAS,CAAC,gHAAiH,2FAOhP,QAAsB,OAAeslG,EAA6BE,GAA+B,CAACjwC,EAAWswC,KAAe,CACjKA,aACAtwC,gBACG,CAAC,uGAAwG,6E,yVC3IvG,MAAMuwC,EAA0BthG,GAASA,EAAMjF,OAMzCwmG,GAA0B,OAAeD,GAAyBv+B,GAAeA,EAAY7rB,cAY7FsqD,IANgC,OAAeD,GAAyBrqD,GAAeA,EAAYf,qBAMnE,OAAemrD,GAAyBv+B,GAAeA,EAAYjpB,qBAMnG2nD,GAAiC,OAAeH,GAAyBv+B,GAAeA,EAAYvJ,qBAapGkoC,IAP4C,OAAeJ,GAAyBv+B,GAAeA,EAAYhpB,iCAOzE,OAAeynD,EAA+B,MAA8B,CAAC1nD,EAAmBuW,IAAeA,EAAWt1D,QAAO0hB,IAAqC,IAA9Bq9B,EAAkBr9B,EAAI1e,SAOpM4jG,GAAkC,OAAeD,GAAqCE,GAA2BA,EAAwB3uF,KAAIwJ,GAAOA,EAAI1e,OAOxJ8jG,GAAuC,OAAeJ,EAAgC,MAA8B,CAACjoC,EAAoBnJ,IAAeA,EAAWt1D,QAAO0hB,IAAsC,IAA/B+8C,EAAmB/8C,EAAI1e,QAOxM+jG,GAAmC,OAAeD,GAAsCE,GAA4BA,EAAyB9uF,KAAIwJ,GAAOA,EAAI1e,OAc5JikG,GAA8C,OAAeN,EAAqC,KAAqB,MAA0B,CAAC1mD,EAAmB9L,EAAS+yD,IACrLA,EAAe,EACVjnD,EAGFA,EAAkBjgD,QAAO0hB,IAC9B,IAAIylF,EAEJ,OAA0F,KAA3C,OAAtCA,EAAkBhzD,EAAQzyB,EAAI1e,UAAe,EAASmkG,EAAgB30C,MAAY,MAQlF40C,GAA8B,OAAeT,GAAqC1mD,GAAqBA,EAAkBx/C,SAMzH4mG,GAAsC,OAAeJ,GAA6CK,GAA6BA,EAA0B7mG,SAMzJ8mG,GAAgC,OAAef,EAAyB,MAA0B,CAACrqD,EAAaqrD,KAC3H,IAAIC,EAEJ,OAAmD,OAA3CA,EAAqBtrD,EAAYlB,YAAiB,EAASwsD,EAAmBznG,QAAO0/B,IAC3F,IAAIwkC,EAAuBzkC,EAE3B,IAAKC,EAAK+G,YACR,OAAO,EAGT,MAAMmB,EAAS4/D,EAAa9nE,EAAK+G,aAEjC,GAAgB,MAAVmB,IAAkBA,EAAOxI,iBAAqJ,KAAtH,MAAVwI,GAA8E,OAAnDs8B,EAAwBt8B,EAAOxI,sBAAzC,EAA6E8kC,EAAsBzjE,QACtK,OAAO,EAGT,MAAMk8C,EAAiB/U,EAAOxI,gBAAgB9E,MAAKsiB,GAAYA,EAASv5C,QAAUq8B,EAAK+b,gBAEvF,QAAKkB,KAIGA,EAAepe,gBAAgC,MAAdmB,EAAKr8B,OAA4F,MAA5C,OAA7Bo8B,EAAcC,EAAKr8B,YAAiB,EAASo8B,EAAYpJ,YAAkB,GAC5I,IAOSqxE,GAAsC,OAAeH,GAA+BI,GAChFA,EAAcz7F,QAAO,CAACopB,EAAK+I,KACnC/I,EAAI+I,EAAWoI,aAGlBnR,EAAI+I,EAAWoI,aAAa58B,KAAKw0B,GAFjC/I,EAAI+I,EAAWoI,aAAe,CAACpI,GAK1B/I,IACN,CAAC,I,gJClJC,MAAMsyE,EAAyB3iG,GAASA,EAAMmB,MACxCyhG,GAAwB,OAAeD,GAAwBE,GAAcA,EAAWpnF,OACxFqnF,GAAgC,OAAeH,GAAwBE,GAAcA,EAAW/mF,eAChGinF,EAA4B/iG,GAASA,EAAMkI,SAC3C86F,GAA2B,OAAeD,GAA2B/iG,GAASA,EAAMyb,OACpFwnF,GAAmC,OAAeF,GAA2B/iG,GAASA,EAAM8b,c,sNCElG,MAAMknD,EAAyBhjE,GAASA,EAAMq1C,WAMxC6tD,GAAmB,OAAelgC,GAAwB3tB,GAAcA,EAAWsK,OAMnFwjD,GAAuB,OAAengC,GAAwB3tB,GAAcA,EAAW35C,WAYvF0nG,IANwB,OAAepgC,GAAwB3tB,GAAcA,EAAWqK,aAMvD,OAAesjB,EAAwB,KAAqB,KAA0B,KAAqC,MAA6C,CAAC3tB,EAAYnG,EAAS+yD,EAAcL,EAAyByB,KACjR,MAAMriD,EAA0BqiD,EAAgC7nG,OAC1D8nG,EAAwBpgG,KAAKglC,IAAImN,EAAW35C,SAAW25C,EAAWsK,KAAMqB,EAA0B,GAClGuiD,EAAuBrgG,KAAKglC,IAAIo7D,EAAwBjuD,EAAW35C,SAAW,EAAGslD,EAA0B,GAEjH,IAA+B,IAA3BsiD,IAA0D,IAA1BC,EAClC,OAAO,KAIT,GAAItB,EAAe,EACjB,MAAO,CACL9nD,cAAempD,EACflpD,aAAcmpD,GAIlB,MAAMC,EAAmBH,EAAgCC,GACnDG,EAAiCF,EAAuBD,EAAwB,EAChFnpD,EAAgBynD,EAAwBxmG,WAAUqhB,GAAOA,EAAI1e,KAAOylG,EAAiBzlG,KAC3F,IAAIq8C,EAAeD,EACfupD,EAAmB,EAEvB,KAAOtpD,EAAewnD,EAAwBpmG,QAAUkoG,GAAoBD,GAAgC,CAC1G,MACMl2C,EAAQre,EADF0yD,EAAwBxnD,GACVr8C,IAAIwvD,OAE1Bm2C,EAAmBD,GAAkCl2C,EAAQ,KAC/DnT,GAAgB,GAGJ,IAAVmT,IACFm2C,GAAoB,EAExB,CAEA,MAAO,CACLvpD,gBACAC,aAAcA,EAAe,EAC9B,KAOUupD,GAAmD,OAAe,KAAqCP,GAAgC,CAACxB,EAAyBgC,IACvKA,EAIEhC,EAAwBzmG,MAAMyoG,EAAgBzpD,cAAeypD,EAAgBxpD,aAAe,GAH1F,KAUEypD,GAA+C,OAAe,KAAiCT,GAAgC,CAACU,EAAqBF,IAC3JA,EAIEE,EAAoB3oG,MAAMyoG,EAAgBzpD,cAAeypD,EAAgBxpD,aAAe,GAHtF,I,wDC5FJ,MAAM2pD,EAAmC/jG,GAASA,EAAMuhD,e,wBCA/D,IAAIyiD,E,gCAEJ,SAAWA,GACTA,EAAmC,QAAI,UACvCA,EAAmC,QAAI,SACxC,CAHD,CAGGA,IAA8BA,EAA4B,CAAC,G,wTCJvD,MAAMC,EAAwBjkG,GAASA,EAAMi6C,KACvCiqD,GAAuB,OAAeD,GAAuBhqD,GAAQA,EAAK96B,gBAC1EglF,GAA0B,OAAeF,GAAuBhqD,GAAQA,EAAK3qC,UAC7E80F,GAA+B,OAAeH,GAAuBhqD,GAAQA,EAAKwE,wBAClF4lD,GAAyB,OAAeJ,GAAuBhqD,GAAQA,EAAKuD,eAC5E8mD,GAA+B,OAAeL,GAAuBhqD,GAAQA,EAAKwD,eAClF8mD,GAAsB,OAAeN,GAAuBhqD,GAAQA,EAAKoE,OACzEmmD,GAA8B,OAAeP,GAAuBhqD,GAAQA,EAAKyT,eACjF+2C,GAA2B,OAAeR,GAAuBhqD,GAAQA,EAAKmE,YAC9EsmD,GAAqB,OAAeT,GAAuBhqD,GAAQA,EAAKyD,MAKxEinD,GAAkC,OAAeV,GAAuBhqD,GAAgB,MAARA,OAAe,EAASA,EAAK2qD,sBAK7GC,GAAyB,OAAeF,GAAiCC,GAA8C,MAAvBA,OAA8B,EAASA,EAAoBt1D,aAK3Jw1D,GAA8B,OAAeD,GAAwBv1D,IAChF,IAAIP,EAAiBC,EAErB,QAAuB,MAAdM,GAAoE,OAArCP,EAAkBO,EAAW/jC,UAAvC,EAA+DwjC,EAAgBvzC,SAAW,KAAqB,MAAd8zC,GAA0E,OAA3CN,EAAqBM,EAAW/nB,aAA1C,EAAqEynB,EAAmBxzC,SAAW,EAAE,G,2JC1BpP,MAAMupG,EAA6B/kG,GAASA,EAAM22B,UAC5CquE,GAAgC,OAAeD,GAA4BpuE,GAAaA,EAAUn7B,SAClGypG,GAA2B,OAAeF,EAA4B,MAAwB,CAAC51D,EAAcukB,IAAe,IAAI1sD,IAAImoC,EAAal8B,KAAIlV,GAAM,CAACA,EAAI21D,EAAW31D,SAC3KmnG,GAA4B,OAAeH,GAA4BpuE,GAAaA,EAAU1vB,QAAO,CAACsgC,EAAQ4D,KACzH5D,EAAO4D,GAASA,EACT5D,IACN,CAAC,I,mLCDG,MAAM49D,EAA2BnlG,GAASA,EAAM2wB,QAM1Cy0E,GAA2B,OAAeD,GAA0BliC,GAAgBA,EAAa5S,aAMjGg1C,GAA+B,OAAeD,EAA0B,MAAwB,CAACE,EAAW9nD,IAAiB8nD,EAAUryF,KAAIlV,IAAM,CAC5JA,KACA00B,MAAO+qB,EAAaz/C,SAOTwnG,GAAwB,OAAeJ,GAA0Bx0E,GAAWA,EAAQw/B,YAMpFq1C,GAA+B,OAAeD,GAAuBp1C,GACjEA,EAAUlpD,QAAO,CAACopB,EAAK+vC,EAAU9+D,KAC9C+uB,EAAI+vC,EAASjjC,OAAS,CACpBo2C,cAAenT,EAASW,KACxBwzB,UAAWpkC,EAAU30D,OAAS,EAAI8F,EAAQ,OAAIsG,GAEzCyoB,IACN,CAAC,I,wNCvCN,MAAMo1E,GAA6C,E,SAAAh3D,GAAa,CAAC,sHAAuH,yFAA0F,SACrQi3D,EAAoB,CAACjzE,EAAO29B,IACnCA,GAAiC39B,EAAMj3B,OAAS,GAClDiqG,IACO,CAAChzE,EAAM,KAGTA,EAEIkzE,EAA0B,CAACx1C,EAAWC,IAAkCpwD,IAAS,OAAS,CAAC,EAAGA,EAAO,CAChH2wB,SAAS,OAAS,CAAC,EAAG3wB,EAAM2wB,QAAS,CACnCw/B,UAAWu1C,EAAkBv1C,EAAWC,OAiE/Bw1C,EAAgC,CAACz1C,EAAWnxC,KACvD,MAAM6mF,EAAiB11C,EAAUl9C,KAAIwnB,GArDjB,EAAC2lC,EAAUphD,KAC/B,MAAM2jB,EAAS3jB,EAAOljB,QAAQ2lC,UAAU2+B,EAASjjC,OAEjD,OAAKwF,EAcE,CACLmjE,kBATwB/nG,IAAM,CAC9BA,KACAo/B,MAAOwF,EAAOxF,MACd+oB,QAASlnC,EAAOljB,QAAQyyD,WAAWxwD,GACnCK,MAAO4gB,EAAOljB,QAAQomD,aAAankD,EAAI4kC,EAAOxF,OAC9Czc,IAAK1B,EAAOljB,UAKZiqG,WA5BsC,SAgBd3lC,EAASW,KAAQ,IAAI71C,KAAU,EAAIyX,EAAO5I,kBAAkB7O,GAAQyX,EAAO5I,gBAH5F,IAgBR,EAiC4CisE,CAAcvrE,EAAMzb,KAASjkB,QAAOgrG,KAAgBA,IAEjG,OAA8B,IAA1BF,EAAerqG,OACV,KAGFyqG,GAAWA,EAAQhzF,KAAIhP,IAAQ,CACpCA,OACA+O,OAAQ6yF,EAAe5yF,KAAIsf,GAAMA,EAAGuzE,kBAAkB7hG,EAAKlG,UACzDgjE,MAAK,CAAChwB,EAAGtC,KAAMy3D,OA/BiBC,EA+BWp1D,EA/BLq1D,EA+BQ33D,EAAnBo3D,EA9BR5+F,QAAO,CAACopB,EAAKoK,EAAMn5B,KACxC,GAAY,IAAR+uB,EAEF,OAAOA,EAGT,MAAMg2E,EAAkBF,EAAKnzF,OAAO1R,GAC9BglG,EAAkBF,EAAKpzF,OAAO1R,GAEpC,OADMm5B,EAAKsrE,WAAWM,EAAgBjoG,MAAOkoG,EAAgBloG,MAAOioG,EAAiBC,EAC3E,GACT,GAXe,IAAkBH,EAAMC,CA+BU,IAAEnzF,KAAIwJ,GAAOA,EAAIxY,KAAKlG,IAAG,EAElEwoG,EAA2B,CAACzlC,EAAchlE,KACrD,MAAM0qG,EAAa1lC,EAAa5lE,QAAQY,GAExC,OAAKA,IAA2B,IAAhB0qG,GAAqBA,EAAa,IAAM1lC,EAAatlE,OAI9DslE,EAAa0lC,EAAa,GAHxB1lC,EAAa,EAGa,EAG/B2lC,EAAqB,CAACC,EAAIC,IACpB,MAAND,GAAoB,MAANC,GACR,EAGA,MAANA,GAAoB,MAAND,EACT,EAGC,MAANA,GAAoB,MAANC,EACT,EAGF,KAGHnpB,EAAW,IAAIC,KAAKC,SACbkpB,EAA+B,CAAC7pE,EAAQl8B,KACnD,MAAMgmG,EAAaJ,EAAmB1pE,EAAQl8B,GAE9C,OAAmB,OAAfgmG,EACKA,EAGa,iBAAX9pE,EACFygD,EAASsC,QAAQ/iD,EAAO3L,WAAYvwB,EAAOuwB,YAG7C2L,EAASl8B,CAAM,EAEXimG,EAAuB,CAAC/pE,EAAQl8B,KAC3C,MAAMgmG,EAAaJ,EAAmB1pE,EAAQl8B,GAE9C,OAAmB,OAAfgmG,EACKA,EAGF3gG,OAAO62B,GAAU72B,OAAOrF,EAAO,EAE3BkmG,EAAqB,CAAChqE,EAAQl8B,KACzC,MAAMgmG,EAAaJ,EAAmB1pE,EAAQl8B,GAE9C,OAAmB,OAAfgmG,EACKA,EAGL9pE,EAASl8B,EACJ,EAGLk8B,EAASl8B,GACH,EAGH,CAAC,C,kFCxJH,SAASu7F,IACd,MAAMp9E,EAAS,aAAiB,KAEhC,QAAepX,IAAXoX,EACF,MAAM,IAAI8L,MAAM,CAAC,6CAA8C,oHAAqH,gFAAgF0H,KAAK,OAG3Q,OAAOxT,CACT,C,iFCRO,MAAMD,EAAmB,KAC9B,MAAMioF,EAAe,aAAiB,EAAAn9E,GAEtC,IAAKm9E,EACH,MAAM,IAAIl8E,MAAM,4GAGlB,OAAOk8E,CAAY,C,yDCHc,E,SAAAv4D,GAAa,CAAC,iFAAkF,+DAAnI,MACavvB,EAAkB,CAACF,EAAQgwC,IALxC,SAA0BA,GACxB,OAAOA,EAASi4C,aAClB,CAUMC,CAAiBl4C,GACZA,EAAShwC,GAGXgwC,EAAShwC,EAAOljB,QAAQkE,M,wBCA1B,SAASmnG,EAAsBC,GACpC,IAAK,IAAIC,EAAOC,UAAU9rG,OAAQ+rG,EAAyB,IAAI7iG,MAAM2iG,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IACpHD,EAAuBC,EAAO,GAAKF,UAAUE,GAiF/C,OA9EqB,WACnB,IAAK,IAAIC,EAAQH,UAAU9rG,OAAQksG,EAAQ,IAAIhjG,MAAM+iG,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACrFD,EAAMC,GAASL,UAAUK,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBngG,GAGdogG,EAAaN,EAAMO,MAQvB,GAN0B,iBAAfD,IACTF,EAAwBE,EAExBA,EAAaN,EAAMO,OAGK,mBAAfD,EACT,MAAM,IAAIl9E,MAAM,qFAAuFk9E,EAAa,KAKtH,IACIE,EADwBJ,EACuBC,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBzjG,MAAMC,QAAQojG,GAAkBA,EAAiB,CAACA,GACxEK,EA3DR,SAAyBV,GACvB,IAAIU,EAAe1jG,MAAMC,QAAQ+iG,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKU,EAAa5kG,OAAM,SAAU6kG,GAChC,MAAsB,mBAARA,CAChB,IAAI,CACF,IAAIC,EAAkBF,EAAan1F,KAAI,SAAUo1F,GAC/C,MAAsB,mBAARA,EAAqB,aAAeA,EAAIvoG,MAAQ,WAAa,YAAcuoG,CAC3F,IAAG71E,KAAK,MACR,MAAM,IAAI1H,MAAM,kGAAoGw9E,EAAkB,IACxI,CAEA,OAAOF,CACT,CA8CuBG,CAAgBb,GAC/Bc,EAAqBpB,EAAQh4E,WAAM,EAAQ,CAAC,WAG9C,OAFAy4E,IAEOG,EAAW54E,MAAM,KAAMk4E,UAChC,GAAGmB,OAAON,IAENn5C,EAAWo4C,GAAQ,WAIrB,IAHA,IAAIp0F,EAAS,GACTxX,EAAS4sG,EAAa5sG,OAEjBD,EAAI,EAAGA,EAAIC,EAAQD,IAG1ByX,EAAOpO,KAAKwjG,EAAa7sG,GAAG6zB,MAAM,KAAMk4E,YAK1C,OADAM,EAAcY,EAAmBp5E,MAAM,KAAMpc,EAE/C,IAeA,OAdAwY,OAAOk9E,OAAO15C,EAAU,CACtBg5C,WAAYA,EACZQ,mBAAoBA,EACpBJ,aAAcA,EACdO,WAAY,WACV,OAAOf,CACT,EACAgB,eAAgB,WACd,OAAOf,CACT,EACAgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC3B,IAEK74C,CACT,CAIF,C,uDACO,IAAI7wC,EAAgCgpF,E,SAAsB,I,WCrGjE,MAAM2B,EAAiB,CACrB1rD,MAAO,MAGI,IADoB,IAAA3O,GAAa,CAAC,4GAA6G,sJAC9H,IAAIvjB,KACH,OAAzB49E,EAAe1rD,QACjB0rD,EAAe1rD,MAAQ,CAAC,GAG1B,MAAM4R,EAAW,IAAI+5C,KACnB,MAAOC,EAAeh4E,GAAc+3E,EAC9BE,IAAaD,EAAcltG,QAC3BotG,EAAWD,EAAWD,EAAcltG,QAAQk1B,WAA2B,MAAdA,EAAqBA,EAAa,UAC3FhxB,EAAQipG,EAAWD,EAAcltG,QAAQkE,MAAQgpG,EAQ1B,OAAzBF,EAAe1rD,QACjB0rD,EAAe1rD,MAAQ,CAAC,GAG1B,MAAM,MACJA,GACE0rD,EAEJ,GAAI1rD,EAAM8rD,IAAa9rD,EAAM8rD,GAAUx8E,IAAIxB,GAGzC,OAAOkyB,EAAM8rD,GAAUx8E,IAAIxB,EAApBkyB,CAA0Bp9C,EAAOkpG,GAG1C,MAAMC,EAAc,KAA0Bj+E,GAO9C,OALKkyB,EAAM8rD,KACT9rD,EAAM8rD,GAAY,IAAIliG,KAGxBo2C,EAAM8rD,GAAU18E,IAAItB,EAAMi+E,GACnBA,EAAYnpG,EAAOkpG,EAAS,EAMrC,OADAl6C,EAASi4C,eAAgB,EAClBj4C,CAAQ,GAGJo6C,EAAoCF,SACvB,IAAbA,EACLJ,EAAe1rD,OAAS0rD,EAAe1rD,MAAM8rD,WACxCJ,EAAe1rD,MAAM8rD,GAG9BJ,EAAe1rD,MAAQ,IACzB,C,iUC5DK,MAAMisD,EAAc5jG,GAAe,WAARA,EAErB6jG,EAAa7jG,GAAe,UAARA,EAEpB8jG,EAAW9jG,GAAe,QAARA,EAElB+jG,EAAa/jG,GAAe,MAARA,EAIpBgkG,EAAehkG,GAAe,WAARA,GAA4B,cAARA,EAMhD,SAASikG,EAAetpG,GAC7B,OAA4B,IAArBA,EAAMqF,IAAIjK,SAAkC,IAAlB4E,EAAM0E,UAAuC,IAAlB1E,EAAM2E,OACpE,CACO,MACM4kG,EAAgC,CAAC,QAAS,SAAU,OACpDC,EAA6B,CAAC,QAAS,OAEvCC,EAA0BzpG,GAASkpG,EAAWlpG,EAAMqF,MAAQgkG,EAAarpG,EAAMqF,MAAQikG,EAAetpG,GACtG0pG,EAAyBrkG,GAAOkkG,EAA8BzuG,QAAQuK,IAAQ,EAC9EskG,EAAuBtkG,GAAOmkG,EAA2B1uG,QAAQuK,IAAQ,EACzEukG,EAAkBvkG,GAlBAA,IAAe,SAARA,GAA0B,QAARA,EAkBlBwkG,CAAgBxkG,IAnB3BA,IAAgC,IAAzBA,EAAIvK,QAAQ,SAmBgBgvG,CAAYzkG,IAjBhDA,IAA+B,IAAxBA,EAAIvK,QAAQ,QAiBqCivG,CAAW1kG,IAAQ+jG,EAAW/jG,GACnGs7B,EAAkB3gC,KAAWA,EAAMqF,IACnC2kG,EAAgB3kG,GAAO8jG,EAAS9jG,IAAQ4jG,EAAY5jG,E,wBC5B1D,SAAS4kG,EAASjsG,GACvB,MAAwB,iBAAVA,CAChB,CACO,SAASksG,EAAWlsG,GACzB,MAAwB,mBAAVA,CAChB,CAIO,SAASmsG,IACd,IAIE,MAAM9kG,EAAM,+CAGZ,OAFAukB,OAAOC,aAAaugF,QAAQ/kG,EAAKA,GACjCukB,OAAOC,aAAawgF,WAAWhlG,IACxB,CAGT,CAFE,MAAOilG,GACP,OAAO,CACT,CACF,CACO,SAASC,EAAavsG,GAC3B,OAAOA,EAAMpE,QAAQ,2BAA4B,OACnD,C,yMAMO,MAAM4wG,EAAQ,CAACxsG,EAAO8pC,EAAK1M,IAAQt4B,KAAKs4B,IAAI0M,EAAKhlC,KAAKglC,IAAI1M,EAAKp9B,IA4B/D,SAASysG,EAAY95D,EAAGtC,GAC7B,GAAIsC,IAAMtC,EACR,OAAO,EAGT,GAAIsC,GAAKtC,GAAkB,iBAANsC,GAA+B,iBAANtC,EAAgB,CAC5D,GAAIsC,EAAExsB,cAAgBkqB,EAAElqB,YACtB,OAAO,EAGT,GAAI7f,MAAMC,QAAQosC,GAAI,CACpB,MAAMv1C,EAASu1C,EAAEv1C,OAEjB,GAAIA,IAAWizC,EAAEjzC,OACf,OAAO,EAGT,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/B,IAAKsvG,EAAY95D,EAAEx1C,GAAIkzC,EAAElzC,IACvB,OAAO,EAIX,OAAO,CACT,CAEA,GAAIw1C,aAAa/pC,KAAOynC,aAAaznC,IAAK,CACxC,GAAI+pC,EAAElkC,OAAS4hC,EAAE5hC,KACf,OAAO,EAGT,MAAMi+F,EAAWpmG,MAAMuqB,KAAK8hB,EAAE3b,WAE9B,IAAK,IAAI75B,EAAI,EAAGA,EAAIuvG,EAAStvG,OAAQD,GAAK,EACxC,IAAKkzC,EAAEtf,IAAI27E,EAASvvG,GAAG,IACrB,OAAO,EAIX,IAAK,IAAIA,EAAI,EAAGA,EAAIuvG,EAAStvG,OAAQD,GAAK,EAAG,CAC3C,MAAMwvG,EAASD,EAASvvG,GAExB,IAAKsvG,EAAYE,EAAO,GAAIt8D,EAAE/hB,IAAIq+E,EAAO,KACvC,OAAO,CAEX,CAEA,OAAO,CACT,CAEA,GAAIh6D,aAAai6D,KAAOv8D,aAAau8D,IAAK,CACxC,GAAIj6D,EAAElkC,OAAS4hC,EAAE5hC,KACf,OAAO,EAGT,MAAMuoB,EAAU1wB,MAAMuqB,KAAK8hB,EAAE3b,WAE7B,IAAK,IAAI75B,EAAI,EAAGA,EAAI65B,EAAQ55B,OAAQD,GAAK,EACvC,IAAKkzC,EAAEtf,IAAIiG,EAAQ75B,GAAG,IACpB,OAAO,EAIX,OAAO,CACT,CAEA,GAAI0vG,YAAYC,OAAOn6D,IAAMk6D,YAAYC,OAAOz8D,GAAI,CAClD,MAAMjzC,EAASu1C,EAAEv1C,OAEjB,GAAIA,IAAWizC,EAAEjzC,OACf,OAAO,EAGT,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/B,GAAIw1C,EAAEx1C,KAAOkzC,EAAElzC,GACb,OAAO,EAIX,OAAO,CACT,CAEA,GAAIw1C,EAAExsB,cAAgBg6E,OACpB,OAAOxtD,EAAEo6D,SAAW18D,EAAE08D,QAAUp6D,EAAEq6D,QAAU38D,EAAE28D,MAGhD,GAAIr6D,EAAEs6D,UAAY7/E,OAAOuE,UAAUs7E,QACjC,OAAOt6D,EAAEs6D,YAAc58D,EAAE48D,UAG3B,GAAIt6D,EAAE3f,WAAa5F,OAAOuE,UAAUqB,SAClC,OAAO2f,EAAE3f,aAAeqd,EAAErd,WAG5B,MAAM3F,EAAOD,OAAOC,KAAKslB,GACnBv1C,EAASiwB,EAAKjwB,OAEpB,GAAIA,IAAWgwB,OAAOC,KAAKgjB,GAAGjzC,OAC5B,OAAO,EAGT,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/B,IAAKiwB,OAAOuE,UAAUnE,eAAezI,KAAKsrB,EAAGhjB,EAAKlwB,IAChD,OAAO,EAIX,IAAK,IAAIA,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAAG,CAClC,MAAMkK,EAAMgmB,EAAKlwB,GAEjB,IAAKsvG,EAAY95D,EAAEtrC,GAAMgpC,EAAEhpC,IACzB,OAAO,CAEX,CAEA,OAAO,CACT,CAIA,OAAOsrC,GAAMA,GAAKtC,GAAMA,CAC1B,CAaO,SAAS68D,EAAoBC,EAAMrjE,EAAK1M,GAC7C,MAAM1C,GAZYiY,EAYQw6D,EAXnB,KAEL,IAAI/5B,EAAIzgC,GAAK,WAGb,OAFAygC,EAAItuE,KAAKsoG,KAAKh6B,EAAIA,IAAM,GAAQ,EAAJA,GAC5BA,GAAKA,EAAItuE,KAAKsoG,KAAKh6B,EAAIA,IAAM,EAAO,GAAJA,KACvBA,EAAIA,IAAM,MAAQ,GAAK,UAAU,GAN9C,IAAoBzgC,EAalB,MAAO,IAAM7I,GAAO1M,EAAM0M,GAAOpP,GACnC,CACO,SAAS2yE,EAAU77E,GACxB,MAA+B,mBAApB87E,gBACFA,gBAAgB97E,GAGlBotB,KAAK2uD,MAAM3uD,KAAKziD,UAAUq1B,GACnC,C,+EC1MO,MAAMg8E,EAAe,CAAC/qF,EAASgrF,EAAU,aAC9C,IAAIC,GAAgB,EACpB,MAAMC,EAAernG,MAAMC,QAAQkc,GAAWA,EAAQ2R,KAAK,MAAQ3R,EACnE,MAAO,KACAirF,IACHA,GAAgB,EAEA,UAAZD,EACFjhF,QAAQvK,MAAM0rF,GAEdnhF,QAAQL,KAAKwhF,GAEjB,CACD,EAEUC,EAAwB,CAAChhF,EAAQnK,IAEnCmK,C,yQCMX,MAAMihF,EAAc,CAClB3gG,SAAU,WACVC,IAAK,MACL4O,KAAM,MACNzL,UAAW,wBACXzB,MAAO,IACPi/F,QAAS,mBACTn1F,OAAQ,iBACRW,UAAW,GACX+lF,EAAG,GAmHC0O,GAAQC,EAAAA,EAAAA,IAAU,QAAVA,CAAmB,CAC/Bv8F,QAAS,SAGLw8F,GAAgBC,EAAAA,EAAAA,GAAY,IAC7BC,EAAAA,EACHnrF,WAAY,CAEVorF,YAAa,CACXC,eAAgB,CACd,sEAAuE,CACrEhhG,gBAAiB,UACjBwR,YAAa,gBAOVyvF,EAIRC,IAAyD,IAAxD,qBAAEC,EAAoB,cAAEC,EAAa,UAAEC,GAAW,EACtD,IAAKA,EAAUtxG,OACb,OAAOuxG,EAAAA,cAAAA,EAAAA,SAAAA,MAGT,MAAMC,EAAyB,CAC7B,CACE7vE,MAAO,UACPxnB,KAAM,UACNgwB,UAAU,EACV14B,MAAO,GACP6sB,YAAa,QACbD,MAAO,QACPoM,WAAajzB,GACX+5F,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,OACfsqG,EAAAA,cAACG,EAAAA,EAAM,CACL9uG,MAAO4U,EAAOjV,GACduJ,QAASulG,EACTxrB,UAAW0rB,EAAAA,cAACI,EAAAA,EAAa,MACzBtgG,KAAK,SACN,UAKN,eACEugG,EAAAA,IAGL,OACEL,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKh5F,MAAO,CAAEyC,OAAQ,IAAKvJ,MAAO,SAChC8/F,EAAAA,cAACM,EAAAA,EAAa,CAACjjG,MAAOiiG,GACpBU,EAAAA,cAAC30C,EAAAA,EAAQ,CACPpvB,QAASgkE,EACT/yD,KAAM6yD,EACNpxG,SAAU,EACVs/E,mBAAoB,CAAC,GACrBlrB,mBAAiB,EAEjB+B,uBAAwB+6C,MAI7B,EAID33B,EAIDq4B,IAA8C,IAA7C,kBAAEC,EAAiB,UAAET,EAAS,MAAEU,GAAO,EAC3C,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE7BC,GAAkBC,EAAAA,EAAAA,cAAY,KAClCJ,EAAYK,QAAQhB,GACpBU,GAAO,GACN,CAACV,IAEEiB,GAAyBF,EAAAA,EAAAA,cAAY,KACzC,MAAMG,EAAgBlB,EAAU/xG,QAAQulE,GAAMitC,EAAkB7zE,SAAS4mC,EAAEviE,MAC3E0vG,EAAYK,QAAQE,GACpBR,GAAO,GACN,CAACV,EAAWS,IAEf,OAAKT,EAAUtxG,OAKbuxG,EAAAA,cAACE,EAAAA,EAAK,CACJn9F,eAAe,gBACf2tF,EAAG,EACHyO,QAAQ,eACRzpG,UAAU,OAEVsqG,EAAAA,cAAC5qB,EAAAA,EAAU,CAACpkE,UAAU,SAAS/H,QAAQ,YAAYmD,UAAU,UACvD2zF,EAAUtxG,OAAM,kBAEtBuxG,EAAAA,cAACkB,EAAAA,EAAW,CAACpkG,MAAM,aACjBkjG,EAAAA,cAACG,EAAAA,EAAM,CAAC5lG,QAASsmG,GAAiB,cAClCb,EAAAA,cAACG,EAAAA,EAAM,CACL5lG,QAASymG,EACT5wG,UAAWowG,EAAkB/xG,QAC9B,0BAlBEuxG,EAAAA,cAAAA,EAAAA,SAAAA,KAsBC,EAIZ,IA/NKt4E,IAAqC,IAApC,MAAE1gB,EAAK,IAAEm6F,EAAG,OAAEC,EAAM,OAAE/oE,GAAQ,EAClC,MAAM,EAAC0nE,EAAU,EAACsB,IAAgBC,EAAAA,EAAAA,UAAsB,KAClD,EAACd,EAAkB,EAACX,IAAwByB,EAAAA,EAAAA,UAAmB,KAE/D,EAAC3vG,EAAK,EAACmhC,IAAWwuE,EAAAA,EAAAA,WAAS,IAC3B,EAACC,EAAY,EAACC,IAAkBF,EAAAA,EAAAA,eAA6BzmG,IAC7D,EAAC4mG,EAAe,EAACC,IAAqBJ,EAAAA,EAAAA,UAAS,GAE/CK,GAAYC,EAAAA,EAAAA,UAEZC,GAAyBf,EAAAA,EAAAA,cAC5Bf,GAAwBF,EAAqBE,IAC9C,IAGI+B,GAAkBhB,EAAAA,EAAAA,cACrBf,GAA2BsB,EAAatB,IACzC,IAGI3oG,GAAc0pG,EAAAA,EAAAA,cAAY3vE,UAC9B2B,GAAQ,GACJ6uE,EAAU5yG,UAAS4yG,EAAU5yG,QAAQsC,MAAQ,GAAE,GAClD,CAACyhC,IAEEivE,GAAejB,EAAAA,EAAAA,cAAaztG,IAChC,IACEy/B,GAAQ,GAER,MAAMkvE,EAAO3uG,EAAM4F,OAAOgpG,MAAM,GAEhC,GAAID,EAAKliG,KAAO,SAEd,YADA0hG,EAAe,wCAIjB,MAAMU,EAAa,IAAIC,WACvBD,EAAWE,UAAYjxE,UACrB,MAAM4uE,GAAYsC,EAAAA,EAAAA,IAAmBH,EAAW31D,QAChD80D,EAAatB,EAAU,EAGzBmC,EAAWI,WAAc3sF,GACvB+rF,EAAkBvrG,KAAK21B,MAAkB,IAAXnW,EAAE4sF,OAAgB5sF,EAAE6sF,QAEpDN,EAAWO,QAAU,IAAMjB,EAAe,gCAE1CU,EAAWQ,WAAWV,EAGxB,CAFE,MAAOrsF,GACP6rF,EAAe,+BACjB,IACC,KAEG,YAAEd,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAE7Bd,GAAgBgB,EAAAA,EAAAA,cACnBnrF,IACC,MAAMgtF,EAAW5C,EAAUz3E,MAAMirC,GAAMA,EAAEviE,KAAO2kB,EAAEvc,cAAc/H,QAC5DsxG,IACFjC,EAAY1rG,IAAI2tG,GAChBb,EAAgB/B,EAAU/xG,QAAQulE,GAAMA,EAAEviE,KAAO2kB,EAAEvc,cAAc/H,SACjEwuG,EAAqBW,EAAkBxyG,QAAQulE,GAAMA,IAAMovC,EAAS3xG,MACtE,GAEF,CAAC+uG,EAAWS,IAGd,OACER,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,CAAOvlG,QAAQ,yBACbulG,EAAAA,cAACZ,EACC,CACAtkG,IAAK6mG,EACLrwG,SAAUywG,EACVX,OAAQA,EACRpwG,GAAG,wBACHf,UAAQ,EACR2Y,KAAK,SAENyvB,GAGH2nE,EAAAA,cAAC4C,EAAAA,EAAK,CAACjxG,KAAMA,EAAMJ,QAAS6F,GAC1B4oG,EAAAA,cAAC6C,EAAAA,EAAG,CAACh/B,GAAI,IAAKq7B,EAAah/F,MAAO,MAAOuJ,OAAQ,QAC9Cg4F,EAAiB,GAAKA,EAAiB,KAAOzB,EAAAA,cAAC8C,EAAAA,EAAO,MAEtDvB,GAAevB,EAAAA,cAAC+C,EAAAA,EAAK,CAACC,SAAS,SAASzB,GAEzCvB,EAAAA,cAAC93B,EAAO,CACNs4B,kBAAmBA,EACnBT,UAAWA,EACXU,MAAOrpG,IAGP4P,GAASg5F,EAAAA,cAAAA,EAAAA,SAAAA,OACTA,EAAAA,cAACL,EAAgB,CACfE,qBAAsBgC,EACtB/B,cAAeA,EACfC,UAAWA,MAKlB,C,0KCrIP,MAsDakD,GAAmBxmG,EAAAA,EAAAA,IAAO0jG,EAAAA,EAAP1jG,EAAe,MAC7CiN,aAAc,EACd3G,eAAgB,QAChB1E,YAAa,OACb,UAAW,CACTM,WAAY,WAEd,iBAAkB,CAChBA,WAAY,UACZ7B,MAAO,UACPomG,WAAY,yBAIhB,IApE6B,KAC3B,MAAM,MAAE9oG,EAAK,SAAE+oG,EAAQ,qBAAEC,IAAyBzC,EAAAA,EAAAA,YAAW0C,EAAAA,GAEvDC,GAAmBxC,EAAAA,EAAAA,cAAanrF,IACpCwtF,EAAS,CAAEnyG,GAAI2kB,EAAEvc,cAAc/H,MAAOR,MAAO8kB,EAAEvc,cAAcmqG,YAC7DH,EAAqB,GAAG,GACvB,KAEG,EAACI,EAAW,EAACC,IAAcnC,EAAAA,EAAAA,WAAS,GAEpCoC,GAAuB5C,EAAAA,EAAAA,cAAY,KACvC2C,GAAW,EAAK,GACf,IAEH,OACEzD,EAAAA,cAAC2D,EAAAA,EAAS,CACR3mG,gBAAc,EACdoD,UAAU,EACVyjE,GAAI,CAAEs7B,QAAS,QAAS11F,OAAQ,OAAQC,aAAc,SAEtDs2F,EAAAA,cAACE,EAAAA,EAAK,CAACf,QAAQ,UAAUz1F,aAAa,iBACpCs2F,EAAAA,cAACG,EAAAA,EAAM,CACLrjG,MAAM,UACNw3E,UAAW0rB,EAAAA,cAAC4D,EAAAA,EAAW,MACvBrpG,QAASmpG,GACV,mBAKH1D,EAAAA,cAACE,EAAAA,EAAK,CAAC2D,GAAI,EAAG/yF,QAAS,GACrBkvF,EAAAA,cAACiD,EAAgB,CACf5xG,MAAM,MACNkJ,QAAS+oG,EACTlzG,SAAuB,QAAbgK,EAAMpJ,GAChBsjF,UAAW0rB,EAAAA,cAAC8D,EAAAA,EAAY,OACzB,kBAGD9D,EAAAA,cAACiD,EAAgB,CACf5xG,MAAM,YACNjB,SAAuB,cAAbgK,EAAMpJ,GAChBuJ,QAAS+oG,EACThvB,UAAW0rB,EAAAA,cAAC+D,EAAAA,EAAc,OAC3B,cAKH/D,EAAAA,cAACgE,EAAAA,EAAY,CAACR,WAAYA,EAAYC,WAAYA,IACxC,C,8WC7BhB,MAAMvE,EAAc,CAClB3gG,SAAU,WACVC,IAAK,MACL4O,KAAM,MACNlN,MAAO,MACPuJ,OAAQ,MACR9H,UAAW,wBACXw9F,QAAS,mBACTn1F,OAAQ,iBACRW,UAAW,GACX+lF,EAAG,EACH1N,UAAW,UAGAihB,EAAkC,KAC7C,MAAM,WAAEC,IAAevD,EAAAA,EAAAA,YAAWC,EAAAA,IAC5B,MAAExmG,IAAUumG,EAAAA,EAAAA,YAAW0C,EAAAA,GAEvBc,EAAWD,EAAWE,YAAYhqG,EAAMpJ,IAExCqzG,GAAaC,EAAAA,EAAAA,UACjB,IAAM,IAAIrqG,IAAIkqG,EAASj+F,KAAIwhB,IAAAA,IAAC,GAAE12B,EAAE,UAAE+uG,GAAW,QAAK,CAAC/uG,EAAI+uG,EAAU,MACjE,CAACoE,KAGG,EAACI,EAAY,EAACC,IAAkBlD,EAAAA,EAAAA,UAAS,IAAIrD,KAE7CwG,GAAa3D,EAAAA,EAAAA,cAChBnrF,IACC,MAAM3kB,EAAK2kB,EAAEvc,cAAcpI,GAEvBuzG,EAAYniF,IAAIpxB,GAClBuzG,EAAYhlF,OAAOvuB,GAEnBuzG,EAAYvvG,IAAIhE,GAGlBwzG,EAAe,IAAIvG,IAAIsG,GAAa,GAEtC,CAACA,KAIDx1G,SACEkE,OAAO,UAAE22B,MAETylE,EAAAA,EAAAA,KAEEqV,GAAa5D,EAAAA,EAAAA,cAAY,KAC7ByD,EAAYruF,SAASyuF,IAEnB,MAAM5E,EAAYpoG,MAAMuqB,KACtB,IAAI+7E,IAAI,GAAD,eAAMoG,EAAW1kF,IAAIglF,IAAc,KAAI,OAAK/6E,MAErDs6E,EAAWU,KAAKD,EAAW,CAAE5E,aAAwB,IAEvD3oG,GAAa,GACZ,CAACmtG,EAAa36E,EAAWy6E,KAEtB,EAAC1yG,EAAK,EAACmhC,IAAWwuE,EAAAA,EAAAA,WAAS,GAE3BuD,GAAa/D,EAAAA,EAAAA,cAAY,KAC7BhuE,GAAQ,EAAK,GACZ,IAEG17B,GAAc0pG,EAAAA,EAAAA,cAAY,KAC9BhuE,GAAQ,EAAM,GACb,IAEH,OACEktE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACG,EAAAA,EAAM,CAACrgG,KAAK,QAAQvF,QAASsqG,GAAY,YAG1C7E,EAAAA,cAAC4C,EAAAA,EAAK,CAACjxG,KAAMA,EAAMJ,QAAS6F,GAC1B4oG,EAAAA,cAAC6C,EAAAA,EAAG,CACFh/B,GAAI,IACCq7B,EACHp8F,QAAS,OACTwN,cAAe,SACfvN,eAAgB,kBAGlBi9F,EAAAA,cAACE,EAAAA,EAAK,CAACxP,EAAG,EAAG5/E,QAAS,EAAG/N,eAAe,iBACtCi9F,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,MAAMqN,eAAe,iBACpCi9F,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,aAAY,mBAChC+2F,EAAAA,cAACG,EAAAA,EAAM,CAAC5lG,QAASmqG,GAAY,QAE/B1E,EAAAA,cAAC8E,EAAAA,EAAO,OAGV9E,EAAAA,cAAC+E,EAAAA,GAAI,CAACxtF,WAAS,EAACxU,eAAe,gBAAgBoN,KAAM,GACnD6vF,EAAAA,cAACgF,EAAAA,EAAI,CAACnhC,GAAI,CAAEs7B,QAAS,qBAClBgF,EAASj+F,KAAI05F,IAAAA,IAAC,GAAE5uG,EAAE,KAAE+B,GAAM,SACzBitG,EAAAA,cAACiF,EAAAA,GAAQ,CAACvsG,IAAK1H,GACbgvG,EAAAA,cAACvzF,EAAAA,EAAc,CAACzb,GAAIA,EAAIuJ,QAASkqG,EAAYx4F,OAAK,GAChD+zF,EAAAA,cAACkF,EAAAA,EAAY,KACXlF,EAAAA,cAACmF,EAAAA,EAAQ,CACPj4F,KAAK,QACLpQ,MAAM,YACNuQ,QAASk3F,EAAYniF,IAAIpxB,GACzBmK,UAAW,EACXwM,eAAa,KAGjBq4F,EAAAA,cAACoF,EAAAA,EAAY,CAACjnG,QAASpL,KAEhB,KAIfitG,EAAAA,cAACE,EAAAA,EAAK,CACJlvF,UAAU,MACV0/E,EAAG,EACHh7F,UAAU,MACVqN,eAAe,iBAEfi9F,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,WACjBs7F,EAAYzkG,KAAK,0BAM3B,EAIDulG,EAKD9E,IAAAA,IAAC,GAAEvvG,EAAE,MAAEK,EAAK,KAAEuzG,EAAI,MAAEnE,GAAO,SAC9BT,EAAAA,cAACsF,EAAAA,EAAS,CACRzhC,GAAI,CAAE6sB,EAAG,GACT5wF,KAAK,QACLyuB,YAAY,oBACZv+B,aAAcqB,EACdwV,WAAY,CACV1F,aACE6+F,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC3+F,EAAAA,EAAU,CAACvB,KAAK,QAAQ9O,GAAIA,EAAIK,MAAOL,GAAM,OAAQuJ,QAASqqG,GAC7D5E,EAAAA,cAACuF,EAAAA,EAAQ,OAEXvF,EAAAA,cAAC3+F,EAAAA,EAAU,CAACvB,KAAK,QAAQvF,QAASkmG,GAChCT,EAAAA,cAACwF,EAAAA,EAAS,UAKlB,EA4GJ,IAnGKC,IAAiC,IAAhC,WAAEjC,EAAU,WAAEC,GAAY,EAC9B,MAAM,MAAErpG,EAAK,SAAE+oG,EAAQ,qBAAEC,IAAyBzC,EAAAA,EAAAA,YAAW0C,EAAAA,IACvD,WAAEa,IAAevD,EAAAA,EAAAA,YAAWC,EAAAA,GAE5BuD,EAAWD,EAAWwB,WAEtB,EAACf,EAAU,EAACgB,IAAgBrE,EAAAA,EAAAA,YAE5BgC,GAAmBxC,EAAAA,EAAAA,cAAanrF,IACpCwtF,EAAS,CAAEnyG,GAAI2kB,EAAEvc,cAAc/H,MAAOR,MAAO8kB,EAAEvc,cAAcmqG,YAC7DH,EAAqB,GAAG,GACvB,IAEGwC,GAAY9E,EAAAA,EAAAA,cAAY,KAC5B2C,GAAW,GACXkC,OAAa9qG,EAAU,GACtB,IAEGgrG,GAAc/E,EAAAA,EAAAA,cAAY3vE,UAC9B,MAAM20E,EAAcnwF,EAAEvc,cAAc2sG,WAAW1xG,cAAc,SAAShD,MACtE,GAAIy0G,EAAa,CACf,GAA8B,SAA1BnwF,EAAEvc,cAAc/H,MAAkB,CACpC,MAAML,EAAK2kB,EAAEvc,cAAcpI,SACrBkzG,EAAWU,KAAK5zG,EAAI,CACxBA,GAAIA,EACJ+B,KAAM+yG,GAEV,YACQ5B,EAAWlvG,IAAI,CAAEhE,IAAIg1G,EAAAA,EAAAA,KAAQjzG,KAAM+yG,EAAa/F,UAAW,KAEnE6F,GACF,IACC,IAEGK,GAAuBnF,EAAAA,EAAAA,cAAanrF,IACxCuuF,EAAW3kF,OAAO5J,EAAEvc,cAAc/H,OAClC8xG,EAAS,CAAEnyG,GAAI,MAAOH,MAAO,kBAAmB,GAC/C,IAEGq1G,GAAcpF,EAAAA,EAAAA,cAAanrF,IAC/BgwF,EAAahwF,EAAEvc,cAAc/H,MAAM,GAClC,IAEH,OACE2uG,EAAAA,cAACE,EAAAA,EAAK,CAAC2D,GAAI,EAAG/yF,QAAS,EAAG9N,WAAcmhG,EAAS11G,OAAuB,QAAb,UACvD01G,EAAS11G,QACTuxG,EAAAA,cAACE,EAAAA,EAAK,KACHiE,EAASj+F,KAAIigG,IAAAA,IAAC,GAAEn1G,EAAE,KAAE+B,GAAM,SACzBitG,EAAAA,cAACE,EAAAA,EAAK,CAAC2D,GAAI,GAAKnuG,UAAU,MAAMqN,eAAe,gBAAgBrK,IAAK1H,GAChEA,IAAO2zG,GACP3E,EAAAA,cAACqF,EAAgB,CACfr0G,GAAIA,EACJK,MAAO0B,EACP6xG,KAAMiB,EACNpF,MAAOmF,KAGT5F,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACiD,EAAAA,EAAgB,CACfp/B,GAAI,CAAE1zD,KAAM,GACZzX,IAAK1H,EACLK,MAAOL,EACPuJ,QAAS+oG,EACTlzG,SAAUgK,EAAMpJ,KAAOA,EACvBsjF,UAAW0rB,EAAAA,cAACoG,EAAAA,EAAgB,CAACnoG,SAAS,WAErClL,GAEHitG,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,OACfsqG,EAAAA,cAAC3+F,EAAAA,EAAU,CAACvB,KAAK,QAAQzO,MAAOL,EAAIuJ,QAAS2rG,GAC3ClG,EAAAA,cAACqG,EAAAA,EAAQ,CAACpoG,SAAS,WAErB+hG,EAAAA,cAAC3+F,EAAAA,EAAU,CACTvB,KAAK,QACLzO,MAAOL,EACPuJ,QAAS0rG,GAETjG,EAAAA,cAACsG,EAAAA,EAAU,CAACroG,SAAS,aAKvB,OAIVulG,GACAxD,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACuG,EAAAA,GAAY,MACbvG,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,UAAUmD,UAAU,SAASo6F,GAAI,GAAG,yEAK7DhD,GAAcxD,EAAAA,cAACqF,EAAgB,CAACT,KAAMiB,EAAapF,MAAOmF,IACrD,C,scC5RZ,MAAMrpG,EAAY,CAAC,mBA4BbkqG,GAA4B,EAAAhqG,EAAA,IAAO,KAAM,CAC7C1J,KAAM,cACNqJ,KAAM,oBACNM,kBAAmB,CAACrN,EAAOsN,IAAWA,EAAO+pG,mBAHb,EAI/B,EACDrpG,YACI,CACJ8C,OAAQ9C,EAAMyT,QAAQ,EAAG,EAAG,IAC5BrQ,QAASpD,EAAMyT,QAAQ,EAAG,OAEtB61F,EAAuC,cAAiB,SAAiCt3G,EAAOyL,GACpG,IAAIsZ,EAAuByG,EAE3B,MAAM,gBACJnW,EAAkB,CAAC,GACjBrV,EACEkJ,GAAQ,OAA8BlJ,EAAOkN,GAE7CqqG,EAAcliG,EAAgB2zB,QAAU,CAAC,EACzCpmB,GAAS,EAAAo9E,EAAA,KACTt9E,GAAY,EAAAC,EAAA,KACZ2jF,GAAgB,EAAAxjF,EAAA,GAAgBF,EAAQ,MACxCuoB,GAAS,EAAAroB,EAAA,GAAgBF,EAAQ,MACjCuiC,GAAkB,EAAAriC,EAAA,GAAgBF,EAAQ,KAI1ChT,EArCkBrC,KACxB,MAAM,QACJqC,GACErC,EAIJ,OAAO,EAAAuC,EAAA,GAHO,CACZtC,KAAM,CAAC,sBAEoB,IAAyBoC,EAAQ,EA8B9CG,CAHG,CACjBH,QAAS8S,EAAU9S,UAGf4nG,EAAqB,WAAc,KACvC,GAAIryD,EAAgB7iD,KAClB,OAAOsgB,EAAOljB,QAAQ+5B,cAAc,6BAGtC,GAA6B,IAAzB6sE,EAAclnG,OAChB,OAAOwjB,EAAOljB,QAAQ+5B,cAAc,6BAGtC,MAAMg+E,EAAmBp5E,GAAQ8M,EAAO9M,EAAK+G,aAAarH,gBAAgB9E,MAAKsiB,GAAYA,EAASv5C,QAAUq8B,EAAK+b,gBAAe54C,OAASohB,EAAOljB,QAAQ+5B,cAAc,kBAAiB,EAAA/rB,EAAA,GAAW2wB,EAAK+b,kBAAkBplB,WAErN0iF,EAAqBr5E,IACzB,MAAM,iBACJs5E,GACExsE,EAAO9M,EAAK+G,aAAarH,gBAAgB9E,MAAKsiB,GAAYA,EAASv5C,QAAUq8B,EAAK+b,gBACtF,OAAOu9D,EAAmBA,EAAiBt5E,EAAKr8B,OAASq8B,EAAKr8B,KAAK,EAGrE,OAAoB,UAAM,MAAO,CAC/B+U,SAAU,CAAC6L,EAAOljB,QAAQ+5B,cAAc,8BAA7B7W,CAA4D0jF,EAAclnG,SAAsB,SAAKg4G,EAA2B,CACzI1nG,UAAWE,EAAQpC,KACnBuJ,SAAUuvF,EAAczvF,KAAI,CAACwnB,EAAMn5B,KAAU,OAAS,CAAC,EAAGimC,EAAO9M,EAAK+G,eAA6B,SAAK,KAAM,CAC5GruB,SAAU,GAAGo0B,EAAO9M,EAAK+G,aAAasE,YAAcrL,EAAK+G,kCAC/CqyE,EAAiBp5E,yBACjBA,EAAKr8B,MAAQ01G,EAAmBr5E,GAAQ,MACjDn5B,UAEL,GACD,CAAC0d,EAAQuiC,EAAgB7iD,KAAMgkG,EAAen7D,EAAQv7B,IAoBzD,OAAI8S,EAAUk0D,oBACL,MAGW,SAAKl0D,EAAUsC,WAAW2nE,aAAa,OAAS,CAClEl1E,MAAO+/F,EACP1pB,WAAY,KACX5kF,EAA8D,OAAtD6b,EAAwBrC,EAAUrN,sBAA2B,EAAS0P,EAAsBgpE,YAAa,CAClHh3E,UAAuB,SAAK2L,EAAUsC,WAAWggE,YAAY,OAAS,CACpEv5E,IAAKA,EACLgF,KAAM,QACN,aAAcmS,EAAOljB,QAAQ+5B,cAAc,uBAC3CwrD,WAAwB,SAAK+I,EAAA,EAAO,CAClCC,aAAcqY,EAAclnG,OAC5BqO,MAAO,UACPsJ,UAAuB,SAAK2L,EAAUsC,WAAWsmE,qBAAsB,CAAC,MAEzEisB,EAAa,CACdrsG,QApCiBlH,IACnB,IAAI4zG,EAEJ,MAAM,KACJt1G,EAAI,iBACJk/D,GACErc,EAEA7iD,GAAQk/D,IAAqB,YAC/B5+C,EAAOljB,QAAQqjE,kBAEfngD,EAAOljB,QAAQgjE,kBAG+B,OAA/Ck1C,EAAuBL,EAAYrsG,UAA4B0sG,EAAqB7wF,KAAKwwF,EAAavzG,EAAM,GAuBlD,OAAvDwnB,EAAyB9I,EAAUrN,sBAA2B,EAASmW,EAAuB05D,WAAY,CAC5GnuE,SAAU6L,EAAOljB,QAAQ+5B,cAAc,uBAG7C,I,wGCjHA,MAsJMo+E,GAAQzqG,EAAAA,EAAAA,GAAO,KAAPA,CAAY,mKAS1B,MA/J8B,KAC5B,MAAM,MAAErC,IAAUumG,EAAAA,EAAAA,YAAW0C,EAAAA,IAG3Bt0G,SAAS,MAAEkE,KACTo8F,EAAAA,EAAAA,MACE,UAAEzlE,GAAc32B,GAEhB,YAAEytG,EAAW,WAAEwD,IAAevD,EAAAA,EAAAA,YAAWC,EAAAA,GAEzCuG,GAAgBrG,EAAAA,EAAAA,cAAY3vE,gBAC1BuvE,EAAY0G,WAAWx9E,EAAsB,GAClD,CAACA,IAEEy9E,GAAiBvG,EAAAA,EAAAA,cAAY3vE,UACjC,MAAMm2E,QAAmB5G,EAAY6G,QAAQ39E,IAC7C49E,EAAAA,EAAAA,GAAaF,EAAW,GACvB,CAAC19E,IAEE69E,GAAgB3G,EAAAA,EAAAA,cACpB3vE,UACE,MAAMu2E,EAAS/xF,EAAEvc,cAAc/H,MACzBi2G,QAAmB5G,EAAY6G,QAAQ39E,GAE7C+9E,EAAQ,OACRA,EAAQ,QACRC,EAAAA,EAAAA,IAAiBN,EAAYI,EAAQ,WAAW,GAElD,CAAC99E,IAGGi+E,EAAiC,QAAbztG,EAAMpJ,IAA6B,cAAboJ,EAAMpJ,GAEhD82G,GAA0BhH,EAAAA,EAAAA,cAAY3vE,UAC1C,MAAM4uE,QAAkBW,EAAY6G,QAAQ39E,GAE5C,OAAOm+E,EAAAA,EAAAA,UAAS,iBAAkB,CAChC90G,MAAO,CACL8sG,YACA/4F,MAAO,MACPghG,iBAAkB,oBAEpB,GACD,CAACp+E,IAEEq+E,GAA0BnH,EAAAA,EAAAA,cAAY,KAC1C,MAAMf,EAAY9sG,EAAMi6C,KAAKyD,IAAI3iD,QAC9BgD,IAAQ44B,EAAU+C,SAAS37B,KAG9BkzG,EAAWU,KAAKxqG,EAAMpJ,GAAI,CACxB+uG,aACY,GACb,CAACn2E,EAAW32B,EAAMi6C,KAAKyD,MAE1B,OACEqvD,EAAAA,cAACE,EAAAA,EAAK,CAACf,QAAQ,UAAUz1F,aAAa,gBAAgBgnF,EAAG,GACvDsP,EAAAA,cAACE,EAAAA,EAAK,CAACn9F,eAAe,gBAAgBrN,UAAU,MAAMmuG,GAAI,GACxD7D,EAAAA,cAACkH,EAAK,KAAE9sG,EAAMvJ,OACdmvG,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,OAOfsqG,EAAAA,cAAC2G,EAAuB,CACtB9iC,GAAI,CACF/mE,MAAO,iBACP,oBAAqB,CAAE4B,gBAAiB,qBAMhDshG,EAAAA,cAACE,EAAAA,EAAK,OACDt2E,EAAUn7B,QACXuxG,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,MAAMqN,eAAe,gBAAgB2tF,EAAG,GACvDsP,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,MAAMob,QAAS,GAC9BkvF,EAAAA,cAACE,EAAAA,EAAK,CAACl9F,WAAW,UAChBg9F,EAAAA,cAACkB,EAAAA,EAAW,CAACpkG,MAAM,aACjBkjG,EAAAA,cAACG,EAAAA,EAAM,CAACrgG,KAAK,QAAQzO,MAAM,SAASkJ,QAASktG,GAAe,eAG5DzH,EAAAA,cAACG,EAAAA,EAAM,CAACrgG,KAAK,QAAQzO,MAAM,MAAMkJ,QAASktG,GAAe,aAK3DzH,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,UAAU6jB,MAAM,SAAS4jE,EAAG,GAAG,+BAKrDsP,EAAAA,cAACE,EAAAA,EAAK,CAACl9F,WAAW,UAChBg9F,EAAAA,cAACkB,EAAAA,EAAW,CAACpkG,MAAM,aACjBkjG,EAAAA,cAACiE,EAAAA,EAAqB,OAExBjE,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,UAAU6jB,MAAM,SAAS4jE,EAAG,GAAG,4BAKrDsP,EAAAA,cAACE,EAAAA,EAAK,CAACl9F,WAAW,UAChBg9F,EAAAA,cAACG,EAAAA,EAAM,CACL7rB,UAAW0rB,EAAAA,cAACkI,EAAAA,EAAiB,MAC7BpoG,KAAK,QACLmJ,QAAQ,OACRnM,MAAM,YACNvC,QAAS8sG,GACV,uBAGDrH,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,UAAU6jB,MAAM,SAAS4jE,EAAG,GAAG,4CAMvDsP,EAAAA,cAACE,EAAAA,EAAK,CAACn9F,eAAe,UACpBi9F,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,OACfsqG,EAAAA,cAACG,EAAAA,EAAM,CACLrgG,KAAK,QACLhD,MAAM,YACNw3E,UAAW0rB,EAAAA,cAACmI,EAAAA,EAAe,MAC3B5tG,QAASutG,GACV,qBAGD9H,EAAAA,cAACG,EAAAA,EAAM,CAAC5lG,QAAS4sG,EAAerqG,MAAM,YAAYgD,KAAK,SAAQ,UAG9D+nG,GACC7H,EAAAA,cAACG,EAAAA,EAAM,CACLrjG,MAAM,YACNgD,KAAK,QACLvF,QAAS0tG,GACV,2BASP,ECrIL,MAAM5H,EAAiC,CAC5C,CACEjwE,MAAO,SACP2I,WAAY,OACZH,UAAU,EACVI,mBAAmB,EACnB94B,MAAO,IACPgtB,eAAiBjnB,IACf,MAAM,MAAE5U,GAAU4U,EAClB,OAAQ5U,GAASA,EAAM,eAAiBA,EAAM,cAAc,IAAO,IAAI,GAG3E,CAAE++B,MAAO,QAAS2I,WAAY,QAAS5oB,KAAM,EAAG6oB,mBAAmB,GACnE,CACE5I,MAAO,SACP2I,WAAY,eACZ5oB,KAAM,EACN6oB,mBAAmB,EACnB9L,eAAiBjnB,IACPA,EAAO5U,OAAS,IAAI6I,QAC1B,CAACvF,EAAa,KAAD,IAAE,OAAEyzG,EAAM,MAAEC,GAAa,SACnCD,GAAazzG,EAAI,IAAIyzG,EAAM,IAAIC,GAAY,IAAI,GAClD,MAOFpsE,EAAqB,CACzB,CACE7L,MAAO,UACPxnB,KAAM,UACNgwB,UAAU,EACV14B,MAAO,GACP6sB,YAAa,QACbD,MAAO,QACPoM,WAAajzB,IACX,MAAM,YAAEy6F,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC7B,EAAC0H,EAAS,EAACC,IAAejH,EAAAA,EAAAA,aAAYr7F,EAAOyJ,IAAI44F,UAEjDE,GAAgB1H,EAAAA,EAAAA,cAAY,KAChCJ,EAAYkE,KAAK3+F,EAAOjV,GAAc,IACjCiV,EAAOyJ,IACV44F,SAAkC,IAAxBriG,EAAOyJ,IAAI44F,SAAiB,EAAI,IAE5CC,GAAaD,EAAS,GACrB,CAACA,IAEJ,OACEtI,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,OACfsqG,EAAAA,cAACyI,EAAAA,EAAO,CAAC3hG,MAAM,kDACbk5F,EAAAA,cAAC3+F,EAAAA,EAAU,CAACvB,KAAK,QAAQvF,QAASiuG,GAC9BF,GAAYtI,EAAAA,cAAC0I,EAAAA,EAAQ,CAAC1hG,MAAO,CAAEijE,KAAM,WACrC+1B,EAAAA,cAAC2I,EAAAA,EAAe,QAIhB,GAId,IACK/X,EAAAA,IACJ,OACEyP,EAAiB,CACpB,CACEjwE,MAAO,UACPxnB,KAAM,UACNgwB,UAAU,EACV14B,MAAO,GACP64B,WAAY,UACZG,WAAajzB,IACX,MAAM,aAAE2iG,IAAiBjI,EAAAA,EAAAA,YAAW0C,EAAAA,GAC9BwF,GAAiB/H,EAAAA,EAAAA,cAAY,KACjC8H,EAAa3iG,EAAOyJ,IAAI,GACvB,CAACzJ,IAEJ,OACE+5F,EAAAA,cAACE,EAAAA,EAAK,CAACxqG,UAAU,OACfsqG,EAAAA,cAACyI,EAAAA,EAAO,CAAC3hG,MAAM,+BACbk5F,EAAAA,cAAC3+F,EAAAA,EAAU,CAACvB,KAAK,QAAQvF,QAASsuG,GAChC7I,EAAAA,cAAC8I,EAAAA,EAAW,QAGV,KAMVxJ,IAAgBC,EAAAA,EAAAA,GAAY,IAC7BC,EAAAA,KACAuJ,EAAAA,IAkDChuF,GAA0B,KAC9B,MAAM,MAAE3gB,IAAUumG,EAAAA,EAAAA,YAAW0C,EAAAA,IAEvB,MAAExyG,EAAK,QAAEijB,IAAYwwF,EAAAA,EAAAA,UAAQ,KACjC,OAAQlqG,EAAMpJ,IACZ,IAAK,MACH,MAAO,CACLH,MAAO,uBACPijB,QACE,4EAEN,IAAK,YACH,MAAO,CACLjjB,MAAO,4BACPijB,QACE,qEAEN,QACE,MAAO,CACLjjB,MAAM,mBAAoBuJ,EAAMvJ,MAAK,WACrCijB,QAAQ,oEACT,GAEJ,CAAC1Z,IAEJ,OACE4lG,EAAAA,cAACE,EAAAA,EAAK,CAACf,QAAQ,QAAQn8F,WAAW,SAASyG,OAAO,QAChDu2F,EAAAA,cAACgJ,EAAAA,GAAkB,MACnBhJ,EAAAA,cAACiJ,EAAAA,GAAW,KAAEp4G,GACdmvG,EAAAA,cAAC5qB,EAAAA,EAAU,CAACnsE,QAAQ,WAAW6K,GACzB,EAIZ,OAjFkC,KAChC,MAAM,YAAE4sF,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC7B,MAAExmG,EAAK,eAAEooD,EAAc,qBAAE4gD,IAAyBzC,EAAAA,EAAAA,YAAW0C,EAAAA,IAE7D,EAACzwD,EAAK,EAACuB,IAAWmtD,EAAAA,EAAAA,UAAiB,IACnC,EAAC3yG,EAAS,EAAC45C,IAAe+4D,EAAAA,EAAAA,UAAiB,IAE3C4H,GAAapI,EAAAA,EAAAA,cAAaluD,GAASuB,EAAQvB,IAAO,IAElDu2D,GAAiBrI,EAAAA,EAAAA,cAAanyG,GAAa45C,EAAY55C,IAAW,IAElE6uE,EAAQkjC,EAAY0I,kBAAkBhvG,EAAMpJ,IAE5Cs2G,EAAa5G,EAAY2I,aAAa,CAC1CjvG,MAAOA,EAAMpJ,GACb4hD,OACAjkD,aAGF,OACEqxG,EAAAA,cAAC2D,EAAAA,EAAS,CACR3mG,gBAAc,EACdoD,UAAU,EACVyjE,GAAI,CAAEs7B,QAAS,QAAS11F,OAAQ,CAAE6/F,GAAI,OAAQC,GAAI,UAElDvJ,EAAAA,cAACM,EAAAA,EAAa,CAACjjG,MAAOiiG,IACpBU,EAAAA,cAAC30C,EAAAA,EAAQ,CACPh3C,WAAY,CAAE6zD,QAASshC,EAAazuF,kBACpCynC,eAAgBA,EAChBsC,uBAAwBs+C,EACxBl2D,KAAMo6D,EACNrrE,QAASA,EACTmU,SAAUotB,EACVl1B,YAAU,EACVsK,KAAMA,EACNjkD,SAAUA,EACVulD,aAAcg1D,EACd71D,iBAAkB81D,EAClBh8D,eAAe,SACf8gC,mBAAoB,CAAC,GAAI,EAAG,GAAI,GAAI,KACpClrB,mBAAiB,KAGX,C,8FC3JT,MAAMsgD,GAAiBoG,EAAAA,EAAAA,eAO3B,CACDrvG,MAAO,CAAC,EACRsvG,UAAW,CAAC,EACZlnD,eAAgB,GAChB2gD,SAAU,IAAM,GAChByF,aAAc,IAAM,GACpBxF,qBAAsB,IAAM,KAGjBuG,EAA4BjiF,IAAmB,IAAlB,SAAEthB,GAAU,EACpD,MAAM,EAAChM,EAAM,EAAC+oG,IAAY7B,EAAAA,EAAAA,UAAgB,CAAEtwG,GAAI,MAAOH,MAAO,oBACxD,EAAC64G,EAAU,EAACd,IAAgBtH,EAAAA,EAAAA,aAC5B,EAAC9+C,EAAe,EAACqD,IAAqBy7C,EAAAA,EAAAA,UAA6B,IAEnE8B,GAAuBtC,EAAAA,EAAAA,cAC1B8I,GAAsB/jD,EAAkB+jD,IACzC,IAGF,OACE5J,EAAAA,cAACqD,EAAewG,SAAQ,CACtBx4G,MAAO,CACL+I,QACAsvG,YACAlnD,iBACA2gD,WACAyF,eACAxF,yBAGDh9F,EACuB,C,yDCjD9B,IAAI0jG,EAAY,YAgFT,IAAIC,EAAuB,SAA8B/lE,EAAGtC,GACjE,OAAOsC,IAAMtC,CACf,EAqBO,SAASiqD,EAAeqe,EAAMC,GACnC,IAtG4BC,EACxBzyB,EAqGA0yB,EAAoD,iBAA3BF,EAAsCA,EAAyB,CAC1Fre,cAAeqe,GAEbG,EAAwBD,EAAgBve,cACxCA,OAA0C,IAA1Bwe,EAAmCL,EAAuBK,EAC1EC,EAAwBF,EAAgBG,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBJ,EAAgBI,oBACtCvR,EA7BC,SAAkCpN,GACvC,OAAO,SAAoCj3F,EAAM61G,GAC/C,GAAa,OAAT71G,GAA0B,OAAT61G,GAAiB71G,EAAKlG,SAAW+7G,EAAK/7G,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASkG,EAAKlG,OAETD,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,IAAKo9F,EAAcj3F,EAAKnG,GAAIg8G,EAAKh8G,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAYmBi8G,CAAyB7e,GACtCv7C,EAAoB,IAAZi6D,GA/GgBJ,EA+GqBlR,EA7G1C,CACLr5E,IAAK,SAAajnB,GAChB,OAAI++E,GAASyyB,EAAOzyB,EAAM/+E,IAAKA,GACtB++E,EAAMpmF,MAGRy4G,CACT,EACAY,IAAK,SAAahyG,EAAKrH,GACrBomF,EAAQ,CACN/+E,IAAKA,EACLrH,MAAOA,EAEX,EACAs5G,WAAY,WACV,OAAOlzB,EAAQ,CAACA,GAAS,EAC3B,EACAmzB,MAAO,WACLnzB,OAAQ58E,CACV,IAIJ,SAAwByvG,EAASJ,GAC/B,IAAI7hF,EAAU,GAEd,SAAS1I,EAAIjnB,GACX,IAAImyG,EAAaxiF,EAAQh6B,WAAU,SAAUopF,GAC3C,OAAOyyB,EAAOxxG,EAAK++E,EAAM/+E,IAC3B,IAEA,GAAImyG,GAAc,EAAG,CACnB,IAAIpzB,EAAQpvD,EAAQwiF,GAOpB,OALIA,EAAa,IACfxiF,EAAQvwB,OAAO+yG,EAAY,GAC3BxiF,EAAQqa,QAAQ+0C,IAGXA,EAAMpmF,KACf,CAGA,OAAOy4G,CACT,CAwBA,MAAO,CACLnqF,IAAKA,EACL+qF,IAxBF,SAAahyG,EAAKrH,GACZsuB,EAAIjnB,KAASoxG,IAEfzhF,EAAQqa,QAAQ,CACdhqC,IAAKA,EACLrH,MAAOA,IAGLg3B,EAAQ55B,OAAS67G,GACnBjiF,EAAQ6yE,MAGd,EAaEyP,WAXF,WACE,OAAOtiF,CACT,EAUEuiF,MARF,WACEviF,EAAU,EACZ,EAQF,CAmCiEyiF,CAAeR,EAAStR,GAEvF,SAAS+R,IACP,IAAI15G,EAAQg/C,EAAM1wB,IAAI46E,WAEtB,GAAIlpG,IAAUy4G,EAAW,CAIvB,GAFAz4G,EAAQ24G,EAAK3nF,MAAM,KAAMk4E,WAErBgQ,EAAqB,CACvB,IACIS,EADU36D,EAAMs6D,aACQriF,MAAK,SAAUmvD,GACzC,OAAO8yB,EAAoB9yB,EAAMpmF,MAAOA,EAC1C,IAEI25G,IACF35G,EAAQ25G,EAAc35G,MAE1B,CAEAg/C,EAAMq6D,IAAInQ,UAAWlpG,EACvB,CAEA,OAAOA,CACT,CAMA,OAJA05G,EAASE,WAAa,WACpB,OAAO56D,EAAMu6D,OACf,EAEOG,CACT,C","sources":["webpack://citation-generator/./node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","webpack://citation-generator/./node_modules/@mui/icons-material/AddCircle.js","webpack://citation-generator/./node_modules/@mui/icons-material/AllInbox.js","webpack://citation-generator/./node_modules/@mui/icons-material/Close.js","webpack://citation-generator/./node_modules/@mui/icons-material/Done.js","webpack://citation-generator/./node_modules/@mui/icons-material/LibraryBooks.js","webpack://citation-generator/./node_modules/@mui/icons-material/NoteAdd.js","webpack://citation-generator/./node_modules/@mui/icons-material/Preview.js","webpack://citation-generator/./node_modules/@mui/icons-material/Star.js","webpack://citation-generator/./node_modules/@mui/icons-material/StarBorder.js","webpack://citation-generator/./node_modules/@mui/icons-material/StarOutline.js","webpack://citation-generator/./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","webpack://citation-generator/./node_modules/@mui/material/ListSubheader/ListSubheader.js","webpack://citation-generator/./node_modules/@mui/material/Autocomplete/autocompleteClasses.js","webpack://citation-generator/./node_modules/@mui/material/Autocomplete/Autocomplete.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/CheckBox.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","webpack://citation-generator/./node_modules/@mui/material/Checkbox/checkboxClasses.js","webpack://citation-generator/./node_modules/@mui/material/Checkbox/Checkbox.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/Cancel.js","webpack://citation-generator/./node_modules/@mui/material/Chip/chipClasses.js","webpack://citation-generator/./node_modules/@mui/material/Chip/Chip.js","webpack://citation-generator/./node_modules/@mui/material/ListItemButton/ListItemButton.js","webpack://citation-generator/./node_modules/@mui/material/internal/switchBaseClasses.js","webpack://citation-generator/./node_modules/@mui/material/internal/SwitchBase.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridRoot.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/ErrorBoundary.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridAutoSizer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridOverlays.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridBody.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/context/GridContextProvider.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/EventManager.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","webpack://citation-generator/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://citation-generator/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://citation-generator/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridEditRowModel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/GridMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridDensity.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/utils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/exportAs.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridFeatureMode.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridFilterItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/params/gridRowParams.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/domUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGroupingPreProcessors.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/localeTextConstants.js","webpack://citation-generator/./node_modules/@mui/material/Switch/switchClasses.js","webpack://citation-generator/./node_modules/@mui/material/Switch/Switch.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridCell.js","webpack://citation-generator/./node_modules/@mui/material/styles/cssUtils.js","webpack://citation-generator/./node_modules/@mui/material/Skeleton/skeletonClasses.js","webpack://citation-generator/./node_modules/@mui/material/Skeleton/Skeleton.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridRowCount.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridFooter.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridHeader.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","webpack://citation-generator/./node_modules/@mui/material/CircularProgress/circularProgressClasses.js","webpack://citation-generator/./node_modules/@mui/material/CircularProgress/CircularProgress.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","webpack://citation-generator/./node_modules/@mui/material/Table/TableContext.js","webpack://citation-generator/./node_modules/@mui/material/Table/Tablelvl2Context.js","webpack://citation-generator/./node_modules/@mui/material/TableCell/tableCellClasses.js","webpack://citation-generator/./node_modules/@mui/material/TableCell/TableCell.js","webpack://citation-generator/./node_modules/@mui/material/TablePagination/TablePaginationActions.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/LastPage.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/FirstPage.js","webpack://citation-generator/./node_modules/@mui/material/TablePagination/tablePaginationClasses.js","webpack://citation-generator/./node_modules/@mui/material/TablePagination/TablePagination.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridPagination.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","webpack://citation-generator/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://citation-generator/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/envConstants.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridRow.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/ErrorOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridScrollArea.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/chainPropTypes.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridApiContext.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/icons/index.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/gridClasses.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","webpack://citation-generator/./node_modules/reselect/es/index.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/createSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/keyboardUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/utils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/warning.js","webpack://citation-generator/./src/components/FileImport.tsx","webpack://citation-generator/./src/components/manger/Collection.tsx","webpack://citation-generator/./src/components/manger/Project.tsx","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","webpack://citation-generator/./src/components/manger/ListToolbar.tsx","webpack://citation-generator/./src/components/manger/ReferencesTable.tsx","webpack://citation-generator/./src/provider/ManagerProvider.tsx","webpack://citation-generator/./node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    var _previousProps$value;\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && (multiple ? previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : getOptionLabel((_previousProps$value = previousProps.value) != null ? _previousProps$value : '') === getOptionLabel(value != null ? value : ''))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value hasn't changed\n    // If it exists and the value hasn't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 6h-4c0 1.62-1.38 3-3 3s-3-1.38-3-3H5V5h14v4zm-4 7h6v3c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3z\"\n}), 'AllInbox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z\"\n}), 'LibraryBooks');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z\"\n}), 'NoteAdd');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm0 16H5V7h14v12zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zM12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4zm0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Preview');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m22 9.24-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarBorder');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m22 9.24-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarOutline');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel = option => {\n        var _option$label;\n        return (_option$label = option.label) != null ? _option$label : option;\n      },\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'filledPrimary', 'filledSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'deleteIconFilledColorPrimary', 'deleteIconFilledColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\", \"tabIndex\", \"skipFocusWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    iconColor,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(iconColor)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      iconColor,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(iconColor)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], styles[`${variant}${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  const textColor = theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300];\n  return _extends({\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: (theme.vars || theme).palette.text.primary,\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: (theme.vars || theme).palette.primary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: (theme.vars || theme).palette.secondary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.iconColor === ownerState.color && _extends({\n      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    })),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: (theme.vars || theme).palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: (theme.vars || theme).shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: (theme.vars || theme).palette[ownerState.color].main,\n  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n  const {\n      avatar: avatarProp,\n      className,\n      clickable: clickableProp,\n      color = 'default',\n      component: ComponentProp,\n      deleteIcon: deleteIconProp,\n      disabled = false,\n      icon: iconProp,\n      label,\n      onClick,\n      onDelete,\n      onKeyDown,\n      onKeyUp,\n      size = 'medium',\n      variant = 'filled',\n      tabIndex,\n      skipFocusWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    iconColor: /*#__PURE__*/React.isValidElement(iconProp) ? iconProp.props.color || color : color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n  if (onDelete) {\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    });\n  }\n  let avatar = null;\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n  let icon = null;\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    tabIndex: skipFocusWhenDisabled && disabled ? -1 : tabIndex,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * If `true`, allows the disabled chip to escape focus.\n   * If `false`, allows the disabled chip to receive focus.\n   * @default false\n   */\n  skipFocusWhenDisabled: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alignItems\", \"autoFocus\", \"component\", \"children\", \"dense\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemButtonClasses, { getListItemButtonUtilityClass } from './listItemButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    divider,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', divider && 'divider', disabled && 'disabled', alignItems === 'flex-start' && 'alignItemsFlexStart', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst ListItemButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiListItemButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minWidth: 0,\n  boxSizing: 'border-box',\n  textAlign: 'left',\n  paddingTop: 8,\n  paddingBottom: 8,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemButtonClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemButtonClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemButtonClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}));\nconst ListItemButton = /*#__PURE__*/React.forwardRef(function ListItemButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemButton'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      component = 'div',\n      children,\n      dense = false,\n      disableGutters = false,\n      divider = false,\n      focusVisibleClassName,\n      selected = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItemButton whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    dense: childContext.dense,\n    disableGutters,\n    divider,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(ListItemButtonRoot, _extends({\n      ref: handleRef,\n      href: other.href || other.to,\n      component: (other.href || other.to) && component === 'div' ? 'a' : component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      ownerState: ownerState,\n      className: clsx(classes.root, className)\n    }, other, {\n      classes: classes,\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemButton;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  }, // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n\n  return gridStyle;\n});","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityHeaderGroupingMaxDepthSelector = createSelector(gridDensitySelector, density => density.headerGroupingMaxDepth);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);\nexport const gridDensityTotalHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight * (1 + density.headerGroupingMaxDepth));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityHeaderGroupingMaxDepthSelector, gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n\n  if (logger.current) {\n    return logger.current;\n  }\n\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.state);\n    }\n\n    return this.props.children;\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const errorState = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: errorState != null,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, errorState, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n\n    var element = this;\n    resetTriggers(this);\n\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n\n  var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n  var createStyles = function createStyles(doc, root) {\n    if (!root.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          container = root.constructor.name === 'ShadowRoot' ? root : doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      container.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n\n      createStyles(doc, element.getRootNode());\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n\n    element.__resizeListeners__.push(fn);\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Function responsible for rendering children.\n   * @param {AutoSizerSize} size The grid's size.\n   * @returns {React.ReactNode} The children to render.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: totalHeaderHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - totalHeaderHeight : 'auto',\n          marginTop: totalHeaderHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n\n  if (rootProps.hideFooter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = ({\n  apiRef,\n  props,\n  children\n}) => {\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  reset() {}\n\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact, // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n\n      return () => {\n        var _subscription$current2;\n\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n\n    if (!collection) {\n      return;\n    }\n\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nimport { unstable_resetCreateSelectorCache } from '../../utils/createSelector';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      unstable_resetCreateSelectorCache(api.instanceId);\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n            otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n\n    const groupCache = strategiesCache.current[processorName];\n\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n      stateId\n    } = controlStateItem,\n          others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (newSubState === oldSubState) {\n        return;\n      }\n\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState,\n    unstable_registerControlState: registerControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    if (props.error) {\n      handleError({\n        error: props.error\n      });\n    } else {\n      handleError(null);\n    }\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n\n    return props.localeText[key];\n  }, [props.localeText]);\n  const localeTextApi = {\n    getLocaleText\n  };\n  useGridApiMethod(apiRef, localeTextApi, 'LocaleTextApi');\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\n\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\n\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n\n  if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n    return true;\n  }\n\n  if (!element) {\n    return false;\n  }\n\n  if ((element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback((includeHeaders = false) => {\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderFocus = React.useCallback((params, event) => {\n    // Check if the column menu button received focus\n    if (!event.target.classList.contains(gridClasses.menuIconButton)) {\n      return;\n    } // Check if there's an element which lost focus\n\n\n    if (!event.relatedTarget) {\n      return;\n    } // `true` if the focus was on the column menu itself, not on any item\n\n\n    const columnMenuLostFocus = event.relatedTarget.classList.contains(gridClasses.menuList); // `true` if the focus was on an item from the column menu\n\n    const columnMenuItemLostFocus = event.relatedTarget.getAttribute('role') === 'menuitem';\n\n    if (columnMenuLostFocus || columnMenuItemLostFocus) {\n      apiRef.current.setColumnHeaderFocus(params.field);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\n\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n\n  return Number(value);\n};\n\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\n\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    InputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\n\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return ({\n    value\n  }) => {\n    if (!value) {\n      return false;\n    }\n\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\n\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditDateCell(props) {\n  const {\n    id,\n    value: valueProp,\n    field,\n    colDef,\n    hasFocus,\n    inputProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n\n    let formattedDate;\n\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n      newParsedDate.setHours(0, 0, 0, 0);\n\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\n\nvar GridCellModes;\n\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\n\nvar GridRowModes;\n\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\n\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\n\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\n\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    row,\n    colDef,\n    hasFocus,\n    error,\n    onValueChange,\n    initialOpen = rootProps.editMode === GridEditModes.Cell\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n\n  const handleChange = async event => {\n    var _rootProps$experiment;\n\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n\n    const canCommit = await Promise.resolve(apiRef.current.commitCellChange({\n      id,\n      field\n    }, event));\n\n    if (canCommit) {\n      apiRef.current.setCellMode(id, field, 'view');\n\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = apiRef.current.getCellParams(id, field);\n        apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        apiRef.current.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        apiRef.current.setCellMode(id, field, 'view');\n      }\n    }\n  };\n\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n\n    setOpen(true);\n  };\n\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    if (currentColumn === null) {\n      return undefined;\n    }\n\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\n\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    if (!(resolvedColumn != null && resolvedColumn.valueOptions)) {\n      return [];\n    }\n\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueOptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\n\nconst GridMenu = props => {\n  var _rootProps$components;\n\n  const {\n    open,\n    target,\n    onClickAway,\n    children,\n    position,\n    className,\n    onExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    } // Emit menuOpen or menuClose events\n\n\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [apiRef, open, target]);\n\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst hasActions = colDef => typeof colDef.getActions === 'function';\n\nconst GridActionsCell = props => {\n  const {\n    colDef,\n    id,\n    hasFocus,\n    tabIndex,\n    position = 'bottom-end',\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n\n  }), []);\n\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n\n  const hideMenu = () => {\n    setOpen(false);\n  };\n\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n\n    let newIndex = focusedButtonIndex;\n\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = (customColumnTypes = {}) => {\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n\n  Object.entries(customColumnTypes).forEach(([colType, colTypeDef]) => {\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n\n    loopOverFlexItems();\n  }\n\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n\n  const newColumnLookup = _extends({}, columnsState.lookup);\n\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  return columnTypes[type];\n};\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  shouldRegenColumnVisibilityModelFromColumns,\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n\n    };\n  }\n\n  let columnsToKeep = {};\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  apiRef.current.unstable_caches.columns = {\n    isUsingColumnVisibilityModel\n  };\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState5, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _columnVisibilityMode;\n\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n\n    const newColumn = _extends({}, column, {\n      width\n    });\n\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _props$initialState$c2, _props$initialState4, _props$initialState4$;\n\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const shouldExportColumnVisibilityModel = // Always export if the `exportOnlyDirtyModels` property is activated\n      !context.exportOnlyDirtyModels || // Always export if the model is controlled\n      props.columnVisibilityModel != null || // Always export if the model has been initialized\n      // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n      Object.keys((_props$initialState$c2 = (_props$initialState4 = props.initialState) == null ? void 0 : (_props$initialState4$ = _props$initialState4.columns) == null ? void 0 : _props$initialState4$.columnVisibilityModel) != null ? _props$initialState$c2 : {}).length > 0 || // Always export if the model is not empty\n      Object.keys(columnVisibilityModelToExport).length > 0;\n\n      if (shouldExportColumnVisibilityModel) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState5 = props.initialState) == null ? void 0 : _props$initialState5.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const columnVisibilityModelToImport = apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\n\nexport { GridDensityTypes };","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n/**\n * A function used to process headerClassName params.\n */","import { createSelector } from '../../../utils/createSelector';\n\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsLookupSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping.lookup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector } from './gridColumnGroupsSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport function hasGroupPath(lookupElement) {\n  return lookupElement.groupPath !== undefined;\n}\n\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplet) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplet[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurrs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplet[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n\n    unwrappedGroupingModelToComplet[columnGroupNode.field] = parents;\n    return;\n  }\n\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplet);\n  });\n};\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\n\n\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\n\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n\n    const {\n      groupId,\n      children\n    } = node,\n          other = _objectWithoutPropertiesLoose(node, _excluded);\n\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n\n    const subTreeLookup = createGroupLookup(children);\n\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\n\nexport const columnGroupsStateInitializer = (state, props) => {\n  var _props$columnGrouping;\n\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      groupCollapsedModel: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\n\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _columnLookup$field$g, _columnLookup$field;\n\n    const columnLookup = gridColumnLookupSelector(apiRef);\n    return (_columnLookup$field$g = (_columnLookup$field = columnLookup[field]) == null ? void 0 : _columnLookup$field.groupPath) != null ? _columnLookup$field$g : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'GridColumnGroupingApi');\n  /**\n   * EFFECTS\n   */\n  // The effect does not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    var _props$experimentalFe, _props$columnGrouping2;\n\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return;\n    }\n\n    const groupLookup = createGroupLookup((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n    apiRef.current.setState(state => _extends({}, state, {\n      columnGrouping: _extends({}, state.columnGrouping, {\n        lookup: groupLookup\n      })\n    }));\n  }, [apiRef, props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { unwrapGroupingColumnModel } from '../columnGrouping/useGridColumnGrouping';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight, newMaxDepth) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMPACT_DENSITY_FACTOR\n      };\n\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: 1\n      };\n  }\n};\n\nexport const densityStateInitializer = (state, props) => {\n  // TODO: think about improving this initialization. Could it be done in the useColumn initializer?\n  // TODO: manage to remove ts-ignore\n  let maxDepth;\n\n  if (props.columnGroupingModel == null || Object.keys(props.columnGroupingModel).length === 0) {\n    maxDepth = 0;\n  } else {\n    const unwrappedGroupingColumnModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    const columnsState = state.columns;\n    const visibleColumns = columnsState.all.filter(field => columnsState.columnVisibilityModel[field] !== false);\n\n    if (visibleColumns.length === 0) {\n      maxDepth = 0;\n    } else {\n      maxDepth = Math.max(...visibleColumns.map(field => {\n        var _unwrappedGroupingCol, _unwrappedGroupingCol2;\n\n        return (_unwrappedGroupingCol = (_unwrappedGroupingCol2 = unwrappedGroupingColumnModel[field]) == null ? void 0 : _unwrappedGroupingCol2.length) != null ? _unwrappedGroupingCol : 0;\n      }));\n    }\n  }\n\n  return _extends({}, state, {\n    density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight, maxDepth)\n  });\n};\nexport const useGridDensity = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const maxDepth = visibleColumns.length > 0 ? Math.max(...visibleColumns.map(column => {\n    var _column$groupPath$len, _column$groupPath;\n\n    return (_column$groupPath$len = (_column$groupPath = column.groupPath) == null ? void 0 : _column$groupPath.length) != null ? _column$groupPath$len : 0;\n  })) : 0;\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback((newDensity, newHeaderHeight = props.headerHeight, newRowHeight = props.rowHeight, newMaxDepth = maxDepth) => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight, newMaxDepth);\n\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight, maxDepth]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight, maxDepth);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight, maxDepth]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\n\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => {\n    var _rowTree$id$position;\n\n    return ((_rowTree$id$position = rowTree[id].position) != null ? _rowTree$id$position : 'body') === 'body';\n  });\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n      _excluded2 = [\"hideMenu\", \"options\"],\n      _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n\n  const {\n    hideMenu,\n    options\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n\n  const {\n    hideMenu,\n    options\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n    csvOptions = {},\n    printOptions = {},\n    excelOptions\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade;\n\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\n\nfunction getChromeVersion() {\n  const raw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n  return raw ? parseInt(raw[2], 10) : null;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]); // TODO move outside of this scope and remove React.useCallback\n\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n\n    const printDoc = printWindow.contentDocument;\n\n    if (!printDoc) {\n      return;\n    }\n\n    const totalHeaderHeight = gridDensityTotalHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const chromeVersion = getChromeVersion();\n\n    if (chromeVersion && chromeVersion >= 108) {\n      // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n      gridClone.style.contain = 'size';\n    }\n\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + totalHeaderHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow); // In test env, run the all pipeline without waiting for loading\n\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\n\nexport { GridLinkOperator };","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n\n  if (cleanItem.operatorValue == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.columnField];\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\n\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.columnField || !filterItem.operatorValue) {\n    return null;\n  }\n\n  const column = apiRef.current.getColumn(filterItem.columnField);\n\n  if (!column) {\n    return null;\n  }\n\n  let parsedValue;\n\n  if (column.valueParser) {\n    var _filterItem$value;\n\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n\n  const filterOperators = column.filterOperators;\n\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n  }\n\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n\n  const fn = rowId => {\n    const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n    return applyFilterOnRow(cellParams);\n  };\n\n  return {\n    fn,\n    item: newFilterItem\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n\n  if (appliers.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const resultPerItemId = {};\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers;\n    filteredAppliers.forEach(applier => {\n      resultPerItemId[applier.item.id] = applier.fn(rowId);\n    });\n    return resultPerItemId;\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = []\n  } = filterModel;\n\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n\n  if (sanitizedQuickFilterValues.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    const columnsFieldsToFilter = [];\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n        columnsFieldsToFilter.push(columnField);\n      }\n    });\n    const quickFilterValueResult = {};\n    sanitizedQuickFilterValues.forEach((value, index) => {\n      const isPassing = columnsFieldsToFilter.some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      });\n      quickFilterValueResult[value] = isPassing;\n    });\n    return quickFilterValueResult;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return (rowId, shouldApplyFilter) => ({\n    passingFilterItems: isRowMatchingFilterItems && isRowMatchingFilterItems(rowId, shouldApplyFilter),\n    passingQuickFilterValues: isRowMatchingQuickFilter && isRowMatchingQuickFilter(rowId, shouldApplyFilter)\n  });\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$linkOper;\n\n  const cleanedFilterItems = filterModel.items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  const cleanedAllFilterItemResults = allFilterItemResults.filter(result => result != null);\n  const cleanedAllQuickFilterResults = allQuickFilterResults.filter(result => result != null); // Defaultize operators\n\n  const quickFilterLogicOperator = (_filterModel$quickFil = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil : getDefaultGridFilterModel().quickFilterLogicOperator;\n  const linkOperator = (_filterModel$linkOper = filterModel.linkOperator) != null ? _filterModel$linkOper : getDefaultGridFilterModel().linkOperator; // get result for filter items model\n\n  if (cleanedAllFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedAllFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n\n    if (linkOperator === GridLinkOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  } // get result for quick filter model\n\n\n  if (cleanedAllQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedAllQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n\n        if (item.value !== undefined) {\n          return true;\n        }\n\n        const column = apiRef.current.getColumn(item.columnField);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operatorValue);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue; // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n\n        if (requiresFilterValue) {\n          return false;\n        }\n\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      }\n\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the model is controlled\n    props.filterModel != null || // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.filter) == null ? void 0 : _props$initialState2$.filterModel) != null || // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.filter) == null ? void 0 : _props$initialState3$.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n\n    if (filterModel == null) {\n      return params;\n    }\n\n    apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        let isRowPassing;\n\n        if (typeof rowId === 'string' && rowId.startsWith('auto-generated-group-footer')) {\n          isRowPassing = true;\n        } else {\n          const {\n            passingFilterItems,\n            passingQuickFilterValues\n          } = params.isRowMatchingFilters(rowId);\n          isRowPassing = passFilterLogic([passingFilterItems], [passingQuickFilterValues], params.filterModel, apiRef);\n        }\n\n        filteredRowsLookup[rowId] = isRowPassing;\n      }\n\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n\n      return;\n    }\n\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate(); // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n\n    const cell = gridFocusCellSelector(apiRef);\n\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\n\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.unstable_moveFocusToRelativeCell()\n   */\n\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    } // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n\n\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex].id;\n  }, [currentPageRows]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // TODO v6: Remove Enter case because `cellNavigationKeyDown` is not fired by the new editing API\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          const field = params.field;\n\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n\n          const colDef = params.colDef;\n\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\n\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  previousTree,\n  rowCountProp,\n  loadingProp\n}) => {\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n        cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null && !node.isPinned).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\n\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the page size is controlled\n    props.pageSize != null || // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null || // Export if the page size is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  return 0;\n};\n\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\n\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\n\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the page is controlled\n    props.page != null || // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null || // Export if the page is not equal to the default value\n    pageToExport !== 0;\n\n    if (!shouldExportPage) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null || // Always export if the panel is opened\n    preferencePanelToExport.open;\n\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\n\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\n\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback((params, event = {}) => {\n    var _props$experimentalFe;\n\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n\n    let hasError = !!editCellProps.error;\n\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n\n          if (newEditCellProps.error) {\n            return false;\n          }\n\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n\n    if (!isEditMode && isCellEnterEditModeKeys(event) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n\n      if (!isValid) {\n        return;\n      }\n    }\n\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n\n    if (isKeyboardEvent(event) && isPrintableKey(event)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback((id, event = {}) => {\n    var _props$experimentalFe;\n\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n\n    if (hasFieldWithError) {\n      return false;\n    }\n\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n\n        if (editCellProps.error) {\n          isValid = false;\n        }\n\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      let rowUpdate = _extends({}, row);\n\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_registerControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !params.rowNode.isPinned && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback((params, event = {}) => {\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import * as React from 'react';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\n\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import * as React from 'react';\nimport useEnhancedEffect from './useEnhancedEffect';\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport default function useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n      _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n\n    if (reason === GridCellEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startCellEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startCellEditModeParams.deleteValue = true;\n      }\n    } else if (reason === GridCellEditStartReasons.deleteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (editingState[id][field].isProcessingProps && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n            otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n\n      newModel[id] = otherFields;\n\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n    }\n\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id, _editingState$id$fiel;\n\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id$fiel = _editingState$id[field]) != null && _editingState$id$fiel.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopCellEditMode may change it later\n\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _copyOfPrevCellModes$2, _idToIdLookup$id;\n\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null ? void 0 : (_copyOfPrevCellModes$2 = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\n\nvar GridRowEditStopReasons;\n\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n      _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n\n      focusTimeout.current = null;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        } // The row may already changed its mode\n\n\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          key: event.key,\n          reason\n        });\n\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n\n    if (reason === GridRowEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startRowEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startRowEditModeParams.deleteValue = !!field;\n      }\n    } else if (reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (!ignoreModifications && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n\n      let newValue = apiRef.current.getCellValue(id, field);\n\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n\n    return new Promise(resolve => {\n      const promises = [];\n\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n\n        const _editingState$id = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n\n        const fieldColumn = apiRef.current.getColumn(thisField);\n\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n        const _editingState$id2 = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n\n    let rowUpdate = _extends({}, row);\n\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopRowEditMode may change it later\n\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    if (params.rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return {\n      changeReason: editingState[id][field].changeReason\n    };\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector, gridRowsIdToIdLookupSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      previousTree: null,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {// Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          previousTree: gridRowTreeSelector(apiRef),\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n\n    apiRef.current.unstable_caches.rows = newCache;\n\n    if (!throttle) {\n      run();\n      return;\n    }\n\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.unstable_caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange(cache, true);\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n\n    const uniqueUpdates = new Map();\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n\n      if (uniqueUpdates.has(id)) {\n        uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n      } else {\n        uniqueUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const prevCache = apiRef.current.unstable_caches.rows;\n    const newCache = {\n      rowsBeforePartialUpdates: prevCache.rowsBeforePartialUpdates,\n      loadingPropBeforePartialUpdates: prevCache.loadingPropBeforePartialUpdates,\n      rowCountPropBeforePartialUpdates: prevCache.rowCountPropBeforePartialUpdates,\n      idRowsLookup: _extends({}, prevCache.idRowsLookup),\n      idToIdLookup: _extends({}, prevCache.idToIdLookup),\n      ids: [...prevCache.ids]\n    };\n    uniqueUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newCache.idRowsLookup[id];\n        delete newCache.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n\n      const oldRow = apiRef.current.getRow(id);\n\n      if (!oldRow) {\n        newCache.idRowsLookup[id] = partialRow;\n        newCache.idToIdLookup[id] = id;\n        newCache.ids.push(id);\n        return;\n      }\n\n      newCache.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n\n    if (deletedRowIds.length > 0) {\n      newCache.ids = newCache.ids.filter(id => !deletedRowIds.includes(id));\n    }\n\n    throttledRowsChange(newCache, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n\n    if (applySorting) {\n      const groupNode = tree[groupId];\n\n      if (!groupNode) {\n        return [];\n      }\n\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    if (newRows.length === 0) {\n      return;\n    }\n\n    const allRows = gridRowIdsSelector(apiRef);\n    const updatedRows = [...allRows];\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef);\n    const tree = gridRowTreeSelector(apiRef);\n\n    const updatedIdRowsLookup = _extends({}, idRowsLookup);\n\n    const updatedIdToIdLookup = _extends({}, idToIdLookup);\n\n    const updatedTree = _extends({}, tree);\n\n    const newRowEntries = newRows.map(newRowModel => {\n      const rowId = getRowIdFromRowModel(newRowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      return {\n        id: rowId,\n        model: newRowModel\n      };\n    });\n    newRowEntries.forEach((row, index) => {\n      const [replacedRowId] = updatedRows.splice(firstRowToRender + index, 1, row.id);\n      delete updatedIdRowsLookup[replacedRowId];\n      delete updatedIdToIdLookup[replacedRowId];\n      delete updatedTree[replacedRowId];\n    });\n    newRowEntries.forEach(row => {\n      const rowTreeNodeConfig = {\n        id: row.id,\n        parent: null,\n        depth: 0,\n        groupingKey: null,\n        groupingField: null\n      };\n      updatedIdRowsLookup[row.id] = row.model;\n      updatedIdToIdLookup[row.id] = row.id;\n      updatedTree[row.id] = rowTreeNodeConfig;\n    });\n    apiRef.current.unstable_caches.rows.idRowsLookup = updatedIdRowsLookup;\n    apiRef.current.unstable_caches.rows.idToIdLookup = updatedIdToIdLookup;\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.setState(state => {\n      const newRowsState = {\n        idRowsLookup: updatedIdRowsLookup,\n        idToIdLookup: updatedIdToIdLookup,\n        tree: updatedTree,\n        ids: updatedRows\n      };\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, newRowsState, {\n          groupingResponseBeforeRowHydration: _extends({}, state.rows.groupingResponseBeforeRowHydration, newRowsState)\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren,\n    unstable_replaceRows: replaceRows\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = apiRef.current.unstable_caches.rows;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n\n    throttledRowsChange(cache, false);\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  /**\n   * APPLIERS\n   */\n\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, apiRef.current.unstable_applyPipeProcessors('hydrateRows', state.rows.groupingResponseBeforeRowHydration))\n    }));\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    const areNewRowsAlreadyInState = apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates === props.rowCount; // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n\n      return;\n    }\n\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\n\nconst flatRowTreeCreationMethod = ({\n  ids,\n  idRowsLookup,\n  idToIdLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId] && previousTree[rowId].depth === 0 && previousTree[rowId].parent == null && // pinned row can be unpinned\n    !previousTree[rowId].isPinned) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\n\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\n\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\n\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\n\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\n\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\n\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\n\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback((...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n\n    return apiRef.current.getCellValue(...args);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n\n      return rowModel[field];\n    }\n\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\n\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n\n  return [selectionModelProp];\n};\n\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    pagination,\n    paginationMode,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n\n      if (startIndex === endIndex) {\n        return;\n      }\n\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if ((rowNode == null ? void 0 : rowNode.position) === 'footer' || rowNode != null && rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n\n    lastRowToggled.current = id;\n\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n\n      if (isSelected) {\n        newSelection.push(id);\n      }\n\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n\n    if (disableSelectionOnClick) {\n      return;\n    }\n\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    const rowNode = apiRef.current.getRowNode(params.id);\n\n    if (rowNode.isPinned) {\n      return;\n    }\n\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'rowClick', handleRowClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // props.isRowSelectable changed\n\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, {\n        id\n      }) => {\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(id);\n        }\n\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$;\n\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n\n    if (existing) {\n      var _col$sortingOrder;\n\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the model is controlled\n    props.sortModel != null || // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.sorting) == null ? void 0 : _props$initialState2$.sortModel) != null || // Export if the model is not empty\n    sortModelToExport.length > 0;\n\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.sorting) == null ? void 0 : _props$initialState3$.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n\n    if (sortModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n\n    if (!params.sortRowList) {\n      const bodyRowIds = [];\n      const footerRowIds = [];\n      gridRowIdsSelector(apiRef).forEach(rowId => {\n        if (rowTree[rowId].isPinned) {\n          return;\n        }\n\n        if (rowTree[rowId].position === 'footer') {\n          footerRowIds.push(rowId);\n        } else {\n          bodyRowIds.push(rowId);\n        }\n      });\n      return [...bodyRowIds, ...footerRowIds];\n    }\n\n    const bodyRows = [];\n    const footerRowIds = [];\n    Object.values(rowTree).forEach(rowNode => {\n      if (rowNode.isPinned) {\n        return;\n      }\n\n      if (rowNode.position === 'footer') {\n        footerRowIds.push(rowNode.id);\n      } else {\n        bodyRows.push(rowNode);\n      }\n    });\n    return [...params.sortRowList(bodyRows), ...footerRowIds];\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = windowRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = windowRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityTotalHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\n\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\n\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n\n    let scrollBarSize;\n\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > rootDimensionsRef.current.width;\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height - totalHeaderHeight\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: viewportOuterSize.width,\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, totalHeaderHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { debounce, capitalize } from '@mui/material/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef({}); // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const rowHeightFromDensity = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n\n    hasRowWithAutoHeight.current = false;\n    const densityFactor = gridDensityFactorSelector(apiRef.current.state, apiRef.current.instanceId);\n\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeightFromDensity\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = rowHeightFromDensity;\n      const existingBaseRowHeight = sizes.baseCenter;\n\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeightFromDensity; // If the row was not measured yet use the estimated row height\n\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeightFromDensity;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns null or undefined.\n          baseRowHeight = rowHeightFromUser != null ? rowHeightFromUser : rowHeightFromDensity;\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n\n      const existingBaseSizes = Object.entries(sizes).reduce((acc, [key, size]) => {\n        if (/^base[A-Z]/.test(key)) {\n          acc[key] = size;\n        }\n\n        return acc;\n      }, {}); // We use an object to make simple to check if a height is already added or not\n\n      const initialHeights = _extends({}, existingBaseSizes, {\n        baseCenter: baseRowHeight\n      });\n\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      Object.entries(processedSizes).forEach(([size, value]) => {\n        if (/^base[A-Z]/.test(size)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      });\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeightFromDensity, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeightFromDensity;\n  }, [rowHeightFromDensity]);\n\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    } // Only trigger hydration if the value is different, otherwise we trigger a loop\n\n\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeightFromDensity, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getLastMeasuredRowIndex: getLastMeasuredRowIndex,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_rowHasAutoHeight: rowHasAutoHeight,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridColumnGroupingPreProcessors } from '../hooks/features/columnGrouping/useGridColumnGroupingPreProcessors';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridColumnGroupingPreProcessors(apiRef, props);\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { unwrapGroupingColumnModel, hasGroupPath } from './useGridColumnGrouping';\nexport const useGridColumnGroupingPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const addHeaderGroups = React.useCallback(columnsState => {\n    var _props$experimentalFe;\n\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return columnsState;\n    }\n\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    columnsState.all.forEach(field => {\n      var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n\n      const newGroupPath = (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n      const lookupElement = columnsState.lookup[field];\n\n      if (hasGroupPath(lookupElement) && isDeepEqual(newGroupPath, lookupElement == null ? void 0 : lookupElement.groupPath)) {\n        // Avoid modifying the pointer to allow shadow comparison in https://github.com/mui/mui-x/blob/f90afbf10a1264ee8b453d7549dd7cdd6110a4ed/packages/grid/x-data-grid/src/hooks/features/columns/gridColumnsUtils.ts#L446:L453\n        return;\n      }\n\n      columnsState.lookup[field] = _extends({}, columnsState.lookup[field], {\n        groupPath: (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod2 : []\n      });\n    });\n    return columnsState;\n  }, [props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', addHeaderGroups);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n\n    let width = column.computedWidth;\n\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  var _rootProps$experiment;\n\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    colSpan,\n    disableDragEvents,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n\n  };\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n\n  const renderChildren = () => {\n    if (children == null) {\n      const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n      return /*#__PURE__*/_jsx(\"div\", {\n        title: valueString,\n        className: classes.content,\n        children: valueString\n      });\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n\n    return children;\n  };\n\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  disableDragEvents: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.any,\n  hasFocus: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridSkeletonCell(props) {\n  const {\n    align,\n    width,\n    contentWidth\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n\n  if (!counter) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n    hideMenu,\n    open,\n    id,\n    labelledby,\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SortGridMenuItems(props) {\n  var _column$sortingOrder;\n\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes(null) ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }) : null, sortingOrder.includes('asc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }) : null, sortingOrder.includes('desc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    }) : null]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n    className,\n    rowCount,\n    visibleRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  if (rowCount === 0) {\n    return null;\n  }\n\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n    className,\n    selectedRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 4,\n  // should be above pinned columns, pinned rows and detail panel\n  width: '100%',\n  height: '100%',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n}));\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n      backIconButtonProps,\n      count,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const theme = useTheme();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\n\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !SelectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\n\nfunction GridPanelContent(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nfunction GridPanelFooter(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\n\nconst isEnabled = () => true;\n\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n    className,\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TrapFocus, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root)\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  })\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"linkOperators\", \"columnsSort\", \"deleteIconProps\", \"linkOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n      _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n\n  const {\n    InputComponentProps\n  } = valueInputProps,\n        valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLinkOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  linkOperatorInputProps: PropTypes.any,\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n\n  const {\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    filterFormProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n\n    if (!defaultItem) {\n      return;\n    }\n\n    apiRef.current.upsertFilterItems([...items, defaultItem]);\n  };\n\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {})\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\n\nfunction GridPanelHeader(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\n\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\n\nfunction GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n      const newModel = _extends({}, currentModel);\n\n      columns.forEach(col => {\n        if (col.hideable) {\n          if (isVisible) {\n            // delete the key from the model instead of setting it to `true`\n            delete newModel[col.field];\n          } else {\n            newModel[col.field] = false;\n          }\n        }\n      });\n      return apiRef.current.setColumnVisibilityModel(newModel);\n    } // TODO v6: Remove\n\n\n    return apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return sortedColumns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return sortedColumns.filter(column => searchPredicate(column, searchValueToCheck));\n  }, [sortedColumns, searchValue, searchPredicate]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocusSearchField: PropTypes.bool,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  }),\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n\n  if (!anchorEl) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n      _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    position,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n\n      if (!isBaseHeight) {\n        return acc;\n      }\n\n      numberOfBaseSizes += 1;\n\n      if (size > acc) {\n        return size;\n      }\n\n      return acc;\n    }, 0);\n\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n    sortingOrder\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"error\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n    error\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: (error == null ? void 0 : error.message) || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridSkeletonCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton, GridSearchIcon } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  disableIgnoreModificationsIfProcessingProps: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(([key, defaultComponent]) => {\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n    className,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\n\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n\n  while (index < positions.length && positions[index] < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\n\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\n\nconst areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.unstable_getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    } // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n\n    const {\n      top,\n      left\n    } = scrollPosition.current; // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.unstable_rowHasAutoHeight(row.id);\n    }\n\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(left, columnPositions);\n      lastColumnIndex = binarySearch(left + containerDimensions.width, columnPositions);\n    }\n\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(params => {\n    setContainerDimensions({\n      width: params.width,\n      height: params.height\n    });\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n\n    setRenderContext(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContext, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, updateRenderContext]);\n\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n\n  const getRows = (params = {\n    renderContext\n  }) => {\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5, _rootProps$components;\n\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.unstable_rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n\n      rows.push( /*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: baseRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: rowIndexOffset + ((currentPage == null ? void 0 : (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n\n    return rows;\n  };\n\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth > containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n\n  const rootStyle = {};\n\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n\n  if (rootProps.autoHeight) {\n    rootStyle.overflowY = 'hidden';\n  }\n\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (_ref = {}) => {\n      let {\n        style = {}\n      } = _ref,\n          other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: ({\n      style = {}\n    } = {}) => ({\n      style: _extends({}, style, contentSize)\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n    className,\n    disableVirtualization\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\n\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n\n  if (!iconElement) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\n\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(({\n  theme\n}) => ({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n    height,\n    side = GridColumnHeaderSeparatorSides.Right\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\n\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"disableHeaderSeparator\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n    classes,\n    columnMenuOpen,\n    colIndex,\n    height,\n    isResizing,\n    sortDirection,\n    hasFocus,\n    tabIndex,\n    separatorSide,\n    isDraggable,\n    headerComponent,\n    description,\n    width,\n    columnMenuIconButton = null,\n    columnMenu = null,\n    columnTitleIconButtons = null,\n    headerClassName,\n    label,\n    resizable,\n    draggableContainerProps,\n    columnHeaderSeparatorProps,\n    disableHeaderSeparator\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), !disableHeaderSeparator && /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _rootProps$components, _column$sortingOrder, _rootProps$components2, _column$headerName;\n\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder, [rootProps.disableColumnReorder, disableReorder, column.disableReorder]);\n  let headerComponent;\n\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: column.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.components.ColumnMenu,\n    contentComponentProps: (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnMenu,\n    onExited: handleExited\n  });\n\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  const label = (_column$headerName = column.headerName) != null ? _column$headerName : column.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: column.description,\n    elementId: column.field,\n    width: column.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!column.resizable,\n    \"data-field\": column.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId' + ''];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showRightBorder,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'withBorder', showColumnBorder && 'columnHeader--showColumnBorder', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnGroupHeader(props) {\n  var _apiRef$current$getRo, _columnGroupsLookup$g;\n\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    isLastColumn,\n    extendRowFullWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = {\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  };\n\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n  const showColumnBorder = rootProps.showColumnRightBorder;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, {\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: -1,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    disableHeaderSeparator: true\n  });\n}\n\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector, gridDensityHeaderGroupingMaxDepthSelector, gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { isDeepEqual } from '../../../utils/utils'; // TODO: add the possibility to switch this value if needed for customization\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MERGE_EMPTY_CELLS = true;\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll); // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      children: columns\n    });\n  };\n\n  const getParents = (path = [], depth) => path.slice(0, depth + 1);\n\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      maxLastColumn\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _visibleColumns$first, _visibleColumns$first2, _visibleColumns$first3;\n\n      // Initialize the header line with a grouping item containing all the columns on the left of the virtualization which are in the same group as the first group to render\n      const initialHeader = [];\n      let leftOverflow = 0;\n      let columnIndex = firstColumnToRender - 1;\n      const firstColumnToRenderGroup = (_visibleColumns$first = visibleColumns[firstColumnToRender]) == null ? void 0 : (_visibleColumns$first2 = _visibleColumns$first.groupPath) == null ? void 0 : _visibleColumns$first2[depth]; // The array of parent is used to manage empty grouping cell\n      // When two empty grouping cell are next to each other, we merge them if the belong to the same group.\n\n      const firstColumnToRenderGroupParents = getParents((_visibleColumns$first3 = visibleColumns[firstColumnToRender]) == null ? void 0 : _visibleColumns$first3.groupPath, depth);\n\n      while (firstColumnToRenderGroup !== null && columnIndex >= minColumnIndex && (_visibleColumns$colum = visibleColumns[columnIndex]) != null && _visibleColumns$colum.groupPath && isDeepEqual(getParents((_visibleColumns$colum2 = visibleColumns[columnIndex]) == null ? void 0 : _visibleColumns$colum2.groupPath, depth), firstColumnToRenderGroupParents)) {\n        var _visibleColumns$colum, _visibleColumns$colum2, _column$computedWidth;\n\n        const column = visibleColumns[columnIndex];\n        leftOverflow += (_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0;\n\n        if (initialHeader.length === 0) {\n          var _column$computedWidth2;\n\n          initialHeader.push({\n            width: (_column$computedWidth2 = column.computedWidth) != null ? _column$computedWidth2 : 0,\n            fields: [column.field],\n            groupId: firstColumnToRenderGroup,\n            groupParents: firstColumnToRenderGroupParents,\n            colIndex: columnIndex\n          });\n        } else {\n          var _column$computedWidth3;\n\n          initialHeader[0].width += (_column$computedWidth3 = column.computedWidth) != null ? _column$computedWidth3 : 0;\n          initialHeader[0].fields.push(column.field);\n          initialHeader[0].colIndex = columnIndex;\n        }\n\n        columnIndex -= 1;\n      }\n\n      const depthInfo = renderedColumns.reduce((aggregated, column, i) => {\n        var _column$computedWidth7;\n\n        const lastItem = aggregated[aggregated.length - 1];\n\n        if (column.groupPath && column.groupPath.length > depth) {\n          var _column$computedWidth5;\n\n          if (lastItem && lastItem.groupId === column.groupPath[depth]) {\n            var _column$computedWidth4;\n\n            // Merge with the previous columns\n            return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n              width: lastItem.width + ((_column$computedWidth4 = column.computedWidth) != null ? _column$computedWidth4 : 0),\n              fields: [...lastItem.fields, column.field]\n            })];\n          } // Create a new grouping\n\n\n          return [...aggregated, {\n            groupId: column.groupPath[depth],\n            groupParents: getParents(column.groupPath, depth),\n            width: (_column$computedWidth5 = column.computedWidth) != null ? _column$computedWidth5 : 0,\n            fields: [column.field],\n            colIndex: firstColumnToRender + i\n          }];\n        }\n\n        if (MERGE_EMPTY_CELLS && lastItem && lastItem.groupId === null && isDeepEqual(getParents(column.groupPath, depth), lastItem.groupParents)) {\n          var _column$computedWidth6;\n\n          // We merge with previous column\n          return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n            width: lastItem.width + ((_column$computedWidth6 = column.computedWidth) != null ? _column$computedWidth6 : 0),\n            fields: [...lastItem.fields, column.field]\n          })];\n        } // We create new empty cell\n\n\n        return [...aggregated, {\n          groupId: null,\n          groupParents: getParents(column.groupPath, depth),\n          width: (_column$computedWidth7 = column.computedWidth) != null ? _column$computedWidth7 : 0,\n          fields: [column.field],\n          colIndex: firstColumnToRender + i\n        }];\n      }, initialHeader);\n      columnIndex = lastColumnToRender;\n      const lastColumnToRenderGroup = depthInfo[depthInfo.length - 1].groupId;\n\n      while (lastColumnToRenderGroup !== null && columnIndex < maxLastColumn && (_visibleColumns$colum3 = visibleColumns[columnIndex]) != null && _visibleColumns$colum3.groupPath && ((_visibleColumns$colum4 = visibleColumns[columnIndex]) == null ? void 0 : (_visibleColumns$colum5 = _visibleColumns$colum4.groupPath) == null ? void 0 : _visibleColumns$colum5[depth]) === lastColumnToRenderGroup) {\n        var _visibleColumns$colum3, _visibleColumns$colum4, _visibleColumns$colum5, _column$computedWidth8;\n\n        const column = visibleColumns[columnIndex];\n        depthInfo[depthInfo.length - 1].width += (_column$computedWidth8 = column.computedWidth) != null ? _column$computedWidth8 : 0;\n        depthInfo[depthInfo.length - 1].fields.push(column.field);\n        columnIndex += 1;\n      }\n\n      headerToRender.push({\n        leftOverflow,\n        elements: [...depthInfo]\n      });\n    }\n\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n            maxDepth: headerToRender.length,\n            height: headerHeight\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n  const {\n    isDragging,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, modification to a cell will not be discarded if the mode is changed from \"edit\" to \"view\" while processing props.\n   * @default false\n   */\n  disableIgnoreModificationsIfProcessingProps: PropTypes.bool,\n\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    columnGrouping: PropTypes.bool,\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n\n    return null;\n  },\n\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridBooleanCellRaw = props => {\n  const {\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    field,\n    className,\n    hasFocus,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    select: true,\n    variant: \"standard\",\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\n\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\n\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const valueAsBoolean = filterItem.value === 'true';\n    return ({\n      value\n    }) => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    field,\n    id,\n    value: isChecked,\n    rowNode,\n    hasFocus,\n    tabIndex\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n\n  if (rowNode.position === 'footer') {\n    return null;\n  }\n\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n\n  if (rowNode.isPinned) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment3;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    field,\n    colDef,\n    hasFocus,\n    debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n    isProcessingProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    var _rootProps$experiment2;\n\n    const newValue = event.target.value;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n\n    if (column.valueParser && (_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange, (_rootProps$experiment3 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment3.newEditingApi]);\n  const meta = apiRef.current.unstable_getEditCellMeta ? apiRef.current.unstable_getEditCellMeta(id, field) : {};\n  React.useEffect(() => {\n    if (meta.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta.changeReason, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object,\n  debounceMs: PropTypes.number,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]),\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\n\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridFilterInputMultipleValue(props) {\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\n\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\n\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\n\nexport { GridRootPropsContext };","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n\n  if (colCount === 0) {\n    return 0;\n  }\n\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\n\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n\n    if (!item.columnField) {\n      return false;\n    }\n\n    const column = columnLookup[item.columnField];\n\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n\n    if (!filterOperator) {\n      return false;\n    }\n\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue;\n\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\n\nexport { GridPreferencePanelsValue };","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);\n/**\n * @ignore - do not document.\n */\n\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsSelector = createSelector(gridAdditionalRowGroupsSelector, additionalRowGroups => additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  return ((pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\n\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n\n  if (!column) {\n    return null;\n  }\n\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n\n  if (comparatorList.length === 0) {\n    return null;\n  }\n\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n\n  return sortingOrder[currentIdx + 1];\n};\n\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n\n  return null;\n};\n\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  return 0;\n};","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n\n  return apiRef;\n}","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n\n  return contextValue;\n};","import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = cacheKey => {\n  if (typeof cacheKey !== 'undefined') {\n    if (cacheContainer.cache && cacheContainer.cache[cacheKey]) {\n      delete cacheContainer.cache[cacheKey];\n    }\n  } else {\n    cacheContainer.cache = null;\n  }\n};","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace'; // Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// We need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\n\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && event.ctrlKey === false && event.metaKey === false;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n} // Pseudo random number. See https://stackoverflow.com/a/47593316\n\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n\n  return JSON.parse(JSON.stringify(obj));\n}","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","import React, { useCallback, useContext, useRef, useState } from \"react\"\nimport { CitationStyle } from \"../types\"\nimport { styled as MUIStyled } from \"@mui/material/styles\"\nimport {\n  Alert,\n  Box,\n  Button,\n  ButtonGroup,\n  createTheme,\n  Modal,\n  Stack,\n  Typography,\n} from \"@mui/material\"\nimport { Spinner } from \"./editor/Spinner\"\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\"\nimport { convertBibTexToCSL } from \"./utilities/citation_generator\"\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\"\nimport { referenceColumns } from \"./manger/ReferencesTable\"\nimport themes from \"../themes\"\nimport { ThemeProvider } from \"@emotion/react\"\nimport { DBContext } from \"../provider/DBProvider\"\nimport { TCitation } from \"../db/types\"\n\nconst importStyle = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n}\n\nconst FileImport: React.FC<{\n  style?: CitationStyle\n  xml?: string\n  accept: string\n  button: React.ReactChild\n}> = ({ style, xml, accept, button }) => {\n  const [citations, setCitations] = useState<TCitation[]>([])\n  const [selectedCitations, setSelectedCitations] = useState<string[]>([])\n\n  const [open, setOpen] = useState(false)\n  const [uploadError, setUploadError] = useState<string | undefined>(undefined)\n  const [uploadProgress, setUploadProgress] = useState(0)\n\n  const uploadRef = useRef<HTMLInputElement>()\n\n  const setSelectedCitationsId = useCallback(\n    (citations: string[]) => setSelectedCitations(citations),\n    [],\n  )\n\n  const updateCitations = useCallback(\n    (citations: TCitation[]) => setCitations(citations),\n    [],\n  )\n\n  const handleClose = useCallback(async () => {\n    setOpen(false)\n    if (uploadRef.current) uploadRef.current.value = \"\"\n  }, [setOpen])\n\n  const onFileUpload = useCallback((event) => {\n    try {\n      setOpen(true)\n\n      const file = event.target.files[0]\n\n      if (file.size > 25431761) {\n        setUploadError(\"File size is more than allowed space\")\n        return\n      }\n\n      const fileReader = new FileReader()\n      fileReader.onloadend = async () => {\n        const citations = convertBibTexToCSL(fileReader.result as string)\n        setCitations(citations)\n      }\n\n      fileReader.onprogress = (e) =>\n        setUploadProgress(Math.round((e.loaded * 100) / e.total))\n\n      fileReader.onerror = () => setUploadError(\"Upload file error, try again\")\n\n      fileReader.readAsText(file)\n    } catch (e) {\n      setUploadError(\"Upload file error, try again\")\n    }\n  }, [])\n\n  const { citationDao } = useContext(DBContext)\n\n  const onAddCitation = useCallback(\n    (e) => {\n      const citation = citations.find((c) => c.id === e.currentTarget.value)\n      if (citation) {\n        citationDao.add(citation)\n        updateCitations(citations.filter((c) => c.id !== e.currentTarget.value))\n        setSelectedCitations(selectedCitations.filter((c) => c !== citation.id))\n      }\n    },\n    [citations, selectedCitations],\n  )\n\n  return (\n    <>\n      <label htmlFor=\"contained-button-file\">\n        <Input\n          // @ts-ignore\n          ref={uploadRef}\n          onChange={onFileUpload}\n          accept={accept}\n          id=\"contained-button-file\"\n          multiple\n          type=\"file\"\n        />\n        {button}\n      </label>\n\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={{ ...importStyle, width: \"50%\", height: \"50%\" }}>\n          {uploadProgress > 0 && uploadProgress > 100 && <Spinner />}\n\n          {uploadError && <Alert severity=\"error\">{uploadError}</Alert>}\n\n          <Toolbar\n            selectedCitations={selectedCitations}\n            citations={citations}\n            close={handleClose}\n          />\n\n          {(style && <></>) || (\n            <CitationDataView\n              setSelectedCitations={setSelectedCitationsId}\n              onAddCitation={onAddCitation}\n              citations={citations}\n            />\n          )}\n        </Box>\n      </Modal>\n    </>\n  )\n}\n\nconst Input = MUIStyled(\"input\")({\n  display: \"none\",\n})\n\nconst DataGridTheme = createTheme({\n  ...themes,\n  components: {\n    //@ts-ignore\n    MuiDataGrid: {\n      styleOverrides: {\n        \"& .MuiCheckbox-root.Mui-checked:not(.MuiCheckbox-indeterminate) svg\": {\n          backgroundColor: \"#1890ff\",\n          borderColor: \"#1890ff\",\n        },\n      },\n    },\n  },\n})\n\nexport const CitationDataView: React.FC<{\n  setSelectedCitations: (citations: string[]) => void\n  onAddCitation: (e: React.MouseEvent) => void\n  citations: TCitation[]\n}> = ({ setSelectedCitations, onAddCitation, citations }) => {\n  if (!citations.length) {\n    return <></>\n  }\n\n  const viewColumns: GridColDef[] = [\n    {\n      field: \"actions\",\n      type: \"actions\",\n      sortable: false,\n      width: 80,\n      headerAlign: \"right\",\n      align: \"right\",\n      renderCell: (params) => (\n        <Stack direction=\"row\">\n          <Button\n            value={params.id}\n            onClick={onAddCitation}\n            startIcon={<AddCircleIcon />}\n            size=\"small\"\n          >\n            Add\n          </Button>\n        </Stack>\n      ),\n    },\n    ...referenceColumns,\n  ]\n\n  return (\n    <>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <ThemeProvider theme={DataGridTheme}>\n          <DataGrid\n            columns={viewColumns}\n            rows={citations}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n            checkboxSelection\n            // @ts-ignore\n            onSelectionModelChange={setSelectedCitations}\n          />\n        </ThemeProvider>\n      </div>\n    </>\n  )\n}\n\nconst Toolbar: React.FC<{\n  selectedCitations: string[]\n  citations: TCitation[]\n  close: () => void\n}> = ({ selectedCitations, citations, close }) => {\n  const { citationDao } = useContext(DBContext)\n\n  const handleImportAll = useCallback(() => {\n    citationDao.bulkAdd(citations)\n    close()\n  }, [citations])\n\n  const importSelectedCitation = useCallback(() => {\n    const selectedItems = citations.filter((c) => selectedCitations.includes(c.id))\n    citationDao.bulkAdd(selectedItems)\n    close()\n  }, [citations, selectedCitations])\n\n  if (!citations.length) {\n    return <></>\n  }\n\n  return (\n    <Stack\n      justifyContent=\"space-between\"\n      p={1}\n      bgcolor=\"primary.main\"\n      direction=\"row\"\n    >\n      <Typography alignSelf=\"center\" variant=\"subtitle1\" textAlign=\"center\">\n        {`${citations.length} Item Uploaded`}\n      </Typography>\n      <ButtonGroup color=\"secondary\">\n        <Button onClick={handleImportAll}>Import All</Button>\n        <Button\n          onClick={importSelectedCitation}\n          disabled={!selectedCitations.length}\n        >\n          Import Selected Item\n        </Button>\n      </ButtonGroup>\n    </Stack>\n  )\n}\n\nexport default FileImport\n","import React, { useCallback, useContext, useState } from \"react\"\nimport { Button, Container, Stack, styled } from \"@mui/material\"\nimport NoteAddIcon from \"@mui/icons-material/NoteAdd\"\nimport AllInboxIcon from \"@mui/icons-material/AllInbox\"\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\"\n\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\n\nimport UserProjects from \"./Project\"\n\nconst Collection: React.FC = () => {\n  const { group, setGroup, updateSelectionModel } = useContext(ManagerContext)\n\n  const onSelectListItem = useCallback((e) => {\n    setGroup({ id: e.currentTarget.value, label: e.currentTarget.innerText })\n    updateSelectionModel([])\n  }, [])\n\n  const [newProject, setShowNew] = useState(false)\n\n  const onCreateProjectClick = useCallback(() => {\n    setShowNew(true)\n  }, [])\n\n  return (\n    <Container\n      disableGutters\n      maxWidth={false}\n      sx={{ bgcolor: \"white\", height: \"100%\", borderRadius: \"10px\" }}\n    >\n      <Stack bgcolor=\"#817589\" borderRadius=\"10px 10px 0 0\">\n        <Button\n          color=\"primary\"\n          startIcon={<NoteAddIcon />}\n          onClick={onCreateProjectClick}\n        >\n          Create Project\n        </Button>\n      </Stack>\n\n      <Stack py={3} spacing={1}>\n        <CollectionButton\n          value=\"all\"\n          onClick={onSelectListItem}\n          disabled={group.id === \"all\"}\n          startIcon={<AllInboxIcon />}\n        >\n          All References\n        </CollectionButton>\n        <CollectionButton\n          value=\"favorites\"\n          disabled={group.id === \"favorites\"}\n          onClick={onSelectListItem}\n          startIcon={<StarBorderIcon />}\n        >\n          Favorites\n        </CollectionButton>\n      </Stack>\n\n      <UserProjects newProject={newProject} setShowNew={setShowNew} />\n    </Container>\n  )\n}\n\nexport const CollectionButton = styled(Button)(() => ({\n  borderRadius: 0,\n  justifyContent: \"start\",\n  paddingLeft: \"24px\",\n  \"&:hover\": {\n    background: \"#E6DAEA\",\n  },\n  \"&.Mui-disabled\": {\n    background: \"#E6DAEA\",\n    color: \"#37293C\",\n    borderLeft: \"5px solid #37293C\",\n  },\n}))\n\nexport default Collection\n","import React, { useCallback, useContext, useMemo, useState } from \"react\"\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Modal,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\"\nimport DoneIcon from \"@mui/icons-material/Done\"\nimport CloseIcon from \"@mui/icons-material/Close\"\nimport { v4 as uuid } from \"uuid\"\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport { EmptyProject } from \"../../placeholders\"\nimport { CollectionButton } from \"./Collection\"\nimport { useGridApiContext } from \"@mui/x-data-grid\"\nimport { TProject } from \"../../db/types\"\n\nconst importStyle = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  width: \"30%\",\n  height: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  overflowY: \"scroll\",\n}\n\nexport const AddCitationsToProject: React.FC = () => {\n  const { projectDao } = useContext(DBContext)\n  const { group } = useContext(ManagerContext)\n\n  const projects = projectDao.getProjects(group.id)\n\n  const projectMap = useMemo(\n    () => new Map(projects.map(({ id, citations }) => [id, citations])),\n    [projects],\n  )\n\n  const [projectsSet, setProjectsSet] = useState(new Set<string>())\n\n  const setProject = useCallback(\n    (e) => {\n      const id = e.currentTarget.id\n\n      if (projectsSet.has(id)) {\n        projectsSet.delete(id)\n      } else {\n        projectsSet.add(id)\n      }\n\n      setProjectsSet(new Set(projectsSet))\n    },\n    [projectsSet],\n  )\n\n  const {\n    current: {\n      state: { selection },\n    },\n  } = useGridApiContext()\n\n  const onAddClick = useCallback(() => {\n    projectsSet.forEach((projectId) => {\n      /** Project citations list without duplication */\n      const citations = Array.from(\n        new Set([...(projectMap.get(projectId) || []), ...(selection as string[])]),\n      )\n      projectDao.edit(projectId, { citations } as TProject)\n    })\n    handleClose()\n  }, [projectsSet, selection, projectMap])\n\n  const [open, setOpen] = useState(false)\n\n  const handleShow = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  return (\n    <>\n      <Button size=\"small\" onClick={handleShow}>\n        Projects\n      </Button>\n      <Modal open={open} onClose={handleClose}>\n        <Box\n          sx={{\n            ...importStyle,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Stack p={1} spacing={1} justifyContent=\"space-between\">\n            <Stack direction=\"row\" justifyContent=\"space-between\">\n              <Typography variant=\"subtitle1\">Select Projects</Typography>\n              <Button onClick={onAddClick}>Add</Button>\n            </Stack>\n            <Divider />\n          </Stack>\n\n          <Grid container justifyContent=\"space-between\" flex={1}>\n            <List sx={{ bgcolor: \"background.paper\" }}>\n              {projects.map(({ id, name }) => (\n                <ListItem key={id}>\n                  <ListItemButton id={id} onClick={setProject} dense>\n                    <ListItemIcon>\n                      <Checkbox\n                        edge=\"start\"\n                        color=\"secondary\"\n                        checked={projectsSet.has(id)}\n                        tabIndex={-1}\n                        disableRipple\n                      />\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n\n            <Stack\n              alignSelf=\"end\"\n              p={1}\n              direction=\"row\"\n              justifyContent=\"space-between\"\n            >\n              <Typography variant=\"caption\">\n                {projectsSet.size} Projects Selected\n              </Typography>\n            </Stack>\n          </Grid>\n        </Box>\n      </Modal>\n    </>\n  )\n}\n\nconst ProjectTextFiled: React.FC<{\n  id?: string\n  value?: string\n  edit: (e: React.MouseEvent<HTMLElement>) => void\n  close: () => void\n}> = ({ id, value, edit, close }) => (\n  <TextField\n    sx={{ p: 2 }}\n    size=\"small\"\n    placeholder=\"Your Project Name\"\n    defaultValue={value}\n    InputProps={{\n      endAdornment: (\n        <>\n          <IconButton size=\"small\" id={id} value={id && \"edit\"} onClick={edit}>\n            <DoneIcon />\n          </IconButton>\n          <IconButton size=\"small\" onClick={close}>\n            <CloseIcon />\n          </IconButton>\n        </>\n      ),\n    }}\n  />\n)\n\n/**\n * Show Project created by user\n */\nconst UserProjects: React.FC<{\n  newProject: boolean\n  setShowNew: (show: boolean) => void\n}> = ({ newProject, setShowNew }) => {\n  const { group, setGroup, updateSelectionModel } = useContext(ManagerContext)\n  const { projectDao } = useContext(DBContext)\n\n  const projects = projectDao.getList()\n\n  const [projectId, setProjectId] = useState()\n\n  const onSelectListItem = useCallback((e) => {\n    setGroup({ id: e.currentTarget.value, label: e.currentTarget.innerText })\n    updateSelectionModel([])\n  }, [])\n\n  const closeEdit = useCallback(() => {\n    setShowNew(false)\n    setProjectId(undefined)\n  }, [])\n\n  const onSaveClick = useCallback(async (e) => {\n    const projectName = e.currentTarget.parentNode.querySelector(\"input\").value\n    if (projectName) {\n      if (e.currentTarget.value === \"edit\") {\n        const id = e.currentTarget.id\n        await projectDao.edit(id, {\n          id: id,\n          name: projectName,\n        } as TProject)\n      } else {\n        await projectDao.add({ id: uuid(), name: projectName, citations: [] })\n      }\n      closeEdit()\n    }\n  }, [])\n\n  const onDeleteProjectClick = useCallback((e) => {\n    projectDao.delete(e.currentTarget.value)\n    setGroup({ id: \"all\", label: \"All References\" })\n  }, [])\n\n  const onEditClick = useCallback((e) => {\n    setProjectId(e.currentTarget.value)\n  }, [])\n\n  return (\n    <Stack py={3} spacing={1} alignItems={(!projects.length && \"center\") || \"unset\"}>\n      {(projects.length && (\n        <Stack>\n          {projects.map(({ id, name }) => (\n            <Stack py={0.5} direction=\"row\" justifyContent=\"space-between\" key={id}>\n              {(id === projectId && (\n                <ProjectTextFiled\n                  id={id}\n                  value={name}\n                  edit={onSaveClick}\n                  close={closeEdit}\n                />\n              )) || (\n                <>\n                  <CollectionButton\n                    sx={{ flex: 1 }}\n                    key={id}\n                    value={id}\n                    onClick={onSelectListItem}\n                    disabled={group.id === id}\n                    startIcon={<LibraryBooksIcon fontSize=\"small\" />}\n                  >\n                    {name}\n                  </CollectionButton>\n                  <Stack direction=\"row\">\n                    <IconButton size=\"small\" value={id} onClick={onEditClick}>\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      value={id}\n                      onClick={onDeleteProjectClick}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Stack>\n                </>\n              )}\n            </Stack>\n          ))}\n        </Stack>\n      )) ||\n        (!newProject && (\n          <>\n            <EmptyProject />\n            <Typography variant=\"caption\" textAlign=\"center\" px={2}>\n              Click on Create Project button to group your references in a project\n            </Typography>\n          </>\n        ))}\n      {newProject && <ProjectTextFiled edit={onSaveClick} close={closeEdit} />}\n    </Stack>\n  )\n}\n\nexport default UserProjects\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport { capitalize } from '@mui/material/utils';\nimport { gridColumnLookupSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridFilterActiveItemsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const {\n    componentsProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonProps = componentsProps.button || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n\n    const getOperatorLabel = item => lookup[item.columnField].filterOperators.find(operator => operator.value === item.operatorValue).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operatorValue)}`).toString();\n\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.columnField].filterOperators.find(operator => operator.value === item.operatorValue);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.columnField] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.columnField].headerName || item.columnField}\n                  ${getOperatorLabel(item)}\n                  ${item.value ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, preferencePanel.open, activeFilters, lookup, classes]);\n\n  const toggleFilter = event => {\n    var _buttonProps$onClick;\n\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    (_buttonProps$onClick = buttonProps.onClick) == null ? void 0 : _buttonProps$onClick.call(buttonProps, event);\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: ref,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.components.OpenFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import React, { useCallback, useContext } from \"react\"\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport { GridToolbarFilterButton, useGridApiContext } from \"@mui/x-data-grid\"\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { export_citations } from \"../utilities/citation_exporter\"\nimport { Button, ButtonGroup, Stack, Typography } from \"@mui/material\"\n\nimport { AddCitationsToProject } from \"./Project\"\nimport styled from \"@emotion/styled\"\nimport { TProject } from \"../../db/types\"\nimport { MicrosoftWordIcon } from \"../../icons\"\nimport { exportToWord } from \"../../utile/jsonCSL-openXml\"\nimport FormatQuoteIcon from \"@mui/icons-material/FormatQuote\"\n\nimport { navigate } from \"gatsby\"\n\nconst ListToolbar: React.FC = () => {\n  const { group } = useContext(ManagerContext)\n\n  const {\n    current: { state },\n  } = useGridApiContext()\n  const { selection } = state\n\n  const { citationDao, projectDao } = useContext(DBContext)\n\n  const onDeleteClick = useCallback(async () => {\n    await citationDao.bulkDelete(selection as string[])\n  }, [selection])\n\n  const onExportToWord = useCallback(async () => {\n    const references = await citationDao.bulkGet(selection as string[])\n    exportToWord(references)\n  }, [selection])\n\n  const onExportClick = useCallback(\n    async (e) => {\n      const format = e.currentTarget.value\n      const references = await citationDao.bulkGet(selection as string[])\n      // TODO:: import a runtime\n      require(\"@citation-js/plugin-bibtex\")\n      require(\"@citation-js/plugin-ris\")\n      export_citations(references, format, \"untitled\")\n    },\n    [selection],\n  )\n\n  const isProjectSelected = group.id !== \"all\" && group.id !== \"favorites\"\n\n  const onBibliographyListClick = useCallback(async () => {\n    const citations = await citationDao.bulkGet(selection as string[])\n\n    return navigate(\"/citationsList\", {\n      state: {\n        citations,\n        style: \"apa\",\n        citationDocument: \"article-journal\",\n      },\n    })\n  }, [selection])\n\n  const onRemoveProjectCitation = useCallback(() => {\n    const citations = state.rows.ids.filter(\n      (id) => !selection.includes(id),\n    ) as string[]\n\n    projectDao.edit(group.id, {\n      citations,\n    } as TProject)\n  }, [selection, state.rows.ids])\n\n  return (\n    <Stack bgcolor=\"#F4F3F5\" borderRadius=\"10px 10px 0 0\" p={1}>\n      <Stack justifyContent=\"space-between\" direction=\"row\" py={1}>\n        <Label>{group.label}</Label>\n        <Stack direction=\"row\">\n          {/*  TODO:: implement full text search */}\n          {/*<Button color=\"secondary\" size=\"small\" startIcon={<SearchIcon />}>*/}\n          {/*  Search*/}\n          {/*</Button>*/}\n\n          {/* @ts-ignore */}\n          <GridToolbarFilterButton\n            sx={{\n              color: \"secondary.dark\",\n              \"& .MuiBadge-badge\": { backgroundColor: \"primary.dark\" },\n            }}\n          />\n        </Stack>\n      </Stack>\n\n      <Stack>\n        {!!selection.length && (\n          <Stack direction=\"row\" justifyContent=\"space-between\" p={1}>\n            <Stack direction=\"row\" spacing={2}>\n              <Stack alignItems=\"center\">\n                <ButtonGroup color=\"secondary\">\n                  <Button size=\"small\" value=\"bibtex\" onClick={onExportClick}>\n                    BibTex .bib\n                  </Button>\n                  <Button size=\"small\" value=\"ris\" onClick={onExportClick}>\n                    Ris .ris\n                  </Button>\n                  {/* TODO:: add word doc xml  */}\n                </ButtonGroup>\n                <Typography variant=\"caption\" align=\"center\" p={1}>\n                  Export Selected References\n                </Typography>\n              </Stack>\n\n              <Stack alignItems=\"center\">\n                <ButtonGroup color=\"secondary\">\n                  <AddCitationsToProject />\n                </ButtonGroup>\n                <Typography variant=\"caption\" align=\"center\" p={1}>\n                  Add Selected References\n                </Typography>\n              </Stack>\n\n              <Stack alignItems=\"center\">\n                <Button\n                  startIcon={<MicrosoftWordIcon />}\n                  size=\"small\"\n                  variant=\"text\"\n                  color=\"secondary\"\n                  onClick={onExportToWord}\n                >\n                  export to word .xml\n                </Button>\n                <Typography variant=\"caption\" align=\"center\" p={1}>\n                  Import your citation to Microsoft Word\n                </Typography>\n              </Stack>\n            </Stack>\n\n            <Stack justifyContent=\"center\">\n              <Stack direction=\"row\">\n                <Button\n                  size=\"small\"\n                  color=\"secondary\"\n                  startIcon={<FormatQuoteIcon />}\n                  onClick={onBibliographyListClick}\n                >\n                  Bibliography List\n                </Button>\n                <Button onClick={onDeleteClick} color=\"secondary\" size=\"small\">\n                  Delete\n                </Button>\n                {isProjectSelected && (\n                  <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={onRemoveProjectCitation}\n                  >\n                    Remove from Project\n                  </Button>\n                )}\n              </Stack>\n            </Stack>\n          </Stack>\n        )}\n      </Stack>\n    </Stack>\n  )\n}\n\nconst Label = styled(\"h4\")`\n  font-family: Noto Sans, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 25px;\n  margin: 0;\n`\n\nexport default ListToolbar\n","import React, { useCallback, useContext, useMemo, useState } from \"react\"\nimport {\n  GridColDef,\n  DataGrid,\n  GRID_CHECKBOX_SELECTION_COL_DEF,\n} from \"@mui/x-data-grid\"\nimport {\n  Container,\n  createTheme,\n  IconButton,\n  Stack,\n  ThemeProvider,\n  Tooltip,\n  Typography,\n} from \"@mui/material\"\nimport StarOutlineIcon from \"@mui/icons-material/StarOutline\"\nimport StarIcon from \"@mui/icons-material/Star\"\nimport PreviewIcon from \"@mui/icons-material/Preview\"\n\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport { PrimaryText } from \"../Typography\"\n\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { User } from \"../../cslTypes/type\"\nimport themes, { dataGrid } from \"../../themes\"\n\nimport { EmptyReferenceList } from \"../../placeholders\"\nimport ListToolbar from \"./ListToolbar\"\n\nexport const referenceColumns: GridColDef[] = [\n  {\n    field: \"issued\",\n    headerName: \"Year\",\n    sortable: false,\n    disableColumnMenu: true,\n    width: 100,\n    valueFormatter: (params) => {\n      const { value } = params\n      return (value && value[\"date-parts\"] && value[\"date-parts\"][0]) || \"--\"\n    },\n  },\n  { field: \"title\", headerName: \"Title\", flex: 2, disableColumnMenu: true },\n  {\n    field: \"author\",\n    headerName: \"Contributors\",\n    flex: 1,\n    disableColumnMenu: true,\n    valueFormatter: (params) => {\n      return (params.value || []).reduce(\n        (prev: string, { family, given }: User) =>\n          (family && `${prev} ${family} ${given}`) || \"--\",\n        \"\",\n      )\n    },\n  },\n]\n\n// TODO:: favorite\nconst columns: GridColDef[] = [\n  {\n    field: \"actions\",\n    type: \"actions\",\n    sortable: false,\n    width: 32,\n    headerAlign: \"right\",\n    align: \"right\",\n    renderCell: (params) => {\n      const { citationDao } = useContext(DBContext)\n      const [favorite, setFavorite] = useState(!!+params.row.favorite)\n\n      const onSelectClick = useCallback(() => {\n        citationDao.edit(params.id as string, {\n          ...params.row,\n          favorite: params.row.favorite === 1 ? 0 : 1,\n        })\n        setFavorite(!favorite)\n      }, [favorite])\n\n      return (\n        <Stack direction=\"row\">\n          <Tooltip title=\"Add this reference to your favorite references\">\n            <IconButton size=\"small\" onClick={onSelectClick}>\n              {(favorite && <StarIcon style={{ fill: \"gold\" }} />) || (\n                <StarOutlineIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      )\n    },\n  },\n  {\n    ...GRID_CHECKBOX_SELECTION_COL_DEF,\n  },\n  ...referenceColumns,\n  {\n    field: \"preview\",\n    type: \"actions\",\n    sortable: false,\n    width: 70,\n    headerName: \"Preview\",\n    renderCell: (params) => {\n      const { setReference } = useContext(ManagerContext)\n      const onPreviewClick = useCallback(() => {\n        setReference(params.row)\n      }, [params])\n\n      return (\n        <Stack direction=\"row\">\n          <Tooltip title=\"Preview Full Reference Data\">\n            <IconButton size=\"small\" onClick={onPreviewClick}>\n              <PreviewIcon />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      )\n    },\n  },\n]\n\nconst DataGridTheme = createTheme({\n  ...themes,\n  ...dataGrid,\n})\n\nconst ReferencesTable: React.FC = () => {\n  const { citationDao } = useContext(DBContext)\n  const { group, selectionModel, updateSelectionModel } = useContext(ManagerContext)\n\n  const [page, setPage] = useState<number>(0)\n  const [pageSize, setPageSize] = useState<number>(10)\n\n  const updatePage = useCallback((page) => setPage(page), [])\n\n  const updatePageSize = useCallback((pageSize) => setPageSize(pageSize), [])\n\n  const count = citationDao.getCitationsCount(group.id)\n\n  const references = citationDao.getCitations({\n    group: group.id,\n    page,\n    pageSize,\n  })\n\n  return (\n    <Container\n      disableGutters\n      maxWidth={false}\n      sx={{ bgcolor: \"white\", height: { xs: \"60vh\", md: \"100%\" } }}\n    >\n      <ThemeProvider theme={DataGridTheme}>\n        <DataGrid\n          components={{ Toolbar: ListToolbar, NoRowsOverlay }}\n          selectionModel={selectionModel}\n          onSelectionModelChange={updateSelectionModel}\n          rows={references}\n          columns={columns}\n          rowCount={count}\n          pagination\n          page={page}\n          pageSize={pageSize}\n          onPageChange={updatePage}\n          onPageSizeChange={updatePageSize}\n          paginationMode=\"server\"\n          rowsPerPageOptions={[10, 5, 25, 50, 100]}\n          checkboxSelection\n        />\n      </ThemeProvider>\n    </Container>\n  )\n}\n\nconst NoRowsOverlay: React.FC = () => {\n  const { group } = useContext(ManagerContext)\n\n  const { label, message } = useMemo(() => {\n    switch (group.id) {\n      case \"all\":\n        return {\n          label: \"Empty Reference List\",\n          message:\n            \"Create new Reference manually or Import references form external sources\",\n        }\n      case \"favorites\":\n        return {\n          label: \"No Reference in Favorites\",\n          message:\n            \"Click on the star button to add a reference to the favorites list\",\n        }\n      default:\n        return {\n          label: `No Reference in ${group.label} project`,\n          message: `Select references from the list and click on add to your project`,\n        }\n    }\n  }, [group])\n\n  return (\n    <Stack bgcolor=\"white\" alignItems=\"center\" height=\"100%\">\n      <EmptyReferenceList />\n      <PrimaryText>{label}</PrimaryText>\n      <Typography variant=\"caption\">{message}</Typography>\n    </Stack>\n  )\n}\n\nexport default ReferencesTable\n","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n} from \"react\"\n\nimport { TCitation } from \"../db/types\"\nimport { GridSelectionModel } from \"@mui/x-data-grid\"\n\ntype Group = { id: string; label: string }\n\nexport const ManagerContext = createContext<{\n  group: Group\n  reference?: TCitation\n  selectionModel: GridSelectionModel\n  setGroup: Dispatch<SetStateAction<Group>>\n  setReference: Dispatch<SetStateAction<TCitation | undefined>>\n  updateSelectionModel: (selectionModel: GridSelectionModel) => void\n}>({\n  group: {} as Group,\n  reference: {} as TCitation,\n  selectionModel: [],\n  setGroup: () => \"\",\n  setReference: () => \"\",\n  updateSelectionModel: () => \"\",\n})\n\nexport const ManagerProvider: React.FC = ({ children }) => {\n  const [group, setGroup] = useState<Group>({ id: \"all\", label: \"All References\" })\n  const [reference, setReference] = useState<TCitation | undefined>()\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([])\n\n  const updateSelectionModel = useCallback(\n    (newSelectionModel) => setSelectionModel(newSelectionModel),\n    [],\n  )\n\n  return (\n    <ManagerContext.Provider\n      value={{\n        group,\n        reference,\n        selectionModel,\n        setGroup,\n        setReference,\n        updateSelectionModel,\n      }}\n    >\n      {children}\n    </ManagerContext.Provider>\n  )\n}\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","pageSize","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","current","parentElement","contains","document","activeElement","useAutocomplete","props","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledProp","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","value","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","readOnly","selectOnFocus","valueProp","optionLabel","String","ignoreFocus","firstFocus","inputRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","controlled","default","name","setInputValueState","state","focused","setFocused","resetInputValue","event","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","previousProps","valueChange","listboxAvailable","focusTag","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","_previousProps$value","every","val","previousHighlightedOption","checkHighlightedOptionExists","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","undefined","ref","autoCapitalize","spellCheck","role","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","jsx","d","getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","overridesResolver","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","vars","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","inProps","useThemeProps","className","component","classes","slots","composeClasses","useUtilityClasses","as","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","tag","inputRoot","visibility","width","margin","maxWidth","flexWrap","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","outlinedInputClasses","right","paddingTop","filledInputClasses","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","endAdornment","AutocompleteClearIndicator","IconButton","clearIndicator","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","mainChannel","selectedOpacity","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","ChipProps","clearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDown","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","slotProps","startAdornment","getCustomizedTagProps","params","map","Chip","children","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2","createSvgIcon","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","shouldForwardProp","prop","indeterminate","disableRipple","activeChannel","active","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","type","getChipUtilityClass","ChipRoot","iconColor","clickable","variant","avatar","deleteIcon","deletable","deleteIconColor","textColor","mode","grey","height","borderRadius","whiteSpace","transition","transitions","create","textDecoration","border","verticalAlign","marginLeft","defaultAvatarColor","contrastText","dark","defaultIconColor","primaryChannel","contrastTextChannel","selectedChannel","userSelect","boxShadow","shadows","defaultBorder","ChipLabel","isDeleteKeyboardEvent","keyboardEvent","avatarProp","clickableProp","ComponentProp","deleteIconProp","onKeyUp","skipFocusWhenDisabled","chipRef","handleRef","useForkRef","handleDeleteIconClick","ButtonBase","moreProps","focusVisibleClassName","focusVisible","Cancel","ListItemButtonRoot","dense","alignItemsFlexStart","divider","textAlign","duration","shortest","borderBottom","backgroundClip","ListItemButton","autoFocus","context","childContext","listItemRef","href","to","getSwitchBaseUtilityClass","SwitchBaseRoot","edge","SwitchBaseInput","left","checked","checkedProp","defaultChecked","disableFocusRipple","required","setCheckedState","useControlled","Boolean","muiFormControl","useFormControl","hasLabelFor","centerRipple","focusRipple","nativeEvent","defaultPrevented","newChecked","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","flex","shape","body2","flexDirection","borderBottomColor","outlineWidth","outlineOffset","shorter","touchAction","breakInside","gridGap","spacing","borderRight","alignSelf","gridDensitySelector","density","gridDensityValueSelector","createSelector","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityHeaderGroupingMaxDepthSelector","headerGroupingMaxDepth","gridDensityFactorSelector","factor","gridDensityTotalHeaderHeightSelector","GridRoot","rootProps","useGridRootProps","apiRef","visibleColumns","useGridSelector","totalRowCount","densityValue","rootContainerRef","pinnedRowsCount","rootElementRef","mountedState","setMountedState","useEnhancedEffect","unstable_updateGridDimensionsRef","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","GridMainContainer","ErrorBoundary","static","error","hasError","componentDidCatch","errorInfo","this","api","logError","showError","message","render","_this$state","GridErrorHandler","errorState","errorProps","_rootProps$components","components","ErrorOverlay","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","offsetWidth","scrollListener","e","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","forEach","fn","call","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","animationName","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","container","constructor","head","getElementsByTagName","styleSheet","cssText","appendChild","createTextNode","createStyles","getRootNode","innerHTML","addEventListener","__animationListener__","removeResizeListener","removeEventListener","removeChild","GridAutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","setState","rootRef","handleResize","useEventCallback","computedStyle","ownerWindow","parseInt","newHeight","newWidth","_parentElement$curren","win","detectElementResize","outerStyle","childParams","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","totalHeaderHeight","viewportInnerSize","setViewportInnerSize","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","bottom","GridOverlays","visibleRowCount","showNoResultsOverlay","overlay","_rootProps$components2","_rootProps$components3","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","isVirtualizationDisabled","setIsVirtualizationDisabled","disableVirtualization","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","publishEvent","innerRef","marginTop","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","GridRootPropsContext","G","GridApiContext","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","Error","loggerObj","method","idx","args","useGridApiMethod","apiMethods","apiName","apiMethodsRef","apiMethodsNames","Object","keys","installMethods","methodName","hasOwnProperty","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","object","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","set","unregister","get","clearTimeout","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","_handlerRef$current","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","from","regularListeners","has","apply","once","that","oneTimeListener","isSyntheticEvent","isPropagationStopped","globalId","_typeof","obj","Symbol","iterator","prototype","_toPropertyKey","arg","hint","prim","toPrimitive","res","TypeError","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","useGridInitialization","inputApiRef","unstable_eventManager","unstable_caches","instanceId","signature","DataGridPro","useGridApiInitialization","toString","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","others","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","join","model","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","unstable_updateControlState","unstable_registerControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","unstable_registerPipeProcessor","processor","processors","unstable_registerPipeApplier","applier","_appliers","otherAppliers","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","textContent","body","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","isModifierKeyPressed","altKey","_window$getSelection","fromCharCode","keyCode","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","round","random","registerPreProcessor","useGridRegisterPipeApplier","parseNumericValue","getGridNumericOperators","getApplyFilterFn","filterItem","isNaN","InputComponent","GridFilterInputValue","InputComponentProps","requiresFilterValue","includes","GridFilterInputMultipleValue","GRID_NUMERIC_COL_DEF","align","headerAlign","sortComparator","valueParser","valueFormatter","toLocaleString","filterOperators","getApplyQuickFilterFn","columnValue","SUBMIT_FILTER_DATE_STROKE_TIME","GridFilterInputDate","_item$value","item","applyValue","focusElementRef","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","onFilterChange","_item$value2","itemValue","BaseTextField","placeholder","shrink","max","baseTextField","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","time","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","value1","StyledInputBase","InputBase","GridEditDateCell","field","colDef","hasFocus","onValueChange","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","valueState","handleChange","async","newFormattedDate","newParsedDate","date","setFullYear","hours","minutes","setEditCellValue","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","renderEditCell","GRID_DATETIME_COL_DEF","GridEditModes","GridCellModes","GridRowModes","renderSingleSelectOptions","OptionComponent","isOptionTypeObject","content","GridEditSingleSelectCell","_baseSelectProps$nati","initialOpen","editMode","Cell","setOpen","isSelectNative","baseSelect","native","valueOptionsFormatted","valueOptions","BaseSelect","_rootProps$experiment","formattedTargetValue","isValid","experimentalFeatures","newEditingApi","Row","Promise","resolve","commitCellChange","setCellMode","getCellParams","isKeyboardEvent","MenuProps","_rootProps$experiment2","stopCellEditMode","ignoreModifications","MenuItem","formattedValue","GridFilterInputSingleSelect","currentColumn","columnField","getColumn","currentValueOptions","_itemValue","SelectProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","filterValueOptionFormatter","filterValues","formattedElement","formatedOption","Autocomplete","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","column","potentialValues","iterableColumnValues","optionValue","GridMenuRoot","menu","transformOrigin","GridMenu","onClickAway","onExited","prevTarget","prevOpen","BasePopper","placement","basePopper","TransitionProps","ClickAwayListener","mouseEvent","Grow","popperOnExited","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","stop","preventScroll","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","button","touchRippleRef","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","sortable","filterable","aggregable","headerName","disableColumnMenu","disableExport","renderCell","DEFAULT_GRID_COL_TYPE_KEY","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","number","dateTime","boolean","singleSelect","colType","colTypeDef","extendType","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","all","newColumn","lookup","columnVisibilityModel","computedWidth","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","min","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","columnsToUpsert","initialState","columnTypes","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","keepOnlyColumnsToUpsert","_apiRef$current","isInsideStateInitializer","columns","columnsStateWithoutColumnVisibilityModel","currentState","gridColumnsSelector","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","Infinity","hide","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","columnsState","orderedFields","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","rowId","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","GridDensityTypes","isLeaf","gridColumnGroupsLookupSelector","columnGrouping","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplet","groupId","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","groupCollapsedModel","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","newMaxDepth","Compact","floor","Comfortable","densityStateInitializer","maxDepth","unwrappedGroupingColumnModel","_unwrappedGroupingCol","_unwrappedGroupingCol2","serializeCellValue","delimiterCharacter","serializeRow","b","cellParams","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","_pinnedRows$top","_pinnedRows$bottom","filteredSortedRowIds","rowTree","selectedRows","bodyRows","_rowTree$id$position","pinnedRows","topPinnedRowsIds","bottomPinnedRowsIds","unshift","_excluded2","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","rowIds","CSVBody","buildCSV","getRowsToExport","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","a","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","gridRowsMetaSelector","rowsMeta","useGridPrintExport","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","setColumnVisibilityModel","buildPrintWindow","iframeEl","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","gridCloneViewport","chromeVersion","raw","userAgent","getChromeVersion","contain","gridToolbarElementHeight","gridFooterElementHeight","_gridClone$querySelec","_gridClone$querySelec2","currentPageTotalHeight","defaultPageStyle","pageStyle","styleElement","bodyClassName","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","attributes","attr","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","pagination","setPageSize","onload","matchMedia","mql","matches","_options$printOptions","printOptions","GridFeatureModeConstant","GridLinkOperator","getDefaultGridFilterModel","items","linkOperator","And","quickFilterValues","quickFilterLogicOperator","useGridRegisterStrategyProcessor","cleanFilterItem","cleanItem","operatorValue","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filterModel","filteringState","getFilterCallbackFromItem","parsedValue","_filterItem$value","parser","x","newFilterItem","filterOperator","operator","applyFilterOnRow","buildAggregatedFilterApplier","isRowMatchingFilterItems","shouldApplyFilter","resultPerItemId","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","columnsFieldsToFilter","quickFilterValueResult","isPassing","_appliersPerColumnFie","_appliersPerColumnFie2","buildAggregatedQuickFilterApplier","passingFilterItems","passingQuickFilterValues","passFilterLogic","allFilterItemResults","allQuickFilterResults","_filterModel$quickFil","_filterModel$linkOper","cleanedFilterItems","cleanedAllFilterItemResults","result","cleanedAllQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","filterStateInitializer","_props$filterModel","_props$initialState$f","visibleRowsLookup","filteredDescendantCountLookup","getVisibleRows","rows","paginationMode","firstRowIndex","lastRowIndex","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","rightVisibleCellIndex","rowIndexRelativeToAllRows","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","getRowIdFromIndex","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","lastRowIndexInPage","lastColIndex","shouldPreventDefault","shiftKey","nextRowIndex","handleColumnHeaderKeyDown","headerTitleNode","toggleColumnMenu","handleCellKeyDown","cellMode","Edit","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","JSON","checkGridRowIdIsValid","createRowsInternalCache","rowCount","cache","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","idRowsLookup","idToIdLookup","ids","getRowsStateFromCache","previousTree","rowCountProp","loadingProp","_apiRef$current$unsta","cacheForGrouping","groupingResponse","processedGroupingResponse","dataTopLevelRowCount","treeDepth","tree","parent","isPinned","groupingResponseBeforeRowHydration","totalTopLevelRowCount","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","childNode","isAutoGenerated","calculatePinnedRowsHeight","unstable_getRowHeight","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","ceil","applyValidPage","paginationState","pageCount","page","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","stateExportPreProcessing","prevState","pageSizeToExport","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","useGridPageSize","visibleTopLevelRowCount","onPageChange","setPage","pageToExport","_context$stateToResto2","useGridPage","preferencePanelStateInitializer","preferencePanel","gridEditRowsStateSelector","editRows","isPromise","promise","then","useCellEditing","_props$experimentalFe2","buildCallback","getCellMode","newEditRowsState","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","getRow","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","isEditable","isEditMode","handleCellDoubleClick","commitPropsAndExit","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","useGridRowEditing","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","rowParams","_props$experimentalFe3","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_nextFocusedCell$curr","onRowEditCommit","onRowEditStart","onRowEditStop","editingStateInitializer","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","rowNode","editable","runPendingEditCellValueMutation","debouncedField","debounceMs","maybeDebounce","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridCellEditStartReasons","GridCellEditStopReasons","missingOnProcessRowUpdateErrorWarning","GridRowEditStartReasons","GridRowEditStopReasons","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","deleteValue","startCellEditMode","cellToFocusAfter","isProcessingProps","disableIgnoreModificationsIfProcessingProps","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","_editingState$id","_editingState$id$fiel","unstable_skipValueParser","skipValueParser","changeReason","hasChanged","getRowWithUpdatedValuesFromCellEditing","copyOfPrevCellModes","_copyOfPrevCellModes$","_copyOfPrevCellModes$2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","unstable_getRowWithUpdatedValues","unstable_getEditCellMeta","rowsStateInitializer","flatRowTreeCreationMethod","depth","groupingKey","groupingField","groupingName","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","getRowNode","cellFocus","cellTabIndex","valueGetter","getColumnHeaderElement","getGridColumnHeaderElement","getRowElement","getGridRowElement","getCellElement","selector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","selectionModel","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","isTestEnvironment","hasScroll","scrollBarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScrollX","hasScrollY","rowsMetaStateInitializer","positions","useDataGridComponent","addHeaderGroups","unwrappedGroupingModel","_unwrappedGroupingMod","_unwrappedGroupingMod2","newGroupPath","lookupElement","groupPath","hasGroupPath","useGridColumnGroupingPreProcessors","useGridRowsPreProcessors","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","start","end","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","currentPageRowsLookup","firstSelectableRow","isSelectable","useGridSelection","_props$initialState5","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","useVisibleColumns","col","getColumnPosition","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","setColumnWidth","columnsStateToExport","_props$initialState$c2","_props$initialState4","_props$initialState4$","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$componentsProp","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","updates","DataGrid","uniqueUpdates","update","deletedRowIds","partialRow","_action","getRowModels","allRows","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","groupNode","sortedRowIds","filteredRowsLookup","childId","rowApi","setRowIndex","updatedRows","unstable_replaceRows","newRows","updatedIdRowsLookup","updatedIdToIdLookup","updatedTree","newRowEntries","newRowModel","replacedRowId","rowTreeNodeConfig","newRowsState","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRows","setCellColSpanInfo","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","getColumnGroupPath","_columnLookup$field$g","_columnLookup$field","getAllGroupDetails","unstable_getColumnGroupPath","unstable_getAllGroupDetails","_props$columnGrouping2","useGridColumnGrouping","lastClickedCell","publishCellFocusOut","focusedCell","moveFocusToRelativeCell","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","_column$filterOperato","newFilterItems","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","isRowPassing","startsWith","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingOrder","sort","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","bodyRowIds","footerRowIds","handleColumnHeaderClick","latestColumns","useGridSorting","_column$groupPath$len","_column$groupPath","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","rowHeightFromDensity","filterState","gridPaginationSelector","sortingState","hydrateRowsMeta","densityFactor","calculateRowProcessedSizes","baseCenter","isResized","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","existingBaseSizes","test","initialHeights","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","unstable_getLastMeasuredRowIndex","unstable_setLastMeasuredRowIndex","unstable_rowHasAutoHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","scroll","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","relatedTarget","columnMenuLostFocus","columnMenuItemLostFocus","useGridColumnMenu","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","viewportOuterSize","scrollbarSize","scrollDiv","scrollInformation","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","isFirstSizing","isJSDOM","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","getSwitchUtilityClass","SwitchRoot","flexShrink","colorAdjust","SwitchSwitchBase","switchBase","Switch","defaultColor","common","white","defaultDisabledColor","switchTrackDisabled","SwitchTrack","track","onBackground","black","switchTrack","SwitchThumb","thumb","sx","cachedSupportsPreventScroll","showRightBorder","getUnit","toUnitless","parseFloat","getSkeletonUtilityClass","_t","_t2","_t3","_t4","_","t","pulseKeyframe","waveKeyframe","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","radiusValue","Skeleton","bg","marginBottom","GridIconButtonContainerRoot","iconButtonContainer","GridIconButtonContainer","GridColumnMenuContainer","labelledby","handleListKeyDown","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","hideable","SortGridMenuItems","_column$sortingOrder","sortDirection","onSortMenuItemClick","GridColumnMenu","defaultButtons","preProcessedButtons","GridRowCountRoot","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","footerContainer","borderTop","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","GridHeader","PreferencesPanel","preferencesPanel","Toolbar","toolbar","GridPreferencesPanel","_preferencePanelState","panelContent","Panel","panel","getCircularProgressUtilityClass","SIZE","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","thickness","circleStyle","rootStyle","circumference","PI","toFixed","viewBox","cx","cy","r","fill","strokeWidth","GridOverlayRoot","GridOverlay","GridLoadingOverlay","GridNoRowsOverlay","getTableCellUtilityClass","TableCellRoot","stickyHeader","TableCell","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","componentProp","paddingProp","scope","scopeProp","sizeProp","variantProp","table","tablelvl2","isHeadCell","ariaSort","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","rowsPerPage","showFirstButton","showLastButton","useTheme","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","actions","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","ActionsComponent","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","MenuItemComponent","selectId","labelId","rowsPerPageOption","isHostComponent","GridPaginationRoot","GridPagination","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","filterFormDeleteIcon","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","collator","Intl","Collator","GridFilterForm","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","valueInputPropsOther","sortedFilterableColumns","compare","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","InputLabel","GridFilterPanel","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","BaseButton","startIcon","baseButton","getFormControlLabelUtilityClasses","FormControlLabelRoot","labelPlacement","_slotProps$typography","control","disableTypography","labelProp","controlProps","fcs","formControlState","states","typographySlotProps","Typography","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GRID_EXPERIMENTAL_ENABLED","columnsPanelRow","GridColumnsPanelRoot","GridColumnsPanelRowRoot","GridIconButtonRoot","defaultSearchPredicate","searchValue","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","handleClickAway","modifiers","enabled","phase","effect","elevation","EmptyCell","GridRow","refProp","styleProp","renderedColumns","containerWidth","onDoubleClick","onMouseEnter","onMouseLeave","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","publish","propHandler","nodeType","publishClick","getCell","classNames","disableDragEvents","disableColumnReorder","disableReorder","rowReordering","editCellState","_rootProps$classes","_rootProps$classes2","updatedRow","editCellStateRest","getCellClassName","indexRelativeToAllColumns","numberOfBaseSizes","maximumSize","rowSpacingType","property","rowClassNames","getRowClassName","_currentPage$range","randomNumber","cells","isLastColumn","disableExtendRowFullWidth","showCellRightBorder","contentWidth","SkeletonCell","emptyCellWidth","eventHandlers","GridColumnUnsortedIcon","nextSortDirection","Icon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","GridNoResultsOverlay","DEFAULT_GRID_ICON_SLOTS_COMPONENTS","BooleanCellTrueIcon","BooleanCellFalseIcon","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","BaseCheckbox","BaseSwitch","BaseTooltip","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","focusableElement","elementToFocus","scrollPosition","managesOwnFocus","draggableEventHandlers","valueString","renderChildren","ColumnHeaderFilterIconButton","counter","toggleFilter","iconButton","enterDelay","baseTooltip","Badge","badgeContent","ColumnMenu","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","sortedColumns","toggleAllColumns","currentModel","handleSearchValueChange","currentColumns","searchValueToCheck","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","baseSwitch","draggable","DATA_GRID_FORCED_PROPS","disableColumnResize","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","virtualScroller","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","binarySearch","offset","sliceStart","sliceEnd","pivot","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","useGridVirtualScroller","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","containerDimensions","setContainerDimensions","prevTotalWidth","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","computeRenderContext","lastColumnIndex","updateRenderZonePosition","nextRenderContext","initialFirstColumnToRender","updateRenderContext","context1","context2","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","handleWheel","handleTouchMove","needsHorizontalScrollbar","contentSize","shouldExtendContent","overflowX","overflowY","getRenderContext","getRows","availableSpace","rowIndexOffset","renderedRows","lastColumnToRender","_currentPage$range5","lastVisibleRowIndex","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","DataGridVirtualScroller","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderSortIcon","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","resizable","resizing","side","GridColumnHeaderSeparatorRaw","Right","stopClick","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","disableHeaderSeparator","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","columnMenuState","draggableContainer","titleContainer","titleContainerContent","isDragging","filterItemsCounter","isColumnSorted","isColumnFiltered","isColumnNumeric","GridColumnHeaderItem","_column$headerName","sortIndex","extendRowFullWidth","renderHeader","mouseEventsHandlers","onMouseOut","onDragStart","onDragEnd","handleExited","columnHeaderFilterIconButton","hideSortIcons","elementId","maybeReactUseId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","showColumnBorder","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","CLIFF","SLOP","scrollDirection","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","clientX","getBoundingClientRect","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","columnHeaders","borderTopLeftRadius","borderTopRightRadius","GridColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","columnHeadersInner","GridColumnHeadersInner","DataGridColumnHeaders","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","tabIndexState","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","defaultMemoize","equalityCheck","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","getParents","path","columnsToRender","isFirstColumn","hasTabbableElement","headerToRender","_visibleColumns$first","_visibleColumns$first2","_visibleColumns$first3","initialHeader","leftOverflow","firstColumnToRenderGroup","firstColumnToRenderGroupParents","_visibleColumns$colum","_visibleColumns$colum2","_column$computedWidth","_column$computedWidth2","_column$computedWidth3","groupParents","depthInfo","aggregated","_column$computedWidth7","lastItem","_column$computedWidth5","_column$computedWidth4","_column$computedWidth6","lastColumnToRenderGroup","_visibleColumns$colum3","_visibleColumns$colum4","_visibleColumns$colum5","_column$computedWidth8","elements","depthIndex","groupIndex","useGridColumnHeaders","DataGridRaw","themedProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","warnIfFocusStateIsNotSynced","isRequired","getDetailPanelContent","GridBooleanCellRaw","useGridApiContext","titleAccess","GridBooleanCell","GridEditBooleanCell","baseCheckbox","GridFilterInputBoolean","displayEmpty","GRID_BOOLEAN_COL_DEF","valueAsBoolean","GridCellCheckboxRenderer","isChecked","checkboxElement","rippleRef","_checkboxElement$curr","GridHeaderCheckbox","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","GridEditInputCellRoot","editInputCell","GridEditInputCell","_rootProps$experiment3","meta","GRID_STRING_COL_DEF","groupable","pinnable","disableTrim","filterItemValue","filterRegex","RegExp","sensitivity","usage","filterValue","getGridStringOperators","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","SUBMIT_FILTER_STROKE_TIME","singleSelectProps","columnValueOptions","getValueFromOption","getValueFromValueOptions","getDataGridUtilityClass","gridClasses","gridColumnFieldsSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridColumnsMetaSelector","totalWidth","gridFilterStateSelector","gridFilterModelSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridVisibleSortedRowEntriesSelector","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","rowTreeDepth","_rowTree$row$id","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","gridFilterActiveItemsLookupSelector","activeFilters","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridPageSelector","gridPageSizeSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupingNameSelector","gridRowTreeDepthSelector","gridRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","gridPinnedRowsCountSelector","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","gridSortingStateSelector","gridSortedRowIdsSelector","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","getSortCellParams","comparator","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","contextValue","acceptsApiRef","isOutputSelector","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","concat","assign","lastResult","recomputations","resetRecomputations","cacheContainer","selectorArgs","stateOrApiRef","isApiRef","cacheKey","newSelector","unstable_resetCreateSelectorCache","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","isPrintableKey","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellEnterEditModeKeys","isCellExitEditModeKeys","isCellEditCommitKeys","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isHideMenuKey","isNumber","isFunction","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","Set","ArrayBuffer","isView","source","flags","valueOf","randomNumberBetween","seed","imul","deepClone","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","wrapWithWarningOnCall","importStyle","bgcolor","Input","MUIStyled","DataGridTheme","createTheme","themes","MuiDataGrid","styleOverrides","CitationDataView","_ref2","setSelectedCitations","onAddCitation","citations","React","viewColumns","Stack","Button","AddCircleIcon","referenceColumns","ThemeProvider","_ref3","selectedCitations","close","citationDao","useContext","DBContext","handleImportAll","useCallback","bulkAdd","importSelectedCitation","selectedItems","ButtonGroup","xml","accept","setCitations","useState","uploadError","setUploadError","uploadProgress","setUploadProgress","uploadRef","useRef","setSelectedCitationsId","updateCitations","onFileUpload","file","files","fileReader","FileReader","onloadend","convertBibTexToCSL","onprogress","loaded","total","onerror","readAsText","citation","Modal","Box","Spinner","Alert","severity","CollectionButton","borderLeft","setGroup","updateSelectionModel","ManagerContext","onSelectListItem","innerText","newProject","setShowNew","onCreateProjectClick","Container","NoteAddIcon","py","AllInboxIcon","StarBorderIcon","UserProjects","AddCitationsToProject","projectDao","projects","getProjects","projectMap","useMemo","projectsSet","setProjectsSet","setProject","onAddClick","projectId","edit","handleShow","Divider","Grid","List","ListItem","ListItemIcon","Checkbox","ListItemText","ProjectTextFiled","TextField","DoneIcon","CloseIcon","_ref4","getList","setProjectId","closeEdit","onSaveClick","projectName","parentNode","uuid","onDeleteProjectClick","onEditClick","_ref5","LibraryBooksIcon","EditIcon","DeleteIcon","EmptyProject","px","GridToolbarFilterListRoot","toolbarFilterList","GridToolbarFilterButton","buttonProps","tooltipContentNode","getOperatorLabel","getFilterItemValue","getValueAsString","_buttonProps$onClick","Label","onDeleteClick","bulkDelete","onExportToWord","references","bulkGet","exportToWord","onExportClick","format","require","export_citations","isProjectSelected","onBibliographyListClick","navigate","citationDocument","onRemoveProjectCitation","MicrosoftWordIcon","FormatQuoteIcon","family","given","favorite","setFavorite","onSelectClick","Tooltip","StarIcon","StarOutlineIcon","setReference","onPreviewClick","PreviewIcon","dataGrid","EmptyReferenceList","PrimaryText","updatePage","updatePageSize","getCitationsCount","getCitations","xs","md","ListToolbar","createContext","reference","ManagerProvider","newSelectionModel","Provider","NOT_FOUND","defaultEqualityCheck","func","equalityCheckOrOptions","equals","providedOptions","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","next","createCacheKeyComparator","put","getEntries","clear","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}