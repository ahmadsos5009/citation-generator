{"version":3,"file":"component---src-pages-references-manager-tsx-e0672160abfc957135bb.js","mappings":"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","sources":["webpack://citation-generator/./node_modules/@mui/icons-material/AddCircle.js","webpack://citation-generator/./node_modules/@mui/icons-material/AllInbox.js","webpack://citation-generator/./node_modules/@mui/icons-material/Close.js","webpack://citation-generator/./node_modules/@mui/icons-material/Done.js","webpack://citation-generator/./node_modules/@mui/icons-material/LibraryBooks.js","webpack://citation-generator/./node_modules/@mui/icons-material/NoteAdd.js","webpack://citation-generator/./node_modules/@mui/icons-material/Preview.js","webpack://citation-generator/./node_modules/@mui/icons-material/Star.js","webpack://citation-generator/./node_modules/@mui/icons-material/StarBorder.js","webpack://citation-generator/./node_modules/@mui/icons-material/StarOutline.js","webpack://citation-generator/./node_modules/@mui/material/ListItemButton/ListItemButton.js","webpack://citation-generator/./src/provider/ManagerProvider.tsx","webpack://citation-generator/./node_modules/@mui/material/internal/switchBaseClasses.js","webpack://citation-generator/./node_modules/@mui/material/internal/SwitchBase.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/CheckBox.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","webpack://citation-generator/./node_modules/@mui/material/Checkbox/checkboxClasses.js","webpack://citation-generator/./node_modules/@mui/material/Checkbox/Checkbox.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridApiContext.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","webpack://citation-generator/./src/components/manger/Project.tsx","webpack://citation-generator/./src/components/manger/Collection.tsx","webpack://citation-generator/./node_modules/@mui/utils/esm/scrollLeft.js","webpack://citation-generator/./node_modules/@mui/material/internal/animate.js","webpack://citation-generator/./node_modules/@mui/material/Tabs/ScrollbarSize.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","webpack://citation-generator/./node_modules/@mui/material/TabScrollButton/tabScrollButtonClasses.js","webpack://citation-generator/./node_modules/@mui/material/TabScrollButton/TabScrollButton.js","webpack://citation-generator/./node_modules/@mui/material/Tabs/tabsClasses.js","webpack://citation-generator/./node_modules/@mui/material/Tabs/Tabs.js","webpack://citation-generator/./node_modules/@mui/material/Tab/tabClasses.js","webpack://citation-generator/./node_modules/@mui/material/Tab/Tab.js","webpack://citation-generator/./src/components/manger/ReferenceEdit.tsx","webpack://citation-generator/./src/components/manger/Metadata.tsx","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/keyboardUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/gridClasses.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/warning.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","webpack://citation-generator/./node_modules/reselect/es/defaultMemoize.js","webpack://citation-generator/./node_modules/reselect/es/index.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/createSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/icons/index.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/utils.js","webpack://citation-generator/./node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","webpack://citation-generator/./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","webpack://citation-generator/./node_modules/@mui/material/ListSubheader/ListSubheader.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/Cancel.js","webpack://citation-generator/./node_modules/@mui/material/Chip/chipClasses.js","webpack://citation-generator/./node_modules/@mui/material/Chip/Chip.js","webpack://citation-generator/./node_modules/@mui/material/Autocomplete/autocompleteClasses.js","webpack://citation-generator/./node_modules/@mui/material/Autocomplete/Autocomplete.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridRoot.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/ErrorBoundary.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridAutoSizer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridOverlays.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridBody.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/context/GridContextProvider.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/EventManager.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","webpack://citation-generator/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://citation-generator/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://citation-generator/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridEditRowModel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/GridMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridDensity.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/utils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/exportAs.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridFeatureMode.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/gridFilterItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/models/params/gridRowParams.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/utils/domUtils.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGroupingPreProcessors.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/localeTextConstants.js","webpack://citation-generator/./node_modules/@mui/material/Switch/switchClasses.js","webpack://citation-generator/./node_modules/@mui/material/Switch/Switch.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridCell.js","webpack://citation-generator/./node_modules/@mui/material/styles/cssUtils.js","webpack://citation-generator/./node_modules/@mui/material/Skeleton/skeletonClasses.js","webpack://citation-generator/./node_modules/@mui/material/Skeleton/Skeleton.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridRowCount.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridFooter.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridHeader.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","webpack://citation-generator/./node_modules/@mui/material/CircularProgress/circularProgressClasses.js","webpack://citation-generator/./node_modules/@mui/material/CircularProgress/CircularProgress.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","webpack://citation-generator/./node_modules/@mui/material/Table/TableContext.js","webpack://citation-generator/./node_modules/@mui/material/Table/Tablelvl2Context.js","webpack://citation-generator/./node_modules/@mui/material/TableCell/tableCellClasses.js","webpack://citation-generator/./node_modules/@mui/material/TableCell/TableCell.js","webpack://citation-generator/./node_modules/@mui/material/TablePagination/TablePaginationActions.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/LastPage.js","webpack://citation-generator/./node_modules/@mui/material/internal/svg-icons/FirstPage.js","webpack://citation-generator/./node_modules/@mui/material/TablePagination/tablePaginationClasses.js","webpack://citation-generator/./node_modules/@mui/material/TablePagination/TablePagination.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridPagination.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","webpack://citation-generator/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://citation-generator/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/envConstants.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/panel/GridPanel.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridRow.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/ErrorOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/GridScrollArea.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/chainPropTypes.js","webpack://citation-generator/./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","webpack://citation-generator/./src/components/manger/ListToolbar.tsx","webpack://citation-generator/./src/components/manger/ReferencesTable.tsx","webpack://citation-generator/./src/components/FileImport.tsx","webpack://citation-generator/./src/components/manger/AddReferenceForm.tsx","webpack://citation-generator/./src/pages/referencesManager.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 6h-4c0 1.62-1.38 3-3 3s-3-1.38-3-3H5V5h14v4zm-4 7h6v3c0 1.1-.9 2-2 2H5c-1.1 0-2-.9-2-2v-3h6c0 1.66 1.34 3 3 3s3-1.34 3-3z\"\n}), 'AllInbox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z\"\n}), 'LibraryBooks');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 14h-3v3h-2v-3H8v-2h3v-3h2v3h3v2zm-3-7V3.5L18.5 9H13z\"\n}), 'NoteAdd');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm0 16H5V7h14v12zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zM12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4zm0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Preview');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m22 9.24-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarBorder');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m22 9.24-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarOutline');\nexports.default = _default;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alignItems\", \"autoFocus\", \"component\", \"children\", \"dense\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport listItemButtonClasses, { getListItemButtonUtilityClass } from './listItemButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes,\n    dense,\n    disabled,\n    disableGutters,\n    divider,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', !disableGutters && 'gutters', divider && 'divider', disabled && 'disabled', alignItems === 'flex-start' && 'alignItemsFlexStart', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst ListItemButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiListItemButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexGrow: 1,\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minWidth: 0,\n  boxSizing: 'border-box',\n  textAlign: 'left',\n  paddingTop: 8,\n  paddingBottom: 8,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${listItemButtonClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${listItemButtonClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${listItemButtonClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${listItemButtonClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, ownerState.alignItems === 'flex-start' && {\n  alignItems: 'flex-start'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.dense && {\n  paddingTop: 4,\n  paddingBottom: 4\n}));\nconst ListItemButton = /*#__PURE__*/React.forwardRef(function ListItemButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemButton'\n  });\n  const {\n      alignItems = 'center',\n      autoFocus = false,\n      component = 'div',\n      children,\n      dense = false,\n      disableGutters = false,\n      divider = false,\n      focusVisibleClassName,\n      selected = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  }), [alignItems, context.dense, dense, disableGutters]);\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a ListItemButton whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    alignItems,\n    dense: childContext.dense,\n    disableGutters,\n    divider,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleRef = useForkRef(listItemRef, ref);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(ListItemButtonRoot, _extends({\n      ref: handleRef,\n      href: other.href || other.to,\n      component: (other.href || other.to) && component === 'div' ? 'a' : component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      ownerState: ownerState,\n      className: clsx(classes.root, className)\n    }, other, {\n      classes: classes,\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component if a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes.string,\n  /**\n   * Use to apply selected styling.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemButton;","import React, {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useState,\n} from \"react\"\n\nimport { TCitation } from \"../db/types\"\nimport { GridSelectionModel } from \"@mui/x-data-grid\"\n\ntype Group = { id: string; label: string }\n\nexport const ManagerContext = createContext<{\n  group: Group\n  reference?: TCitation\n  selectionModel: GridSelectionModel\n  setGroup: Dispatch<SetStateAction<Group>>\n  setReference: Dispatch<SetStateAction<TCitation | undefined>>\n  updateSelectionModel: (selectionModel: GridSelectionModel) => void\n}>({\n  group: {} as Group,\n  reference: {} as TCitation,\n  selectionModel: [],\n  setGroup: () => \"\",\n  setReference: () => \"\",\n  updateSelectionModel: () => \"\",\n})\n\nexport const ManagerProvider: React.FC = ({ children }) => {\n  const [group, setGroup] = useState<Group>({ id: \"all\", label: \"All References\" })\n  const [reference, setReference] = useState<TCitation | undefined>()\n  const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([])\n\n  const updateSelectionModel = useCallback(\n    (newSelectionModel) => setSelectionModel(newSelectionModel),\n    [],\n  )\n\n  return (\n    <ManagerContext.Provider\n      value={{\n        group,\n        reference,\n        selectionModel,\n        setGroup,\n        setReference,\n        updateSelectionModel,\n      }}\n    >\n      {children}\n    </ManagerContext.Provider>\n  )\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n\n  return apiRef;\n}","import React, { useCallback, useContext, useMemo, useState } from \"react\"\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  IconButton,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  Modal,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\"\nimport DoneIcon from \"@mui/icons-material/Done\"\nimport CloseIcon from \"@mui/icons-material/Close\"\nimport { v4 as uuid } from \"uuid\"\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport LibraryBooksIcon from \"@mui/icons-material/LibraryBooks\"\nimport EditIcon from \"@mui/icons-material/Edit\"\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport { EmptyProject } from \"../../placeholders\"\nimport { CollectionButton } from \"./Collection\"\nimport { useGridApiContext } from \"@mui/x-data-grid\"\nimport { TProject } from \"../../db/types\"\n\nconst importStyle = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  width: \"30%\",\n  height: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  overflowY: \"scroll\",\n}\n\nexport const AddCitationsToProject: React.FC = () => {\n  const { projectDao } = useContext(DBContext)\n  const { group } = useContext(ManagerContext)\n\n  const projects = projectDao.getProjects(group.id)\n\n  const projectMap = useMemo(\n    () => new Map(projects.map(({ id, citations }) => [id, citations])),\n    [projects],\n  )\n\n  const [projectsSet, setProjectsSet] = useState(new Set<string>())\n\n  const setProject = useCallback(\n    (e) => {\n      const id = e.currentTarget.id\n\n      if (projectsSet.has(id)) {\n        projectsSet.delete(id)\n      } else {\n        projectsSet.add(id)\n      }\n\n      setProjectsSet(new Set(projectsSet))\n    },\n    [projectsSet],\n  )\n\n  const {\n    current: {\n      state: { selection },\n    },\n  } = useGridApiContext()\n\n  const onAddClick = useCallback(() => {\n    projectsSet.forEach((projectId) => {\n      /** Project citations list without duplication */\n      const citations = Array.from(\n        new Set([...(projectMap.get(projectId) || []), ...(selection as string[])]),\n      )\n      projectDao.edit(projectId, { citations } as TProject)\n    })\n    handleClose()\n  }, [projectsSet, selection, projectMap])\n\n  const [open, setOpen] = useState(false)\n\n  const handleShow = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  return (\n    <>\n      <Button size=\"small\" onClick={handleShow}>\n        Projects\n      </Button>\n      <Modal open={open} onClose={handleClose}>\n        <Box\n          sx={{\n            ...importStyle,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Stack p={1} spacing={1} justifyContent=\"space-between\">\n            <Stack direction=\"row\" justifyContent=\"space-between\">\n              <Typography variant=\"subtitle1\">Select Projects</Typography>\n              <Button onClick={onAddClick}>Add</Button>\n            </Stack>\n            <Divider />\n          </Stack>\n\n          <Grid container justifyContent=\"space-between\" flex={1}>\n            <List sx={{ bgcolor: \"background.paper\" }}>\n              {projects.map(({ id, name }) => (\n                <ListItem key={id}>\n                  <ListItemButton id={id} onClick={setProject} dense>\n                    <ListItemIcon>\n                      <Checkbox\n                        edge=\"start\"\n                        color=\"secondary\"\n                        checked={projectsSet.has(id)}\n                        tabIndex={-1}\n                        disableRipple\n                      />\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                  </ListItemButton>\n                </ListItem>\n              ))}\n            </List>\n\n            <Stack\n              alignSelf=\"end\"\n              p={1}\n              direction=\"row\"\n              justifyContent=\"space-between\"\n            >\n              <Typography variant=\"caption\">\n                {projectsSet.size} Projects Selected\n              </Typography>\n            </Stack>\n          </Grid>\n        </Box>\n      </Modal>\n    </>\n  )\n}\n\nconst ProjectTextFiled: React.FC<{\n  id?: string\n  value?: string\n  edit: (e: React.MouseEvent<HTMLElement>) => void\n  close: () => void\n}> = ({ id, value, edit, close }) => (\n  <TextField\n    sx={{ p: 2 }}\n    size=\"small\"\n    placeholder=\"Your Project Name\"\n    defaultValue={value}\n    InputProps={{\n      endAdornment: (\n        <>\n          <IconButton size=\"small\" id={id} value={id && \"edit\"} onClick={edit}>\n            <DoneIcon />\n          </IconButton>\n          <IconButton size=\"small\" onClick={close}>\n            <CloseIcon />\n          </IconButton>\n        </>\n      ),\n    }}\n  />\n)\n\n/**\n * Show Project created by user\n */\nconst UserProjects: React.FC<{\n  newProject: boolean\n  setShowNew: (show: boolean) => void\n}> = ({ newProject, setShowNew }) => {\n  const { group, setGroup, updateSelectionModel } = useContext(ManagerContext)\n  const { projectDao } = useContext(DBContext)\n\n  const projects = projectDao.getList()\n\n  const [projectId, setProjectId] = useState()\n\n  const onSelectListItem = useCallback((e) => {\n    setGroup({ id: e.currentTarget.value, label: e.currentTarget.innerText })\n    updateSelectionModel([])\n  }, [])\n\n  const closeEdit = useCallback(() => {\n    setShowNew(false)\n    setProjectId(undefined)\n  }, [])\n\n  const onSaveClick = useCallback(async (e) => {\n    const projectName = e.currentTarget.parentNode.querySelector(\"input\").value\n    if (projectName) {\n      if (e.currentTarget.value === \"edit\") {\n        const id = e.currentTarget.id\n        await projectDao.edit(id, {\n          id: id,\n          name: projectName,\n        } as TProject)\n      } else {\n        await projectDao.add({ id: uuid(), name: projectName, citations: [] })\n      }\n      closeEdit()\n    }\n  }, [])\n\n  const onDeleteProjectClick = useCallback((e) => {\n    projectDao.delete(e.currentTarget.value)\n    setGroup({ id: \"all\", label: \"All References\" })\n  }, [])\n\n  const onEditClick = useCallback((e) => {\n    setProjectId(e.currentTarget.value)\n  }, [])\n\n  return (\n    <Stack py={3} spacing={1} alignItems={(!projects.length && \"center\") || \"unset\"}>\n      {(projects.length && (\n        <Stack>\n          {projects.map(({ id, name }) => (\n            <Stack py={0.5} direction=\"row\" justifyContent=\"space-between\" key={id}>\n              {(id === projectId && (\n                <ProjectTextFiled\n                  id={id}\n                  value={name}\n                  edit={onSaveClick}\n                  close={closeEdit}\n                />\n              )) || (\n                <>\n                  <CollectionButton\n                    sx={{ flex: 1 }}\n                    key={id}\n                    value={id}\n                    onClick={onSelectListItem}\n                    disabled={group.id === id}\n                    startIcon={<LibraryBooksIcon fontSize=\"small\" />}\n                  >\n                    {name}\n                  </CollectionButton>\n                  <Stack direction=\"row\">\n                    <IconButton size=\"small\" value={id} onClick={onEditClick}>\n                      <EditIcon fontSize=\"small\" />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      value={id}\n                      onClick={onDeleteProjectClick}\n                    >\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Stack>\n                </>\n              )}\n            </Stack>\n          ))}\n        </Stack>\n      )) ||\n        (!newProject && (\n          <>\n            <EmptyProject />\n            <Typography variant=\"caption\" textAlign=\"center\" px={2}>\n              Click on Create Project button to group your references in a project\n            </Typography>\n          </>\n        ))}\n      {newProject && <ProjectTextFiled edit={onSaveClick} close={closeEdit} />}\n    </Stack>\n  )\n}\n\nexport default UserProjects\n","import React, { useCallback, useContext, useState } from \"react\"\nimport { Button, Container, Stack, styled } from \"@mui/material\"\nimport NoteAddIcon from \"@mui/icons-material/NoteAdd\"\nimport AllInboxIcon from \"@mui/icons-material/AllInbox\"\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\"\n\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\n\nimport UserProjects from \"./Project\"\n\nconst Collection: React.FC = () => {\n  const { group, setGroup, updateSelectionModel } = useContext(ManagerContext)\n\n  const onSelectListItem = useCallback((e) => {\n    setGroup({ id: e.currentTarget.value, label: e.currentTarget.innerText })\n    updateSelectionModel([])\n  }, [])\n\n  const [newProject, setShowNew] = useState(false)\n\n  const onCreateProjectClick = useCallback(() => {\n    setShowNew(true)\n  }, [])\n\n  return (\n    <Container\n      disableGutters\n      maxWidth={false}\n      sx={{ bgcolor: \"white\", height: \"100%\", borderRadius: \"10px\" }}\n    >\n      <Stack bgcolor=\"#817589\" borderRadius=\"10px 10px 0 0\">\n        <Button\n          color=\"primary\"\n          startIcon={<NoteAddIcon />}\n          onClick={onCreateProjectClick}\n        >\n          Create Project\n        </Button>\n      </Stack>\n\n      <Stack py={3} spacing={1}>\n        <CollectionButton\n          value=\"all\"\n          onClick={onSelectListItem}\n          disabled={group.id === \"all\"}\n          startIcon={<AllInboxIcon />}\n        >\n          All References\n        </CollectionButton>\n        <CollectionButton\n          value=\"favorites\"\n          disabled={group.id === \"favorites\"}\n          onClick={onSelectListItem}\n          startIcon={<StarBorderIcon />}\n        >\n          Favorites\n        </CollectionButton>\n      </Stack>\n\n      <UserProjects newProject={newProject} setShowNew={setShowNew} />\n    </Container>\n  )\n}\n\nexport const CollectionButton = styled(Button)(() => ({\n  borderRadius: 0,\n  justifyContent: \"start\",\n  paddingLeft: \"24px\",\n  \"&:hover\": {\n    background: \"#E6DAEA\",\n  },\n  \"&.Mui-disabled\": {\n    background: \"#E6DAEA\",\n    color: \"#37293C\",\n    borderLeft: \"5px solid #37293C\",\n  },\n}))\n\nexport default Collection\n","// Source from https://github.com/alitaheri/normalize-scroll-left\nlet cachedType;\n\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\n *\n * Type             | <- Most Left | Most Right -> | Initial\n * ---------------- | ------------ | ------------- | -------\n * default          | 0            | 100           | 100\n * negative (spec*) | -100         | 0             | 0\n * reverse          | 100          | 0             | 0\n *\n * Edge 85: default\n * Safari 14: negative\n * Chrome 85: negative\n * Firefox 81: negative\n * IE11: reverse\n *\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\n */\nexport function detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n  const dummy = document.createElement('div');\n  const container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n  document.body.removeChild(dummy);\n  return cachedType;\n}\n\n// Based on https://stackoverflow.com/a/24394376\nexport function getNormalizedScrollLeft(element, direction) {\n  const scrollLeft = element.scrollLeft;\n\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n  const type = detectScrollType();\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n    default:\n      return scrollLeft;\n  }\n}","function easeInOutSin(time) {\n  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2;\n}\nexport default function animate(property, element, to, options = {}, cb = () => {}) {\n  const {\n    ease = easeInOutSin,\n    duration = 300 // standard\n  } = options;\n  let start = null;\n  const from = element[property];\n  let cancelled = false;\n  const cancel = () => {\n    cancelled = true;\n  };\n  const step = timestamp => {\n    if (cancelled) {\n      cb(new Error('Animation cancelled'));\n      return;\n    }\n    if (start === null) {\n      start = timestamp;\n    }\n    const time = Math.min(1, (timestamp - start) / duration);\n    element[property] = ease(time) * (to - from) + from;\n    if (time >= 1) {\n      requestAnimationFrame(() => {\n        cb(null);\n      });\n      return;\n    }\n    requestAnimationFrame(step);\n  };\n  if (from === to) {\n    cb(new Error('Element already at target position'));\n    return cancel;\n  }\n  requestAnimationFrame(step);\n  return cancel;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport { ownerWindow } from '../utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n\n/**\n * @ignore - internal component.\n * The component originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\nexport default function ScrollbarSize(props) {\n  const {\n      onChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const scrollbarHeight = React.useRef();\n  const nodeRef = React.useRef(null);\n  const setMeasurements = () => {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      const prevHeight = scrollbarHeight.current;\n      setMeasurements();\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    const containerWindow = ownerWindow(nodeRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(() => {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: styles,\n    ref: nodeRef\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTabScrollButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiTabScrollButton', slot);\n}\nconst tabScrollButtonClasses = generateUtilityClasses('MuiTabScrollButton', ['root', 'vertical', 'horizontal', 'disabled']);\nexport default tabScrollButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _KeyboardArrowLeft, _KeyboardArrowRight;\nconst _excluded = [\"className\", \"direction\", \"orientation\", \"disabled\"];\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tabScrollButtonClasses, { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = styled(ButtonBase, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.orientation && styles[ownerState.orientation]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  [`&.${tabScrollButtonClasses.disabled}`]: {\n    opacity: 0\n  }\n}, ownerState.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: `rotate(${ownerState.isRtl ? -90 : 90}deg)`\n  }\n}));\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n      className,\n      direction\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const ownerState = _extends({\n    isRtl\n  }, props);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    ownerState: ownerState,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n      fontSize: \"small\"\n    })) : _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n      fontSize: \"small\"\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TabScrollButton;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTabsUtilityClass(slot) {\n  return generateUtilityClass('MuiTabs', slot);\n}\nconst tabsClasses = generateUtilityClasses('MuiTabs', ['root', 'vertical', 'flexContainer', 'flexContainerVertical', 'centered', 'scroller', 'fixed', 'scrollableX', 'scrollableY', 'hideScrollbar', 'scrollButtons', 'scrollButtonsHideMobile', 'indicator']);\nexport default tabsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport debounce from '../utils/debounce';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport tabsClasses, { getTabsUtilityClass } from './tabsClasses';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst nextItem = (list, item) => {\n  if (list === item) {\n    return list.firstChild;\n  }\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n  return list.firstChild;\n};\nconst previousItem = (list, item) => {\n  if (list === item) {\n    return list.lastChild;\n  }\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n  return list.lastChild;\n};\nconst moveFocus = (list, currentFocus, traversalFunction) => {\n  let wrappedOnce = false;\n  let nextFocus = traversalFunction(list, currentFocus);\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n      wrappedOnce = true;\n    }\n\n    // Same logic as useAutocomplete.js\n    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    vertical,\n    fixed,\n    hideScrollbar,\n    scrollableX,\n    scrollableY,\n    centered,\n    scrollButtonsHideMobile,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', vertical && 'vertical'],\n    scroller: ['scroller', fixed && 'fixed', hideScrollbar && 'hideScrollbar', scrollableX && 'scrollableX', scrollableY && 'scrollableY'],\n    flexContainer: ['flexContainer', vertical && 'flexContainerVertical', centered && 'centered'],\n    indicator: ['indicator'],\n    scrollButtons: ['scrollButtons', scrollButtonsHideMobile && 'scrollButtonsHideMobile'],\n    scrollableX: [scrollableX && 'scrollableX'],\n    hideScrollbar: [hideScrollbar && 'hideScrollbar']\n  };\n  return composeClasses(slots, getTabsUtilityClass, classes);\n};\nconst TabsRoot = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${tabsClasses.scrollButtons}`]: styles.scrollButtons\n    }, {\n      [`& .${tabsClasses.scrollButtons}`]: ownerState.scrollButtonsHideMobile && styles.scrollButtonsHideMobile\n    }, styles.root, ownerState.vertical && styles.vertical];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  overflow: 'hidden',\n  minHeight: 48,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  display: 'flex'\n}, ownerState.vertical && {\n  flexDirection: 'column'\n}, ownerState.scrollButtonsHideMobile && {\n  [`& .${tabsClasses.scrollButtons}`]: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n}));\nconst TabsScroller = styled('div', {\n  name: 'MuiTabs',\n  slot: 'Scroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.scroller, ownerState.fixed && styles.fixed, ownerState.hideScrollbar && styles.hideScrollbar, ownerState.scrollableX && styles.scrollableX, ownerState.scrollableY && styles.scrollableY];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'inline-block',\n  flex: '1 1 auto',\n  whiteSpace: 'nowrap'\n}, ownerState.fixed && {\n  overflowX: 'hidden',\n  width: '100%'\n}, ownerState.hideScrollbar && {\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n}, ownerState.scrollableX && {\n  overflowX: 'auto',\n  overflowY: 'hidden'\n}, ownerState.scrollableY && {\n  overflowY: 'auto',\n  overflowX: 'hidden'\n}));\nconst FlexContainer = styled('div', {\n  name: 'MuiTabs',\n  slot: 'FlexContainer',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.flexContainer, ownerState.vertical && styles.flexContainerVertical, ownerState.centered && styles.centered];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex'\n}, ownerState.vertical && {\n  flexDirection: 'column'\n}, ownerState.centered && {\n  justifyContent: 'center'\n}));\nconst TabsIndicator = styled('span', {\n  name: 'MuiTabs',\n  slot: 'Indicator',\n  overridesResolver: (props, styles) => styles.indicator\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'absolute',\n  height: 2,\n  bottom: 0,\n  width: '100%',\n  transition: theme.transitions.create()\n}, ownerState.indicatorColor === 'primary' && {\n  backgroundColor: (theme.vars || theme).palette.primary.main\n}, ownerState.indicatorColor === 'secondary' && {\n  backgroundColor: (theme.vars || theme).palette.secondary.main\n}, ownerState.vertical && {\n  height: '100%',\n  width: 2,\n  right: 0\n}));\nconst TabsScrollbarSize = styled(ScrollbarSize, {\n  name: 'MuiTabs',\n  slot: 'ScrollbarSize'\n})({\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  // Hide dimensionless scrollbar on macOS\n  scrollbarWidth: 'none',\n  // Firefox\n  '&::-webkit-scrollbar': {\n    display: 'none' // Safari + Chrome\n  }\n});\n\nconst defaultIndicatorStyle = {};\nlet warnedOnceTabPresent = false;\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabs'\n  });\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const {\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      action,\n      centered = false,\n      children: childrenProp,\n      className,\n      component = 'div',\n      allowScrollButtonsMobile = false,\n      indicatorColor = 'primary',\n      onChange,\n      orientation = 'horizontal',\n      ScrollButtonComponent = TabScrollButton,\n      scrollButtons = 'auto',\n      selectionFollowsFocus,\n      TabIndicatorProps = {},\n      TabScrollButtonProps = {},\n      textColor = 'primary',\n      value,\n      variant = 'standard',\n      visibleScrollbar = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const scrollable = variant === 'scrollable';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n  const ownerState = _extends({}, props, {\n    component,\n    allowScrollButtonsMobile,\n    indicatorColor,\n    orientation,\n    vertical,\n    scrollButtons,\n    textColor,\n    variant,\n    visibleScrollbar,\n    fixed: !scrollable,\n    hideScrollbar: scrollable && !visibleScrollbar,\n    scrollableX: scrollable && !vertical,\n    scrollableY: scrollable && vertical,\n    centered: centered && !scrollable,\n    scrollButtonsHideMobile: !allowScrollButtonsMobile\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('MUI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState(defaultIndicatorStyle);\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect();\n      // create a new object with ClientRect class props + scrollLeft\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n    let tabMeta;\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`MUI: The \\`value\\` provided to the Tabs component is invalid.`, `None of the Tabs' children match with \"${value}\".`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n        if (process.env.NODE_ENV !== 'production') {\n          if (process.env.NODE_ENV !== 'test' && !warnedOnceTabPresent && tabMeta && tabMeta.width === 0 && tabMeta.height === 0 &&\n          // if the whole Tabs component is hidden, don't warn\n          tabsMeta.clientWidth !== 0) {\n            tabsMeta = null;\n            console.error(['MUI: The `value` provided to the Tabs component is invalid.', `The Tab with this \\`value\\` (\"${value}\") is not part of the document layout.`, \"Make sure the tab item is present in the document or that it's not `display: none`.\"].join('\\n'));\n            warnedOnceTabPresent = true;\n          }\n        }\n      }\n    }\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n    let startIndicator;\n    if (vertical) {\n      startIndicator = 'top';\n      if (tabMeta && tabsMeta) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      }\n    } else {\n      startIndicator = isRtl ? 'right' : 'left';\n      if (tabMeta && tabsMeta) {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = (isRtl ? -1 : 1) * (tabMeta[startIndicator] - tabsMeta[startIndicator] + correction);\n      }\n    }\n    const newIndicatorStyle = {\n      [startIndicator]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    };\n\n    // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(indicatorStyle[startIndicator]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[startIndicator] - newIndicatorStyle[startIndicator]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n  const scroll = (scrollValue, {\n    animation = true\n  } = {}) => {\n    if (animation) {\n      animate(scrollStart, tabsRef.current, scrollValue, {\n        duration: theme.transitions.duration.standard\n      });\n    } else {\n      tabsRef.current[scrollStart] = scrollValue;\n    }\n  };\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1);\n      // Fix for Edge\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n    scroll(scrollValue);\n  };\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n      if (totalSize + tab[clientSize] > containerSize) {\n        // If the first item is longer than the container size, then only scroll\n        // by the container size.\n        if (i === 0) {\n          totalSize = containerSize;\n        }\n        break;\n      }\n      totalSize += tab[clientSize];\n    }\n    return totalSize;\n  };\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  };\n\n  // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(TabsScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end\n    }, TabScrollButtonProps, {\n      className: clsx(classes.scrollButtons, TabScrollButtonProps.className)\n    })) : null;\n    return conditionalElements;\n  };\n  const scrollSelectedIntoView = useEventCallback(animation => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart, {\n        animation\n      });\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction);\n        // use 1 for the potential rounding error with browser zooms.\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      // If the Tabs component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/33276\n      // TODO: Add tests that will ensure the component is not failing when\n      // replaced by Suspense with a fallback, once React is updated to version 18\n      if (tabsRef.current) {\n        updateIndicatorState();\n        updateScrollButtonState();\n      }\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      Array.from(tabListRef.current.children).forEach(child => {\n        resizeObserver.observe(child);\n      });\n    }\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\n    updateScrollButtonState();\n  }), [updateScrollButtonState]);\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    // Don't animate on the first render.\n    scrollSelectedIntoView(defaultIndicatorStyle !== indicatorStyle);\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const indicator = /*#__PURE__*/_jsx(TabsIndicator, _extends({}, TabIndicatorProps, {\n    className: clsx(classes.indicator, TabIndicatorProps.className),\n    ownerState: ownerState,\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n  const handleKeyDown = event => {\n    const list = tabListRef.current;\n    const currentFocus = ownerDocument(list).activeElement;\n    // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n    const role = currentFocus.getAttribute('role');\n    if (role !== 'tab') {\n      return;\n    }\n    let previousItemKey = orientation === 'horizontal' ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation === 'horizontal' ? 'ArrowRight' : 'ArrowDown';\n    if (orientation === 'horizontal' && isRtl) {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n    switch (event.key) {\n      case previousItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, previousItem);\n        break;\n      case nextItemKey:\n        event.preventDefault();\n        moveFocus(list, currentFocus, nextItem);\n        break;\n      case 'Home':\n        event.preventDefault();\n        moveFocus(list, null, nextItem);\n        break;\n      case 'End':\n        event.preventDefault();\n        moveFocus(list, null, previousItem);\n        break;\n      default:\n        break;\n    }\n  };\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(TabsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    as: component\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(TabsScroller, {\n      className: classes.scroller,\n      ownerState: ownerState,\n      style: {\n        overflow: scrollerStyle.overflow,\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n      },\n      ref: tabsRef,\n      onScroll: handleTabsScroll,\n      children: [/*#__PURE__*/_jsx(FlexContainer, {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: classes.flexContainer,\n        ownerState: ownerState,\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the tabs are centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Determines the color of the indicator.\n   * @default 'primary'\n   */\n  indicatorColor: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes /* @typescript-to-proptypes-ignore */.oneOf(['auto', false, true]),\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n  /**\n   * Props applied to the [`TabScrollButton`](/material-ui/api/tab-scroll-button/) element.\n   * @default {}\n   */\n  TabScrollButtonProps: PropTypes.object,\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'primary'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n  /**\n   * If `true`, the scrollbar is visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default Tabs;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTabUtilityClass(slot) {\n  return generateUtilityClass('MuiTab', slot);\n}\nconst tabClasses = generateUtilityClasses('MuiTab', ['root', 'labelIcon', 'textColorInherit', 'textColorPrimary', 'textColorSecondary', 'selected', 'disabled', 'fullWidth', 'wrapped', 'iconWrapper']);\nexport default tabClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"icon\", \"iconPosition\", \"indicator\", \"label\", \"onChange\", \"onClick\", \"onFocus\", \"selected\", \"selectionFollowsFocus\", \"textColor\", \"value\", \"wrapped\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport tabClasses, { getTabUtilityClass } from './tabClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    textColor,\n    fullWidth,\n    wrapped,\n    icon,\n    label,\n    selected,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', icon && label && 'labelIcon', `textColor${capitalize(textColor)}`, fullWidth && 'fullWidth', wrapped && 'wrapped', selected && 'selected', disabled && 'disabled'],\n    iconWrapper: ['iconWrapper']\n  };\n  return composeClasses(slots, getTabUtilityClass, classes);\n};\nconst TabRoot = styled(ButtonBase, {\n  name: 'MuiTab',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.label && ownerState.icon && styles.labelIcon, styles[`textColor${capitalize(ownerState.textColor)}`], ownerState.fullWidth && styles.fullWidth, ownerState.wrapped && styles.wrapped];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.button, {\n  maxWidth: 360,\n  minWidth: 90,\n  position: 'relative',\n  minHeight: 48,\n  flexShrink: 0,\n  padding: '12px 16px',\n  overflow: 'hidden',\n  whiteSpace: 'normal',\n  textAlign: 'center'\n}, ownerState.label && {\n  flexDirection: ownerState.iconPosition === 'top' || ownerState.iconPosition === 'bottom' ? 'column' : 'row'\n}, {\n  lineHeight: 1.25\n}, ownerState.icon && ownerState.label && {\n  minHeight: 72,\n  paddingTop: 9,\n  paddingBottom: 9,\n  [`& > .${tabClasses.iconWrapper}`]: _extends({}, ownerState.iconPosition === 'top' && {\n    marginBottom: 6\n  }, ownerState.iconPosition === 'bottom' && {\n    marginTop: 6\n  }, ownerState.iconPosition === 'start' && {\n    marginRight: theme.spacing(1)\n  }, ownerState.iconPosition === 'end' && {\n    marginLeft: theme.spacing(1)\n  })\n}, ownerState.textColor === 'inherit' && {\n  color: 'inherit',\n  opacity: 0.6,\n  // same opacity as theme.palette.text.secondary\n  [`&.${tabClasses.selected}`]: {\n    opacity: 1\n  },\n  [`&.${tabClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  }\n}, ownerState.textColor === 'primary' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${tabClasses.selected}`]: {\n    color: (theme.vars || theme).palette.primary.main\n  },\n  [`&.${tabClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  }\n}, ownerState.textColor === 'secondary' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${tabClasses.selected}`]: {\n    color: (theme.vars || theme).palette.secondary.main\n  },\n  [`&.${tabClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  }\n}, ownerState.fullWidth && {\n  flexShrink: 1,\n  flexGrow: 1,\n  flexBasis: 0,\n  maxWidth: 'none'\n}, ownerState.wrapped && {\n  fontSize: theme.typography.pxToRem(12)\n}));\nconst Tab = /*#__PURE__*/React.forwardRef(function Tab(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTab'\n  });\n  const {\n      className,\n      disabled = false,\n      disableFocusRipple = false,\n      // eslint-disable-next-line react/prop-types\n      fullWidth,\n      icon: iconProp,\n      iconPosition = 'top',\n      // eslint-disable-next-line react/prop-types\n      indicator,\n      label,\n      onChange,\n      onClick,\n      onFocus,\n      // eslint-disable-next-line react/prop-types\n      selected,\n      // eslint-disable-next-line react/prop-types\n      selectionFollowsFocus,\n      // eslint-disable-next-line react/prop-types\n      textColor = 'inherit',\n      value,\n      wrapped = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disabled,\n    disableFocusRipple,\n    selected,\n    icon: !!iconProp,\n    iconPosition,\n    label: !!label,\n    fullWidth,\n    textColor,\n    wrapped\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = iconProp && label && /*#__PURE__*/React.isValidElement(iconProp) ? /*#__PURE__*/React.cloneElement(iconProp, {\n    className: clsx(classes.iconWrapper, iconProp.props.className)\n  }) : iconProp;\n  const handleClick = event => {\n    if (!selected && onChange) {\n      onChange(event, value);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleFocus = event => {\n    if (selectionFollowsFocus && !selected && onChange) {\n      onChange(event, value);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(TabRoot, _extends({\n    focusRipple: !disableFocusRipple,\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: \"tab\",\n    \"aria-selected\": selected,\n    disabled: disabled,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    ownerState: ownerState,\n    tabIndex: selected ? 0 : -1\n  }, other, {\n    children: [iconPosition === 'top' || iconPosition === 'start' ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [icon, label]\n    }) : /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [label, icon]\n    }), indicator]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tab.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  /**\n   * The position of the icon relative to the label.\n   * @default 'top'\n   */\n  iconPosition: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any,\n  /**\n   * Tab labels appear in a single row.\n   * They can use a second line if needed.\n   * @default false\n   */\n  wrapped: PropTypes.bool\n} : void 0;\nexport default Tab;","import React, { useCallback, useContext } from \"react\"\n\nimport { IconButton, Stack, TextField } from \"@mui/material\"\nimport DoneIcon from \"@mui/icons-material/Done\"\nimport CloseIcon from \"@mui/icons-material/Close\"\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport { users } from \"../../cslTypes/fieldsMapping\"\nimport { User } from \"../../cslTypes/type\"\n\nconst ActionButtons: React.FC<{\n  field: string\n  save: (e: React.MouseEvent) => void\n  close: () => void\n}> = ({ field, save, close }) => (\n  <Stack direction=\"row\">\n    <IconButton size=\"small\" value={field} onClick={save}>\n      <DoneIcon />\n    </IconButton>\n    <IconButton size=\"small\" onClick={close}>\n      <CloseIcon />\n    </IconButton>\n  </Stack>\n)\n\nconst ReferenceEdit: React.FC<{\n  field: string\n  value: string\n  closeEdit: () => void\n}> = ({ field, value, closeEdit }) => {\n  const { citationDao } = useContext(DBContext)\n  const { reference, setReference } = useContext(ManagerContext)\n\n  const onSaveClick = useCallback(\n    (e) => {\n      const updatedValue = e.currentTarget.parentNode.querySelector(\"input\").value\n      const key = e.currentTarget.value\n      if (!reference) return\n\n      citationDao.edit(reference.id, { ...reference, [key]: updatedValue })\n      setReference({ ...reference, [key]: updatedValue })\n      closeEdit()\n    },\n    [reference],\n  )\n\n  const onSaveDateClick = useCallback(\n    (e) => {\n      const dateParts: number[] = []\n      const dateFields =\n        e.currentTarget.parentNode.parentNode.querySelectorAll(\"input\")\n\n      dateFields.forEach((field: HTMLInputElement) => {\n        dateParts.push(parseInt(field.value))\n      })\n\n      if (!reference) return\n\n      citationDao.edit(reference.id, {\n        ...reference,\n        [e.currentTarget.value]: { \"date-parts\": [dateParts] },\n      })\n\n      setReference({\n        ...reference,\n        [e.currentTarget.value]: { \"date-parts\": [dateParts] },\n      })\n      closeEdit()\n    },\n    [reference],\n  )\n\n  const onSaveContributor = useCallback((e) => {\n    const users: User[] = []\n    const contributors = e.currentTarget.parentNode.parentNode.querySelectorAll(\n      `.${e.currentTarget.value}`,\n    )\n\n    contributors.forEach((contributor: HTMLElement) => {\n      const user: any = {}\n      contributor.querySelectorAll(\"input\").forEach((field) => {\n        user[field.id] = field.value\n      })\n      users.push(user)\n    })\n\n    if (!reference) return\n\n    citationDao.edit(reference.id, {\n      ...reference,\n      [e.currentTarget.value]: users,\n    })\n\n    setReference({\n      ...reference,\n      [e.currentTarget.value]: users,\n    })\n    closeEdit()\n  }, [])\n\n  if (!reference) return <></>\n\n  if (field in users) {\n    // @ts-ignore\n    const users = reference[field] as User[]\n    return (\n      <Stack spacing={1}>\n        {users.map(({ family, given }, index) => (\n          <Stack\n            className={`${field}`}\n            key={index.toString()}\n            direction=\"row\"\n            justifyContent=\"space-between\"\n            spacing={2}\n          >\n            <TextField\n              label=\"family\"\n              id=\"family\"\n              size=\"small\"\n              defaultValue={family}\n            />\n            <TextField label=\"given\" id=\"given\" size=\"small\" defaultValue={given} />\n          </Stack>\n        ))}\n        <ActionButtons field={field} save={onSaveContributor} close={closeEdit} />\n      </Stack>\n    )\n  }\n\n  switch (field) {\n    case \"issued\":\n    case \"accessed\": {\n      // @ts-ignore\n      const date = reference[field][\"date-parts\"][0] as string[]\n      return (\n        <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\n          {date[0] && <TextField label=\"year\" defaultValue={date[0]} size=\"small\" />}\n          {date[1] && (\n            <TextField label=\"month\" defaultValue={date[1]} size=\"small\" />\n          )}\n          {date[2] && (\n            <TextField label=\"day\" type=\"date\" defaultValue={date[2]} size=\"small\" />\n          )}\n          <ActionButtons field={field} save={onSaveDateClick} close={closeEdit} />\n        </Stack>\n      )\n    }\n    default:\n      return (\n        <TextField\n          size=\"small\"\n          defaultValue={value}\n          InputProps={{\n            endAdornment: (\n              <>\n                <IconButton size=\"small\" value={field} onClick={onSaveClick}>\n                  <DoneIcon />\n                </IconButton>\n                <IconButton size=\"small\" onClick={closeEdit}>\n                  <CloseIcon />\n                </IconButton>\n              </>\n            ),\n          }}\n        />\n      )\n  }\n}\n\nexport default ReferenceEdit\n","import React, { useCallback, useContext, useMemo, useState } from \"react\"\nimport {\n  Box,\n  Container,\n  IconButton,\n  Stack,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@mui/material\"\n\nimport EditIcon from \"@mui/icons-material/Edit\"\n\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport { users } from \"../../cslTypes/fieldsMapping\"\nimport { User } from \"../../cslTypes/type\"\nimport styled from \"@emotion/styled\"\n\nimport { NoReferenceSelected } from \"../../placeholders\"\n\nimport ReferenceEdit from \"./ReferenceEdit\"\n\nconst Metadata: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(\"1\")\n\n  const onChange = useCallback((e, value) => {\n    setSelectedTab(value)\n  }, [])\n\n  return (\n    <Container\n      disableGutters\n      maxWidth={false}\n      sx={{ bgcolor: \"white\", height: \"100%\", borderRadius: \"10px\" }}\n    >\n      <Box\n        sx={{\n          borderBottom: 2,\n          borderColor: \"divider\",\n          borderBottomColor: \"secondary.main\",\n        }}\n      >\n        <Tabs\n          value={selectedTab}\n          onChange={onChange}\n          sx={{ bgcolor: \"#817589\", borderRadius: \"10px 10px 0 0\" }}\n        >\n          <Tab label=\"Reference Data\" value=\"1\" />\n          {/* TODO:: add notes  */}\n        </Tabs>\n      </Box>\n      <TabPanel tab=\"1\" selectedTab={selectedTab}>\n        <ReferenceViewer />\n      </TabPanel>\n      {/* TODO:: add notes  */}\n    </Container>\n  )\n}\n\nconst TabPanel: React.FC<{ tab: string; selectedTab: string }> = ({\n  tab,\n  selectedTab,\n  children,\n}) => (\n  <div role=\"tabpanel\" hidden={tab !== selectedTab}>\n    {tab === selectedTab && children}\n  </div>\n)\n\nconst ReferenceViewer: React.FC = () => {\n  const { reference } = useContext(ManagerContext)\n\n  if (!reference)\n    return (\n      <Stack alignItems=\"center\">\n        <NoReferenceSelected />\n        <Typography variant=\"caption\" textAlign=\"center\" p={4}>\n          Click on the preview button for one of the reference list item to show full\n          reference data\n        </Typography>\n      </Stack>\n    )\n\n  const [editId, setEditId] = useState()\n\n  const onEditClick = useCallback((e) => {\n    setEditId(e.currentTarget.value)\n  }, [])\n\n  const closeEdit = useCallback(() => {\n    setEditId(undefined)\n  }, [])\n\n  const fieldWeights = {\n    title: 1,\n    \"container-title\": 5,\n    type: 2,\n    author: 3,\n    issued: 4,\n    accessed: 4,\n  }\n\n  /**\n   * Return a readable CSL citation to show it\n   */\n  const referenceFields = useMemo(\n    () =>\n      Object.entries(reference)\n        .map(([key, value]) => {\n          if (key === \"issued\" || key === \"accessed\") {\n            return {\n              key,\n              value: value[\"date-parts\"].reduce(\n                (p: string, c: number) => `${p}${(p.length && \"/\") || \"\"}${c}`,\n                \"\",\n              ),\n            }\n          }\n          if (key in users) {\n            return {\n              key,\n              value: value.reduce(\n                (p: string, { family, given }: User) => `${p} ${family} ${given}`,\n                \"\",\n              ),\n            }\n          }\n          return { key, value }\n        })\n        .filter(\n          ({ key }) =>\n            key !== \"id\" && key !== \"updatedTimestamp\" && key !== \"favorite\",\n        )\n        // @ts-ignore\n        .sort((a, b) => fieldWeights[a.key] - fieldWeights[b.key]),\n    [reference],\n  )\n\n  return (\n    <Table>\n      <tbody>\n        {referenceFields.map(({ key, value }) => (\n          <tr key={key}>\n            <TableData>\n              <FieldTitle>{key}</FieldTitle>\n            </TableData>\n            <TableData>\n              {(editId === key && (\n                <ReferenceEdit field={key} value={value} closeEdit={closeEdit} />\n              )) || (\n                <>\n                  <FieldValue>{value}</FieldValue>\n                  {key !== \"type\" && (\n                    <IconButton size=\"small\" value={key} onClick={onEditClick}>\n                      {/*  @ts-ignore */}\n                      <EditIcon fontSize=\"12px\" />\n                    </IconButton>\n                  )}\n                </>\n              )}\n            </TableData>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nconst Table = styled(\"table\")`\n  font-family: Noto Sans, sans-serif;\n  padding: 12px;\n`\n\nconst TableData = styled(\"td\")`\n  padding: 5px;\n`\n\nconst FieldTitle = styled(\"span\")`\n  font-size: 12px;\n  font-weight: bold;\n`\n\nconst FieldValue = styled(\"span\")`\n  font-size: 13px;\n  font-family: monospace;\n`\n\nexport default Metadata\n","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace'; // Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// We need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\n\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && event.ctrlKey === false && event.metaKey === false;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\n\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n\n  return contextValue;\n};","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    field,\n    id,\n    value: isChecked,\n    rowNode,\n    hasFocus,\n    tabIndex\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n\n  if (rowNode.position === 'footer') {\n    return null;\n  }\n\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n\n  if (rowNode.isPinned) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = cacheKey => {\n  if (typeof cacheKey !== 'undefined') {\n    if (cacheContainer.cache && cacheContainer.cache[cacheKey]) {\n      delete cacheContainer.cache[cacheKey];\n    }\n  } else {\n    cacheContainer.cache = null;\n  }\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);\n/**\n * @ignore - do not document.\n */\n\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsSelector = createSelector(gridAdditionalRowGroupsSelector, additionalRowGroups => additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows);\n/**\n * @ignore - do not document.\n */\n\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  return ((pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n\n  if (colCount === 0) {\n    return 0;\n  }\n\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\n\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n\n    if (!item.columnField) {\n      return false;\n    }\n\n    const column = columnLookup[item.columnField];\n\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n\n    if (!filterOperator) {\n      return false;\n    }\n\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\n\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\n\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment3;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    field,\n    colDef,\n    hasFocus,\n    debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n    isProcessingProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    var _rootProps$experiment2;\n\n    const newValue = event.target.value;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n\n    if (column.valueParser && (_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange, (_rootProps$experiment3 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment3.newEditingApi]);\n  const meta = apiRef.current.unstable_getEditCellMeta ? apiRef.current.unstable_getEditCellMeta(id, field) : {};\n  React.useEffect(() => {\n    if (meta.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta.changeReason, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object,\n  debounceMs: PropTypes.number,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]),\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\n\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n\n  if (!column) {\n    return null;\n  }\n\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n\n  if (comparatorList.length === 0) {\n    return null;\n  }\n\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n\n  return sortingOrder[currentIdx + 1];\n};\n\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n\n  return null;\n};\n\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  return 0;\n};","export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n} // Pseudo random number. See https://stackoverflow.com/a/47593316\n\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n\n  return JSON.parse(JSON.stringify(obj));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport default function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    var _previousProps$value;\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && (multiple ? previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : getOptionLabel((_previousProps$value = previousProps.value) != null ? _previousProps$value : '') === getOptionLabel(value != null ? value : ''))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value hasn't changed\n    // If it exists and the value hasn't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'filledPrimary', 'filledSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'deleteIconFilledColorPrimary', 'deleteIconFilledColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\", \"tabIndex\", \"skipFocusWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    iconColor,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(iconColor)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      iconColor,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(iconColor)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], styles[`${variant}${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  const textColor = theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300];\n  return _extends({\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: (theme.vars || theme).palette.text.primary,\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: (theme.vars || theme).palette.primary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: (theme.vars || theme).palette.secondary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.iconColor === ownerState.color && _extends({\n      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    })),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: (theme.vars || theme).palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: (theme.vars || theme).shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: (theme.vars || theme).palette[ownerState.color].main,\n  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n  const {\n      avatar: avatarProp,\n      className,\n      clickable: clickableProp,\n      color = 'default',\n      component: ComponentProp,\n      deleteIcon: deleteIconProp,\n      disabled = false,\n      icon: iconProp,\n      label,\n      onClick,\n      onDelete,\n      onKeyDown,\n      onKeyUp,\n      size = 'medium',\n      variant = 'filled',\n      tabIndex,\n      skipFocusWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    iconColor: /*#__PURE__*/React.isValidElement(iconProp) ? iconProp.props.color || color : color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n  if (onDelete) {\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    });\n  }\n  let avatar = null;\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n  let icon = null;\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    tabIndex: skipFocusWhenDisabled && disabled ? -1 : tabIndex,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * If `true`, allows the disabled chip to escape focus.\n   * If `false`, allows the disabled chip to receive focus.\n   * @default false\n   */\n  skipFocusWhenDisabled: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel = option => {\n        var _option$label;\n        return (_option$label = option.label) != null ? _option$label : option;\n      },\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridFilterInputMultipleValue(props) {\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\n\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridBooleanCellRaw = props => {\n  const {\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    field,\n    className,\n    hasFocus,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    select: true,\n    variant: \"standard\",\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\n\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\n\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const valueAsBoolean = filterItem.value === 'true';\n    return ({\n      value\n    }) => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  }, // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottom: `solid ${borderColor} 1px`,\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n\n  return gridStyle;\n});","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityHeaderGroupingMaxDepthSelector = createSelector(gridDensitySelector, density => density.headerGroupingMaxDepth);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);\nexport const gridDensityTotalHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight * (1 + density.headerGroupingMaxDepth));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityHeaderGroupingMaxDepthSelector, gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n\n  if (logger.current) {\n    return logger.current;\n  }\n\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.state);\n    }\n\n    return this.props.children;\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const errorState = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: errorState != null,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, errorState, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n\n    var element = this;\n    resetTriggers(this);\n\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n\n  var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n  var createStyles = function createStyles(doc, root) {\n    if (!root.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          container = root.constructor.name === 'ShadowRoot' ? root : doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      container.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n\n      createStyles(doc, element.getRootNode());\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n\n    element.__resizeListeners__.push(fn);\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Function responsible for rendering children.\n   * @param {AutoSizerSize} size The grid's size.\n   * @returns {React.ReactNode} The children to render.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: totalHeaderHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []);\n  React.useEffect(() => {\n    setIsVirtualizationDisabled(rootProps.disableVirtualization);\n  }, [rootProps.disableVirtualization]); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - totalHeaderHeight : 'auto',\n          marginTop: totalHeaderHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n\n  if (rootProps.hideFooter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = ({\n  apiRef,\n  props,\n  children\n}) => {\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  reset() {}\n\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact, // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n\n      return () => {\n        var _subscription$current2;\n\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n\n    if (!collection) {\n      return;\n    }\n\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nimport { unstable_resetCreateSelectorCache } from '../../utils/createSelector';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      unstable_resetCreateSelectorCache(api.instanceId);\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n            otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n\n    const groupCache = strategiesCache.current[processorName];\n\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n      stateId\n    } = controlStateItem,\n          others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (newSubState === oldSubState) {\n        return;\n      }\n\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState,\n    unstable_registerControlState: registerControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    if (props.error) {\n      handleError({\n        error: props.error\n      });\n    } else {\n      handleError(null);\n    }\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n\n    return props.localeText[key];\n  }, [props.localeText]);\n  const localeTextApi = {\n    getLocaleText\n  };\n  useGridApiMethod(apiRef, localeTextApi, 'LocaleTextApi');\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\n\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\n\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n\n  if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n    return true;\n  }\n\n  if (!element) {\n    return false;\n  }\n\n  if ((element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback((includeHeaders = false) => {\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderFocus = React.useCallback((params, event) => {\n    // Check if the column menu button received focus\n    if (!event.target.classList.contains(gridClasses.menuIconButton)) {\n      return;\n    } // Check if there's an element which lost focus\n\n\n    if (!event.relatedTarget) {\n      return;\n    } // `true` if the focus was on the column menu itself, not on any item\n\n\n    const columnMenuLostFocus = event.relatedTarget.classList.contains(gridClasses.menuList); // `true` if the focus was on an item from the column menu\n\n    const columnMenuItemLostFocus = event.relatedTarget.getAttribute('role') === 'menuitem';\n\n    if (columnMenuLostFocus || columnMenuItemLostFocus) {\n      apiRef.current.setColumnHeaderFocus(params.field);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\n\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n\n  return Number(value);\n};\n\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\n\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    InputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\n\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return ({\n    value\n  }) => {\n    if (!value) {\n      return false;\n    }\n\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\n\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditDateCell(props) {\n  const {\n    id,\n    value: valueProp,\n    field,\n    colDef,\n    hasFocus,\n    inputProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n\n    let formattedDate;\n\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n      newParsedDate.setHours(0, 0, 0, 0);\n\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\n\nvar GridCellModes;\n\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\n\nvar GridRowModes;\n\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\n\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\n\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\n\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    row,\n    colDef,\n    hasFocus,\n    error,\n    onValueChange,\n    initialOpen = rootProps.editMode === GridEditModes.Cell\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n\n  const handleChange = async event => {\n    var _rootProps$experiment;\n\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n\n    const canCommit = await Promise.resolve(apiRef.current.commitCellChange({\n      id,\n      field\n    }, event));\n\n    if (canCommit) {\n      apiRef.current.setCellMode(id, field, 'view');\n\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = apiRef.current.getCellParams(id, field);\n        apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        apiRef.current.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        apiRef.current.setCellMode(id, field, 'view');\n      }\n    }\n  };\n\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n\n    setOpen(true);\n  };\n\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    if (currentColumn === null) {\n      return undefined;\n    }\n\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\n\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    if (!(resolvedColumn != null && resolvedColumn.valueOptions)) {\n      return [];\n    }\n\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueOptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\n\nconst GridMenu = props => {\n  var _rootProps$components;\n\n  const {\n    open,\n    target,\n    onClickAway,\n    children,\n    position,\n    className,\n    onExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    } // Emit menuOpen or menuClose events\n\n\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [apiRef, open, target]);\n\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst hasActions = colDef => typeof colDef.getActions === 'function';\n\nconst GridActionsCell = props => {\n  const {\n    colDef,\n    id,\n    hasFocus,\n    tabIndex,\n    position = 'bottom-end',\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n\n  }), []);\n\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n\n  const hideMenu = () => {\n    setOpen(false);\n  };\n\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n\n    let newIndex = focusedButtonIndex;\n\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = (customColumnTypes = {}) => {\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n\n  Object.entries(customColumnTypes).forEach(([colType, colTypeDef]) => {\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n\n    loopOverFlexItems();\n  }\n\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n\n  const newColumnLookup = _extends({}, columnsState.lookup);\n\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  return columnTypes[type];\n};\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  shouldRegenColumnVisibilityModelFromColumns,\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n\n    };\n  }\n\n  let columnsToKeep = {};\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","var GridPreferencePanelsValue;\n\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\n\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  apiRef.current.unstable_caches.columns = {\n    isUsingColumnVisibilityModel\n  };\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState5, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _columnVisibilityMode;\n\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n\n    const newColumn = _extends({}, column, {\n      width\n    });\n\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _props$initialState$c2, _props$initialState4, _props$initialState4$;\n\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const shouldExportColumnVisibilityModel = // Always export if the `exportOnlyDirtyModels` property is activated\n      !context.exportOnlyDirtyModels || // Always export if the model is controlled\n      props.columnVisibilityModel != null || // Always export if the model has been initialized\n      // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n      Object.keys((_props$initialState$c2 = (_props$initialState4 = props.initialState) == null ? void 0 : (_props$initialState4$ = _props$initialState4.columns) == null ? void 0 : _props$initialState4$.columnVisibilityModel) != null ? _props$initialState$c2 : {}).length > 0 || // Always export if the model is not empty\n      Object.keys(columnVisibilityModelToExport).length > 0;\n\n      if (shouldExportColumnVisibilityModel) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState5 = props.initialState) == null ? void 0 : _props$initialState5.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const columnVisibilityModelToImport = apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\n\nexport { GridDensityTypes };","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n/**\n * A function used to process headerClassName params.\n */","import { createSelector } from '../../../utils/createSelector';\n\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsLookupSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping.lookup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector } from './gridColumnGroupsSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport function hasGroupPath(lookupElement) {\n  return lookupElement.groupPath !== undefined;\n}\n\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplet) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplet[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurrs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplet[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n\n    unwrappedGroupingModelToComplet[columnGroupNode.field] = parents;\n    return;\n  }\n\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplet);\n  });\n};\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\n\n\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\n\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n\n    const {\n      groupId,\n      children\n    } = node,\n          other = _objectWithoutPropertiesLoose(node, _excluded);\n\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n\n    const subTreeLookup = createGroupLookup(children);\n\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\n\nexport const columnGroupsStateInitializer = (state, props) => {\n  var _props$columnGrouping;\n\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      groupCollapsedModel: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\n\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _columnLookup$field$g, _columnLookup$field;\n\n    const columnLookup = gridColumnLookupSelector(apiRef);\n    return (_columnLookup$field$g = (_columnLookup$field = columnLookup[field]) == null ? void 0 : _columnLookup$field.groupPath) != null ? _columnLookup$field$g : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'GridColumnGroupingApi');\n  /**\n   * EFFECTS\n   */\n  // The effect does not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    var _props$experimentalFe, _props$columnGrouping2;\n\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return;\n    }\n\n    const groupLookup = createGroupLookup((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n    apiRef.current.setState(state => _extends({}, state, {\n      columnGrouping: _extends({}, state.columnGrouping, {\n        lookup: groupLookup\n      })\n    }));\n  }, [apiRef, props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { unwrapGroupingColumnModel } from '../columnGrouping/useGridColumnGrouping';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight, newMaxDepth) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMPACT_DENSITY_FACTOR\n      };\n\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        headerGroupingMaxDepth: newMaxDepth,\n        factor: 1\n      };\n  }\n};\n\nexport const densityStateInitializer = (state, props) => {\n  // TODO: think about improving this initialization. Could it be done in the useColumn initializer?\n  // TODO: manage to remove ts-ignore\n  let maxDepth;\n\n  if (props.columnGroupingModel == null || Object.keys(props.columnGroupingModel).length === 0) {\n    maxDepth = 0;\n  } else {\n    const unwrappedGroupingColumnModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    const columnsState = state.columns;\n    const visibleColumns = columnsState.all.filter(field => columnsState.columnVisibilityModel[field] !== false);\n\n    if (visibleColumns.length === 0) {\n      maxDepth = 0;\n    } else {\n      maxDepth = Math.max(...visibleColumns.map(field => {\n        var _unwrappedGroupingCol, _unwrappedGroupingCol2;\n\n        return (_unwrappedGroupingCol = (_unwrappedGroupingCol2 = unwrappedGroupingColumnModel[field]) == null ? void 0 : _unwrappedGroupingCol2.length) != null ? _unwrappedGroupingCol : 0;\n      }));\n    }\n  }\n\n  return _extends({}, state, {\n    density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight, maxDepth)\n  });\n};\nexport const useGridDensity = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const maxDepth = visibleColumns.length > 0 ? Math.max(...visibleColumns.map(column => {\n    var _column$groupPath$len, _column$groupPath;\n\n    return (_column$groupPath$len = (_column$groupPath = column.groupPath) == null ? void 0 : _column$groupPath.length) != null ? _column$groupPath$len : 0;\n  })) : 0;\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback((newDensity, newHeaderHeight = props.headerHeight, newRowHeight = props.rowHeight, newMaxDepth = maxDepth) => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight, newMaxDepth);\n\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight, maxDepth]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight, maxDepth);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight, maxDepth]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\n\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => {\n    var _rowTree$id$position;\n\n    return ((_rowTree$id$position = rowTree[id].position) != null ? _rowTree$id$position : 'body') === 'body';\n  });\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n      _excluded2 = [\"hideMenu\", \"options\"],\n      _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n\n  const {\n    hideMenu,\n    options\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n\n  const {\n    hideMenu,\n    options\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n    csvOptions = {},\n    printOptions = {},\n    excelOptions\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade;\n\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\n\nfunction getChromeVersion() {\n  const raw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n  return raw ? parseInt(raw[2], 10) : null;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]); // TODO move outside of this scope and remove React.useCallback\n\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n\n    const printDoc = printWindow.contentDocument;\n\n    if (!printDoc) {\n      return;\n    }\n\n    const totalHeaderHeight = gridDensityTotalHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const chromeVersion = getChromeVersion();\n\n    if (chromeVersion && chromeVersion >= 108) {\n      // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n      gridClone.style.contain = 'size';\n    }\n\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + totalHeaderHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow); // In test env, run the all pipeline without waiting for loading\n\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\n\nexport { GridLinkOperator };","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n\n  if (cleanItem.operatorValue == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.columnField];\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\n\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.columnField || !filterItem.operatorValue) {\n    return null;\n  }\n\n  const column = apiRef.current.getColumn(filterItem.columnField);\n\n  if (!column) {\n    return null;\n  }\n\n  let parsedValue;\n\n  if (column.valueParser) {\n    var _filterItem$value;\n\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n\n  const filterOperators = column.filterOperators;\n\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n  }\n\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n\n  const fn = rowId => {\n    const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n    return applyFilterOnRow(cellParams);\n  };\n\n  return {\n    fn,\n    item: newFilterItem\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n\n  if (appliers.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const resultPerItemId = {};\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers;\n    filteredAppliers.forEach(applier => {\n      resultPerItemId[applier.item.id] = applier.fn(rowId);\n    });\n    return resultPerItemId;\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = []\n  } = filterModel;\n\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n\n  if (sanitizedQuickFilterValues.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    const columnsFieldsToFilter = [];\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n        columnsFieldsToFilter.push(columnField);\n      }\n    });\n    const quickFilterValueResult = {};\n    sanitizedQuickFilterValues.forEach((value, index) => {\n      const isPassing = columnsFieldsToFilter.some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      });\n      quickFilterValueResult[value] = isPassing;\n    });\n    return quickFilterValueResult;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return (rowId, shouldApplyFilter) => ({\n    passingFilterItems: isRowMatchingFilterItems && isRowMatchingFilterItems(rowId, shouldApplyFilter),\n    passingQuickFilterValues: isRowMatchingQuickFilter && isRowMatchingQuickFilter(rowId, shouldApplyFilter)\n  });\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$linkOper;\n\n  const cleanedFilterItems = filterModel.items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  const cleanedAllFilterItemResults = allFilterItemResults.filter(result => result != null);\n  const cleanedAllQuickFilterResults = allQuickFilterResults.filter(result => result != null); // Defaultize operators\n\n  const quickFilterLogicOperator = (_filterModel$quickFil = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil : getDefaultGridFilterModel().quickFilterLogicOperator;\n  const linkOperator = (_filterModel$linkOper = filterModel.linkOperator) != null ? _filterModel$linkOper : getDefaultGridFilterModel().linkOperator; // get result for filter items model\n\n  if (cleanedAllFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedAllFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n\n    if (linkOperator === GridLinkOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  } // get result for quick filter model\n\n\n  if (cleanedAllQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedAllQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$, _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n\n        if (item.value !== undefined) {\n          return true;\n        }\n\n        const column = apiRef.current.getColumn(item.columnField);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operatorValue);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue; // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n\n        if (requiresFilterValue) {\n          return false;\n        }\n\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      }\n\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the model is controlled\n    props.filterModel != null || // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.filter) == null ? void 0 : _props$initialState2$.filterModel) != null || // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.filter) == null ? void 0 : _props$initialState3$.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n\n    if (filterModel == null) {\n      return params;\n    }\n\n    apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        let isRowPassing;\n\n        if (typeof rowId === 'string' && rowId.startsWith('auto-generated-group-footer')) {\n          isRowPassing = true;\n        } else {\n          const {\n            passingFilterItems,\n            passingQuickFilterValues\n          } = params.isRowMatchingFilters(rowId);\n          isRowPassing = passFilterLogic([passingFilterItems], [passingQuickFilterValues], params.filterModel, apiRef);\n        }\n\n        filteredRowsLookup[rowId] = isRowPassing;\n      }\n\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n\n      return;\n    }\n\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate(); // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n\n    const cell = gridFocusCellSelector(apiRef);\n\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\n\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.unstable_moveFocusToRelativeCell()\n   */\n\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    } // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n\n\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex].id;\n  }, [currentPageRows]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // TODO v6: Remove Enter case because `cellNavigationKeyDown` is not fired by the new editing API\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          const field = params.field;\n\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n\n          const colDef = params.colDef;\n\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, goToCell, goToHeader, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\n\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  previousTree,\n  rowCountProp,\n  loadingProp\n}) => {\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n        cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null && !node.isPinned).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\n\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the page size is controlled\n    props.pageSize != null || // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null || // Export if the page size is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  return 0;\n};\n\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\n\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\n\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the page is controlled\n    props.page != null || // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null || // Export if the page is not equal to the default value\n    pageToExport !== 0;\n\n    if (!shouldExportPage) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null || // Always export if the panel is opened\n    preferencePanelToExport.open;\n\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\n\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\n\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback((params, event = {}) => {\n    var _props$experimentalFe;\n\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n\n    let hasError = !!editCellProps.error;\n\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n\n          if (newEditCellProps.error) {\n            return false;\n          }\n\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n\n    if (!isEditMode && isCellEnterEditModeKeys(event) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n\n      if (!isValid) {\n        return;\n      }\n    }\n\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n\n    if (isKeyboardEvent(event) && isPrintableKey(event)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback((id, event = {}) => {\n    var _props$experimentalFe;\n\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n\n    if (hasFieldWithError) {\n      return false;\n    }\n\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n\n        if (editCellProps.error) {\n          isValid = false;\n        }\n\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      let rowUpdate = _extends({}, row);\n\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_registerControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !params.rowNode.isPinned && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback((params, event = {}) => {\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import * as React from 'react';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\n\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import * as React from 'react';\nimport useEnhancedEffect from './useEnhancedEffect';\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport default function useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n      _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n\n    if (reason === GridCellEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startCellEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startCellEditModeParams.deleteValue = true;\n      }\n    } else if (reason === GridCellEditStartReasons.deleteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (editingState[id][field].isProcessingProps && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n            otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n\n      newModel[id] = otherFields;\n\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n    }\n\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit; // Revert the mode in the cellModesModel prop back to \"edit\"\n\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id, _editingState$id$fiel;\n\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id$fiel = _editingState$id[field]) != null && _editingState$id$fiel.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopCellEditMode may change it later\n\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _copyOfPrevCellModes$2, _idToIdLookup$id;\n\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null ? void 0 : (_copyOfPrevCellModes$2 = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\n\nvar GridRowEditStopReasons;\n\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n      _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n\n      focusTimeout.current = null;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        } // The row may already changed its mode\n\n\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (event.key === ' ' && event.shiftKey) {\n        return; // Shift + Space is used to select the row\n      }\n\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          key: event.key,\n          reason\n        });\n\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n\n    if (reason === GridRowEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('18')) {\n        startRowEditModeParams.initialValue = key; // In React 17, cleaning the input is enough\n      } else {\n        startRowEditModeParams.deleteValue = !!field;\n      }\n    } else if (reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (!ignoreModifications && !props.disableIgnoreModificationsIfProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef, props.disableIgnoreModificationsIfProcessingProps]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n\n      let newValue = apiRef.current.getCellValue(id, field);\n\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit; // Revert the mode in the rowModesModel prop back to \"edit\"\n\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n\n    return new Promise(resolve => {\n      const promises = [];\n\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n\n        const _editingState$id = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n\n        const fieldColumn = apiRef.current.getColumn(thisField);\n\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n        const _editingState$id2 = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n\n    let rowUpdate = _extends({}, row);\n\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopRowEditMode may change it later\n\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    if (params.rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return {\n      changeReason: editingState[id][field].changeReason\n    };\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector, gridRowsIdToIdLookupSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      previousTree: null,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {// Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          previousTree: gridRowTreeSelector(apiRef),\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n\n    apiRef.current.unstable_caches.rows = newCache;\n\n    if (!throttle) {\n      run();\n      return;\n    }\n\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.unstable_caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange(cache, true);\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n\n    const uniqueUpdates = new Map();\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n\n      if (uniqueUpdates.has(id)) {\n        uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n      } else {\n        uniqueUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const prevCache = apiRef.current.unstable_caches.rows;\n    const newCache = {\n      rowsBeforePartialUpdates: prevCache.rowsBeforePartialUpdates,\n      loadingPropBeforePartialUpdates: prevCache.loadingPropBeforePartialUpdates,\n      rowCountPropBeforePartialUpdates: prevCache.rowCountPropBeforePartialUpdates,\n      idRowsLookup: _extends({}, prevCache.idRowsLookup),\n      idToIdLookup: _extends({}, prevCache.idToIdLookup),\n      ids: [...prevCache.ids]\n    };\n    uniqueUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newCache.idRowsLookup[id];\n        delete newCache.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n\n      const oldRow = apiRef.current.getRow(id);\n\n      if (!oldRow) {\n        newCache.idRowsLookup[id] = partialRow;\n        newCache.idToIdLookup[id] = id;\n        newCache.ids.push(id);\n        return;\n      }\n\n      newCache.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n\n    if (deletedRowIds.length > 0) {\n      newCache.ids = newCache.ids.filter(id => !deletedRowIds.includes(id));\n    }\n\n    throttledRowsChange(newCache, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n\n    if (applySorting) {\n      const groupNode = tree[groupId];\n\n      if (!groupNode) {\n        return [];\n      }\n\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    if (newRows.length === 0) {\n      return;\n    }\n\n    const allRows = gridRowIdsSelector(apiRef);\n    const updatedRows = [...allRows];\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef);\n    const tree = gridRowTreeSelector(apiRef);\n\n    const updatedIdRowsLookup = _extends({}, idRowsLookup);\n\n    const updatedIdToIdLookup = _extends({}, idToIdLookup);\n\n    const updatedTree = _extends({}, tree);\n\n    const newRowEntries = newRows.map(newRowModel => {\n      const rowId = getRowIdFromRowModel(newRowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      return {\n        id: rowId,\n        model: newRowModel\n      };\n    });\n    newRowEntries.forEach((row, index) => {\n      const [replacedRowId] = updatedRows.splice(firstRowToRender + index, 1, row.id);\n      delete updatedIdRowsLookup[replacedRowId];\n      delete updatedIdToIdLookup[replacedRowId];\n      delete updatedTree[replacedRowId];\n    });\n    newRowEntries.forEach(row => {\n      const rowTreeNodeConfig = {\n        id: row.id,\n        parent: null,\n        depth: 0,\n        groupingKey: null,\n        groupingField: null\n      };\n      updatedIdRowsLookup[row.id] = row.model;\n      updatedIdToIdLookup[row.id] = row.id;\n      updatedTree[row.id] = rowTreeNodeConfig;\n    });\n    apiRef.current.unstable_caches.rows.idRowsLookup = updatedIdRowsLookup;\n    apiRef.current.unstable_caches.rows.idToIdLookup = updatedIdToIdLookup;\n    apiRef.current.unstable_caches.rows.ids = updatedRows;\n    apiRef.current.setState(state => {\n      const newRowsState = {\n        idRowsLookup: updatedIdRowsLookup,\n        idToIdLookup: updatedIdToIdLookup,\n        tree: updatedTree,\n        ids: updatedRows\n      };\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, newRowsState, {\n          groupingResponseBeforeRowHydration: _extends({}, state.rows.groupingResponseBeforeRowHydration, newRowsState)\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren,\n    unstable_replaceRows: replaceRows\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = apiRef.current.unstable_caches.rows;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n\n    throttledRowsChange(cache, false);\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  /**\n   * APPLIERS\n   */\n\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, apiRef.current.unstable_applyPipeProcessors('hydrateRows', state.rows.groupingResponseBeforeRowHydration))\n    }));\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    const areNewRowsAlreadyInState = apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates === props.rowCount; // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.unstable_caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n\n      return;\n    }\n\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\n\nconst flatRowTreeCreationMethod = ({\n  ids,\n  idRowsLookup,\n  idToIdLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId] && previousTree[rowId].depth === 0 && previousTree[rowId].parent == null && // pinned row can be unpinned\n    !previousTree[rowId].isPinned) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\n\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\n\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\n\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\n\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\n\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\n\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\n\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback((...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n\n    return apiRef.current.getCellValue(...args);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n\n      return rowModel[field];\n    }\n\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\n\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n\n  return [selectionModelProp];\n};\n\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    pagination,\n    paginationMode,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n\n      if (startIndex === endIndex) {\n        return;\n      }\n\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if ((rowNode == null ? void 0 : rowNode.position) === 'footer' || rowNode != null && rowNode.isPinned) {\n      return false;\n    }\n\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n\n    lastRowToggled.current = id;\n\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n\n      if (isSelected) {\n        newSelection.push(id);\n      }\n\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n\n    if (disableSelectionOnClick) {\n      return;\n    }\n\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    const rowNode = apiRef.current.getRowNode(params.id);\n\n    if (rowNode.isPinned) {\n      return;\n    }\n\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'rowClick', handleRowClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // props.isRowSelectable changed\n\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, {\n        id\n      }) => {\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(id);\n        }\n\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3, _props$initialState3$;\n\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n\n    if (existing) {\n      var _col$sortingOrder;\n\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2, _props$initialState2$;\n\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel = // Always export if the `exportOnlyDirtyModels` property is activated\n    !context.exportOnlyDirtyModels || // Always export if the model is controlled\n    props.sortModel != null || // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.sorting) == null ? void 0 : _props$initialState2$.sortModel) != null || // Export if the model is not empty\n    sortModelToExport.length > 0;\n\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.sorting) == null ? void 0 : _props$initialState3$.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n\n    if (sortModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n\n    if (!params.sortRowList) {\n      const bodyRowIds = [];\n      const footerRowIds = [];\n      gridRowIdsSelector(apiRef).forEach(rowId => {\n        if (rowTree[rowId].isPinned) {\n          return;\n        }\n\n        if (rowTree[rowId].position === 'footer') {\n          footerRowIds.push(rowId);\n        } else {\n          bodyRowIds.push(rowId);\n        }\n      });\n      return [...bodyRowIds, ...footerRowIds];\n    }\n\n    const bodyRows = [];\n    const footerRowIds = [];\n    Object.values(rowTree).forEach(rowNode => {\n      if (rowNode.isPinned) {\n        return;\n      }\n\n      if (rowNode.position === 'footer') {\n        footerRowIds.push(rowNode.id);\n      } else {\n        bodyRows.push(rowNode);\n      }\n    });\n    return [...params.sortRowList(bodyRows), ...footerRowIds];\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = windowRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = windowRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityTotalHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\n\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\n\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n\n    let scrollBarSize;\n\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > rootDimensionsRef.current.width;\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height - totalHeaderHeight\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: viewportOuterSize.width,\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, totalHeaderHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { debounce, capitalize } from '@mui/material/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef({}); // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const rowHeightFromDensity = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n\n    hasRowWithAutoHeight.current = false;\n    const densityFactor = gridDensityFactorSelector(apiRef.current.state, apiRef.current.instanceId);\n\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeightFromDensity\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = rowHeightFromDensity;\n      const existingBaseRowHeight = sizes.baseCenter;\n\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeightFromDensity; // If the row was not measured yet use the estimated row height\n\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeightFromDensity;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns null or undefined.\n          baseRowHeight = rowHeightFromUser != null ? rowHeightFromUser : rowHeightFromDensity;\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n\n      const existingBaseSizes = Object.entries(sizes).reduce((acc, [key, size]) => {\n        if (/^base[A-Z]/.test(key)) {\n          acc[key] = size;\n        }\n\n        return acc;\n      }, {}); // We use an object to make simple to check if a height is already added or not\n\n      const initialHeights = _extends({}, existingBaseSizes, {\n        baseCenter: baseRowHeight\n      });\n\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      Object.entries(processedSizes).forEach(([size, value]) => {\n        if (/^base[A-Z]/.test(size)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      });\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null ? void 0 : (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null ? void 0 : (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeightFromDensity, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeightFromDensity;\n  }, [rowHeightFromDensity]);\n\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    } // Only trigger hydration if the value is different, otherwise we trigger a loop\n\n\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeightFromDensity, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getLastMeasuredRowIndex: getLastMeasuredRowIndex,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_rowHasAutoHeight: rowHasAutoHeight,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridColumnGroupingPreProcessors } from '../hooks/features/columnGrouping/useGridColumnGroupingPreProcessors';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridColumnGroupingPreProcessors(apiRef, props);\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { unwrapGroupingColumnModel, hasGroupPath } from './useGridColumnGrouping';\nexport const useGridColumnGroupingPreProcessors = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const addHeaderGroups = React.useCallback(columnsState => {\n    var _props$experimentalFe;\n\n    if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n      return columnsState;\n    }\n\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel);\n    columnsState.all.forEach(field => {\n      var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n\n      const newGroupPath = (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n      const lookupElement = columnsState.lookup[field];\n\n      if (hasGroupPath(lookupElement) && isDeepEqual(newGroupPath, lookupElement == null ? void 0 : lookupElement.groupPath)) {\n        // Avoid modifying the pointer to allow shadow comparison in https://github.com/mui/mui-x/blob/f90afbf10a1264ee8b453d7549dd7cdd6110a4ed/packages/grid/x-data-grid/src/hooks/features/columns/gridColumnsUtils.ts#L446:L453\n        return;\n      }\n\n      columnsState.lookup[field] = _extends({}, columnsState.lookup[field], {\n        groupPath: (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod2 : []\n      });\n    });\n    return columnsState;\n  }, [props.columnGroupingModel, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.columnGrouping]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', addHeaderGroups);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n\n    let width = column.computedWidth;\n\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  var _rootProps$experiment;\n\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    colSpan,\n    disableDragEvents,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n\n  };\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n\n  const renderChildren = () => {\n    if (children == null) {\n      const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n      return /*#__PURE__*/_jsx(\"div\", {\n        title: valueString,\n        className: classes.content,\n        children: valueString\n      });\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n\n    return children;\n  };\n\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  disableDragEvents: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.any,\n  hasFocus: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridSkeletonCell(props) {\n  const {\n    align,\n    width,\n    contentWidth\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n\n  if (!counter) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n    hideMenu,\n    open,\n    id,\n    labelledby,\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SortGridMenuItems(props) {\n  var _column$sortingOrder;\n\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes(null) ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }) : null, sortingOrder.includes('asc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }) : null, sortingOrder.includes('desc') ? /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    }) : null]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n    className,\n    rowCount,\n    visibleRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  if (rowCount === 0) {\n    return null;\n  }\n\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n    className,\n    selectedRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 4,\n  // should be above pinned columns, pinned rows and detail panel\n  width: '100%',\n  height: '100%',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n}));\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n      align = 'inherit',\n      className,\n      component: componentProp,\n      padding: paddingProp,\n      scope: scopeProp,\n      size: sizeProp,\n      sortDirection,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n      backIconButtonProps,\n      count,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const theme = useTheme();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\n\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !SelectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\n\nfunction GridPanelContent(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nfunction GridPanelFooter(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\n\nconst isEnabled = () => true;\n\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n    className,\n    slotProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TrapFocus, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root)\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  })\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"linkOperators\", \"columnsSort\", \"deleteIconProps\", \"linkOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n      _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n\n  const {\n    InputComponentProps\n  } = valueInputProps,\n        valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLinkOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  linkOperatorInputProps: PropTypes.any,\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n\n  const {\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    filterFormProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n\n    if (!defaultItem) {\n      return;\n    }\n\n    apiRef.current.upsertFilterItems([...items, defaultItem]);\n  };\n\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {})\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\n\nfunction GridPanelHeader(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\n\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\n\nfunction GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n      const newModel = _extends({}, currentModel);\n\n      columns.forEach(col => {\n        if (col.hideable) {\n          if (isVisible) {\n            // delete the key from the model instead of setting it to `true`\n            delete newModel[col.field];\n          } else {\n            newModel[col.field] = false;\n          }\n        }\n      });\n      return apiRef.current.setColumnVisibilityModel(newModel);\n    } // TODO v6: Remove\n\n\n    return apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return sortedColumns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return sortedColumns.filter(column => searchPredicate(column, searchValueToCheck));\n  }, [sortedColumns, searchValue, searchPredicate]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  autoFocusSearchField: PropTypes.bool,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.shape({\n    TrapFocus: PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableAutoFocus: PropTypes.bool,\n      disableEnforceFocus: PropTypes.bool,\n      disableRestoreFocus: PropTypes.bool,\n      getTabbable: PropTypes.func,\n      isEnabled: PropTypes.func,\n      open: PropTypes.bool.isRequired\n    })\n  }),\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n\n  if (!anchorEl) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"],\n      _excluded2 = [\"changeReason\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, useForkRef } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridDensityHeaderGroupingMaxDepthSelector } from '../hooks/features/density/densitySelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    position,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId); // pinned rows are not part of the visible rows\n\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const getCell = React.useCallback((column, cellProps) => {\n    var _rootProps$components;\n\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellStateRest, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    return /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n      value: cellParams.value,\n      field: column.field,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      formattedValue: cellParams.formattedValue,\n      align: column.align || 'left',\n      cellMode: cellParams.cellMode,\n      colIndex: cellProps.indexRelativeToAllColumns,\n      isEditable: cellParams.isEditable,\n      hasFocus: hasFocus,\n      tabIndex: tabIndex,\n      className: clsx(classNames),\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n      children: content\n    }), column.field);\n  }, [apiRef, cellTabIndex, editRowsState, cellFocus, rootProps, row, rowHeight, rowId, treeDepth, sortModel.length]);\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n  let minHeight = rowHeight;\n\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n\n      if (!isBaseHeight) {\n        return acc;\n      }\n\n      numberOfBaseSizes += 1;\n\n      if (size > acc) {\n        return size;\n      }\n\n      return acc;\n    }, 0);\n\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight\n  });\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    let propertyValue = style[property]; // avoid overriding existing value\n\n    if (typeof propertyValue !== 'number') {\n      propertyValue = parseInt(propertyValue || '0', 10);\n    }\n\n    propertyValue += sizes.spacingBottom;\n    style[property] = propertyValue;\n  }\n\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (row) {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(rootProps.components.SkeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n    sortingOrder\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"error\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n    error\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: (error == null ? void 0 : error.message) || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridSkeletonCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton, GridSearchIcon } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  disableIgnoreModificationsIfProcessingProps: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(([key, defaultComponent]) => {\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n    className,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\n\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n\n  while (index < positions.length && positions[index] < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\n\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\n\nconst areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.unstable_getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    } // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n\n    const {\n      top,\n      left\n    } = scrollPosition.current; // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.unstable_rowHasAutoHeight(row.id);\n    }\n\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(left, columnPositions);\n      lastColumnIndex = binarySearch(left + containerDimensions.width, columnPositions);\n    }\n\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(params => {\n    setContainerDimensions({\n      width: params.width,\n      height: params.height\n    });\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n\n    setRenderContext(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContext, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, updateRenderContext]);\n\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n\n  const getRows = (params = {\n    renderContext\n  }) => {\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.unstable_calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5, _rootProps$components;\n\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.unstable_rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n\n      rows.push( /*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: baseRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: rowIndexOffset + ((currentPage == null ? void 0 : (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n\n    return rows;\n  };\n\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth > containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n\n  const rootStyle = {};\n\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n\n  if (rootProps.autoHeight) {\n    rootStyle.overflowY = 'hidden';\n  }\n\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (_ref = {}) => {\n      let {\n        style = {}\n      } = _ref,\n          other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: ({\n      style = {}\n    } = {}) => ({\n      style: _extends({}, style, contentSize)\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n    className,\n    disableVirtualization\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\n\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n\n  if (!iconElement) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\n\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(({\n  theme\n}) => ({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n    height,\n    side = GridColumnHeaderSeparatorSides.Right\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\n\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"disableHeaderSeparator\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n    classes,\n    columnMenuOpen,\n    colIndex,\n    height,\n    isResizing,\n    sortDirection,\n    hasFocus,\n    tabIndex,\n    separatorSide,\n    isDraggable,\n    headerComponent,\n    description,\n    width,\n    columnMenuIconButton = null,\n    columnMenu = null,\n    columnTitleIconButtons = null,\n    headerClassName,\n    label,\n    resizable,\n    draggableContainerProps,\n    columnHeaderSeparatorProps,\n    disableHeaderSeparator\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), !disableHeaderSeparator && /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _rootProps$components, _column$sortingOrder, _rootProps$components2, _column$headerName;\n\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder, [rootProps.disableColumnReorder, disableReorder, column.disableReorder]);\n  let headerComponent;\n\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: column.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.components.ColumnMenu,\n    contentComponentProps: (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnMenu,\n    onExited: handleExited\n  });\n\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  const label = (_column$headerName = column.headerName) != null ? _column$headerName : column.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: column.description,\n    elementId: column.field,\n    width: column.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!column.resizable,\n    \"data-field\": column.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId' + ''];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showRightBorder,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'withBorder', showColumnBorder && 'columnHeader--showColumnBorder', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnGroupHeader(props) {\n  var _apiRef$current$getRo, _columnGroupsLookup$g;\n\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    isLastColumn,\n    extendRowFullWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = {\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  };\n\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n  const showColumnBorder = rootProps.showColumnRightBorder;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, {\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: -1,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    disableHeaderSeparator: true\n  });\n}\n\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector, gridDensityHeaderGroupingMaxDepthSelector, gridDensityTotalHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { isDeepEqual } from '../../../utils/utils'; // TODO: add the possibility to switch this value if needed for customization\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MERGE_EMPTY_CELLS = true;\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const totalHeaderHeight = useGridSelector(apiRef, gridDensityTotalHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll); // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      children: columns\n    });\n  };\n\n  const getParents = (path = [], depth) => path.slice(0, depth + 1);\n\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      maxLastColumn\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _visibleColumns$first, _visibleColumns$first2, _visibleColumns$first3;\n\n      // Initialize the header line with a grouping item containing all the columns on the left of the virtualization which are in the same group as the first group to render\n      const initialHeader = [];\n      let leftOverflow = 0;\n      let columnIndex = firstColumnToRender - 1;\n      const firstColumnToRenderGroup = (_visibleColumns$first = visibleColumns[firstColumnToRender]) == null ? void 0 : (_visibleColumns$first2 = _visibleColumns$first.groupPath) == null ? void 0 : _visibleColumns$first2[depth]; // The array of parent is used to manage empty grouping cell\n      // When two empty grouping cell are next to each other, we merge them if the belong to the same group.\n\n      const firstColumnToRenderGroupParents = getParents((_visibleColumns$first3 = visibleColumns[firstColumnToRender]) == null ? void 0 : _visibleColumns$first3.groupPath, depth);\n\n      while (firstColumnToRenderGroup !== null && columnIndex >= minColumnIndex && (_visibleColumns$colum = visibleColumns[columnIndex]) != null && _visibleColumns$colum.groupPath && isDeepEqual(getParents((_visibleColumns$colum2 = visibleColumns[columnIndex]) == null ? void 0 : _visibleColumns$colum2.groupPath, depth), firstColumnToRenderGroupParents)) {\n        var _visibleColumns$colum, _visibleColumns$colum2, _column$computedWidth;\n\n        const column = visibleColumns[columnIndex];\n        leftOverflow += (_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0;\n\n        if (initialHeader.length === 0) {\n          var _column$computedWidth2;\n\n          initialHeader.push({\n            width: (_column$computedWidth2 = column.computedWidth) != null ? _column$computedWidth2 : 0,\n            fields: [column.field],\n            groupId: firstColumnToRenderGroup,\n            groupParents: firstColumnToRenderGroupParents,\n            colIndex: columnIndex\n          });\n        } else {\n          var _column$computedWidth3;\n\n          initialHeader[0].width += (_column$computedWidth3 = column.computedWidth) != null ? _column$computedWidth3 : 0;\n          initialHeader[0].fields.push(column.field);\n          initialHeader[0].colIndex = columnIndex;\n        }\n\n        columnIndex -= 1;\n      }\n\n      const depthInfo = renderedColumns.reduce((aggregated, column, i) => {\n        var _column$computedWidth7;\n\n        const lastItem = aggregated[aggregated.length - 1];\n\n        if (column.groupPath && column.groupPath.length > depth) {\n          var _column$computedWidth5;\n\n          if (lastItem && lastItem.groupId === column.groupPath[depth]) {\n            var _column$computedWidth4;\n\n            // Merge with the previous columns\n            return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n              width: lastItem.width + ((_column$computedWidth4 = column.computedWidth) != null ? _column$computedWidth4 : 0),\n              fields: [...lastItem.fields, column.field]\n            })];\n          } // Create a new grouping\n\n\n          return [...aggregated, {\n            groupId: column.groupPath[depth],\n            groupParents: getParents(column.groupPath, depth),\n            width: (_column$computedWidth5 = column.computedWidth) != null ? _column$computedWidth5 : 0,\n            fields: [column.field],\n            colIndex: firstColumnToRender + i\n          }];\n        }\n\n        if (MERGE_EMPTY_CELLS && lastItem && lastItem.groupId === null && isDeepEqual(getParents(column.groupPath, depth), lastItem.groupParents)) {\n          var _column$computedWidth6;\n\n          // We merge with previous column\n          return [...aggregated.slice(0, aggregated.length - 1), _extends({}, lastItem, {\n            width: lastItem.width + ((_column$computedWidth6 = column.computedWidth) != null ? _column$computedWidth6 : 0),\n            fields: [...lastItem.fields, column.field]\n          })];\n        } // We create new empty cell\n\n\n        return [...aggregated, {\n          groupId: null,\n          groupParents: getParents(column.groupPath, depth),\n          width: (_column$computedWidth7 = column.computedWidth) != null ? _column$computedWidth7 : 0,\n          fields: [column.field],\n          colIndex: firstColumnToRender + i\n        }];\n      }, initialHeader);\n      columnIndex = lastColumnToRender;\n      const lastColumnToRenderGroup = depthInfo[depthInfo.length - 1].groupId;\n\n      while (lastColumnToRenderGroup !== null && columnIndex < maxLastColumn && (_visibleColumns$colum3 = visibleColumns[columnIndex]) != null && _visibleColumns$colum3.groupPath && ((_visibleColumns$colum4 = visibleColumns[columnIndex]) == null ? void 0 : (_visibleColumns$colum5 = _visibleColumns$colum4.groupPath) == null ? void 0 : _visibleColumns$colum5[depth]) === lastColumnToRenderGroup) {\n        var _visibleColumns$colum3, _visibleColumns$colum4, _visibleColumns$colum5, _column$computedWidth8;\n\n        const column = visibleColumns[columnIndex];\n        depthInfo[depthInfo.length - 1].width += (_column$computedWidth8 = column.computedWidth) != null ? _column$computedWidth8 : 0;\n        depthInfo[depthInfo.length - 1].fields.push(column.field);\n        columnIndex += 1;\n      }\n\n      headerToRender.push({\n        leftOverflow,\n        elements: [...depthInfo]\n      });\n    }\n\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n            maxDepth: headerToRender.length,\n            height: headerHeight\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n  const {\n    isDragging,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, modification to a cell will not be discarded if the mode is changed from \"edit\" to \"view\" while processing props.\n   * @default false\n   */\n  disableIgnoreModificationsIfProcessingProps: PropTypes.bool,\n\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    columnGrouping: PropTypes.bool,\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n\n    return null;\n  },\n\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"componentsProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport { capitalize } from '@mui/material/utils';\nimport { gridColumnLookupSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridFilterActiveItemsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const {\n    componentsProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonProps = componentsProps.button || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n\n    const getOperatorLabel = item => lookup[item.columnField].filterOperators.find(operator => operator.value === item.operatorValue).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operatorValue)}`).toString();\n\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.columnField].filterOperators.find(operator => operator.value === item.operatorValue);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.columnField] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.columnField].headerName || item.columnField}\n                  ${getOperatorLabel(item)}\n                  ${item.value ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, preferencePanel.open, activeFilters, lookup, classes]);\n\n  const toggleFilter = event => {\n    var _buttonProps$onClick;\n\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    (_buttonProps$onClick = buttonProps.onClick) == null ? void 0 : _buttonProps$onClick.call(buttonProps, event);\n  }; // Disable the button if the corresponding is disabled\n\n\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n      ref: ref,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      startIcon: /*#__PURE__*/_jsx(Badge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.components.OpenFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import React, { useCallback, useContext } from \"react\"\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport { GridToolbarFilterButton, useGridApiContext } from \"@mui/x-data-grid\"\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { export_citations } from \"../utilities/citation_exporter\"\nimport { Button, ButtonGroup, Stack, Typography } from \"@mui/material\"\n\nimport { AddCitationsToProject } from \"./Project\"\nimport styled from \"@emotion/styled\"\nimport { TProject } from \"../../db/types\"\n\nconst ListToolbar: React.FC = () => {\n  const { group } = useContext(ManagerContext)\n\n  const {\n    current: { state },\n  } = useGridApiContext()\n  const { selection } = state\n\n  const { citationDao, projectDao } = useContext(DBContext)\n\n  const onDeleteClick = useCallback(async () => {\n    await citationDao.bulkDelete(selection as string[])\n  }, [selection])\n\n  const onExportClick = useCallback(\n    async (e) => {\n      const format = e.currentTarget.value\n      const references = await citationDao.bulkGet(selection as string[])\n      // TODO:: import a runtime\n      require(\"@citation-js/plugin-bibtex\")\n      require(\"@citation-js/plugin-ris\")\n      export_citations(references, format, \"untitled\")\n    },\n    [selection],\n  )\n\n  const isProjectSelected = group.id !== \"all\" && group.id !== \"favorites\"\n\n  const onRemoveProjectCitation = useCallback(() => {\n    const citations = state.rows.ids.filter(\n      (id) => !selection.includes(id),\n    ) as string[]\n\n    projectDao.edit(group.id, {\n      citations,\n    } as TProject)\n  }, [selection, state.rows.ids])\n\n  return (\n    <Stack bgcolor=\"#F4F3F5\" borderRadius=\"10px 10px 0 0\" p={1}>\n      <Stack justifyContent=\"space-between\" direction=\"row\" py={1}>\n        <Label>{group.label}</Label>\n        <Stack direction=\"row\">\n          {/*  TODO:: implement full text search */}\n          {/*<Button color=\"secondary\" size=\"small\" startIcon={<SearchIcon />}>*/}\n          {/*  Search*/}\n          {/*</Button>*/}\n\n          {/* @ts-ignore */}\n          <GridToolbarFilterButton\n            sx={{\n              color: \"secondary.dark\",\n              \"& .MuiBadge-badge\": { backgroundColor: \"primary.dark\" },\n            }}\n          />\n        </Stack>\n      </Stack>\n\n      <Stack>\n        {!!selection.length && (\n          <Stack direction=\"row\" justifyContent=\"space-between\" p={1}>\n            <Stack direction=\"row\" spacing={2}>\n              <Stack alignItems=\"center\">\n                <ButtonGroup color=\"secondary\">\n                  <Button size=\"small\" value=\"bibtex\" onClick={onExportClick}>\n                    BibTex .bib\n                  </Button>\n                  <Button size=\"small\" value=\"ris\" onClick={onExportClick}>\n                    Ris .ris\n                  </Button>\n                  {/* TODO:: add word doc xml  */}\n                </ButtonGroup>\n                <Typography variant=\"caption\" align=\"center\" p={1}>\n                  Export Selected References\n                </Typography>\n              </Stack>\n\n              <Stack alignItems=\"center\">\n                <ButtonGroup color=\"secondary\">\n                  <AddCitationsToProject />\n                </ButtonGroup>\n                <Typography variant=\"caption\" align=\"center\" p={1}>\n                  Add Selected References\n                </Typography>\n              </Stack>\n            </Stack>\n\n            <Stack justifyContent=\"center\">\n              <Stack direction=\"row\">\n                <Button onClick={onDeleteClick} color=\"secondary\" size=\"small\">\n                  Delete\n                </Button>\n                {isProjectSelected && (\n                  <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={onRemoveProjectCitation}\n                  >\n                    Remove from Project\n                  </Button>\n                )}\n              </Stack>\n            </Stack>\n          </Stack>\n        )}\n      </Stack>\n    </Stack>\n  )\n}\n\nconst Label = styled(\"h4\")`\n  font-family: Noto Sans, sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 25px;\n  margin: 0;\n`\n\nexport default ListToolbar\n","import React, { useCallback, useContext, useMemo, useState } from \"react\"\nimport {\n  GridColDef,\n  DataGrid,\n  GRID_CHECKBOX_SELECTION_COL_DEF,\n} from \"@mui/x-data-grid\"\nimport {\n  Container,\n  createTheme,\n  IconButton,\n  Stack,\n  ThemeProvider,\n  Tooltip,\n  Typography,\n} from \"@mui/material\"\nimport StarOutlineIcon from \"@mui/icons-material/StarOutline\"\nimport StarIcon from \"@mui/icons-material/Star\"\nimport PreviewIcon from \"@mui/icons-material/Preview\"\n\nimport { ManagerContext } from \"../../provider/ManagerProvider\"\nimport { PrimaryText } from \"../Typography\"\n\nimport { DBContext } from \"../../provider/DBProvider\"\nimport { User } from \"../../cslTypes/type\"\nimport themes, { dataGrid } from \"../../themes\"\n\nimport { EmptyReferenceList } from \"../../placeholders\"\nimport ListToolbar from \"./ListToolbar\"\n\nexport const referenceColumns: GridColDef[] = [\n  {\n    field: \"issued\",\n    headerName: \"Year\",\n    sortable: false,\n    disableColumnMenu: true,\n    width: 100,\n    valueFormatter: (params) => {\n      const { value } = params\n      return (value && value[\"date-parts\"] && value[\"date-parts\"][0]) || \"--\"\n    },\n  },\n  { field: \"title\", headerName: \"Title\", flex: 2, disableColumnMenu: true },\n  {\n    field: \"author\",\n    headerName: \"Contributors\",\n    flex: 1,\n    disableColumnMenu: true,\n    valueFormatter: (params) => {\n      return params.value.reduce(\n        (prev: string, { family, given }: User) =>\n          (family && `${prev} ${family} ${given}`) || \"--\",\n        \"\",\n      )\n    },\n  },\n]\n\n// TODO:: favorite\nconst columns: GridColDef[] = [\n  {\n    field: \"actions\",\n    type: \"actions\",\n    sortable: false,\n    width: 32,\n    headerAlign: \"right\",\n    align: \"right\",\n    renderCell: (params) => {\n      const { citationDao } = useContext(DBContext)\n      const [favorite, setFavorite] = useState(!!+params.row.favorite)\n\n      const onSelectClick = useCallback(() => {\n        citationDao.edit(params.id as string, {\n          ...params.row,\n          favorite: params.row.favorite === 1 ? 0 : 1,\n        })\n        setFavorite(!favorite)\n      }, [favorite])\n\n      return (\n        <Stack direction=\"row\">\n          <Tooltip title=\"Add this reference to your favorite references\">\n            <IconButton size=\"small\" onClick={onSelectClick}>\n              {(favorite && <StarIcon style={{ fill: \"gold\" }} />) || (\n                <StarOutlineIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      )\n    },\n  },\n  {\n    ...GRID_CHECKBOX_SELECTION_COL_DEF,\n  },\n  ...referenceColumns,\n  {\n    field: \"preview\",\n    type: \"actions\",\n    sortable: false,\n    width: 70,\n    headerName: \"Preview\",\n    renderCell: (params) => {\n      const { setReference } = useContext(ManagerContext)\n      const onPreviewClick = useCallback(() => {\n        setReference(params.row)\n      }, [params])\n\n      return (\n        <Stack direction=\"row\">\n          <Tooltip title=\"Preview Full Reference Data\">\n            <IconButton size=\"small\" onClick={onPreviewClick}>\n              <PreviewIcon />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      )\n    },\n  },\n]\n\nconst DataGridTheme = createTheme({\n  ...themes,\n  ...dataGrid,\n})\n\nconst ReferencesTable: React.FC = () => {\n  const { citationDao } = useContext(DBContext)\n  const { group, selectionModel, updateSelectionModel } = useContext(ManagerContext)\n\n  const [page, setPage] = useState<number>(0)\n  const [pageSize, setPageSize] = useState<number>(10)\n\n  const updatePage = useCallback((page) => setPage(page), [])\n\n  const updatePageSize = useCallback((pageSize) => setPageSize(pageSize), [])\n\n  const count = citationDao.getCitationsCount(group.id)\n\n  const references = citationDao.getCitations({\n    group: group.id,\n    page,\n    pageSize,\n  })\n\n  return (\n    <Container\n      disableGutters\n      maxWidth={false}\n      sx={{ bgcolor: \"white\", height: { xs: \"60vh\", md: \"100%\" } }}\n    >\n      <ThemeProvider theme={DataGridTheme}>\n        <DataGrid\n          components={{ Toolbar: ListToolbar, NoRowsOverlay }}\n          selectionModel={selectionModel}\n          onSelectionModelChange={updateSelectionModel}\n          rows={references}\n          columns={columns}\n          rowCount={count}\n          pagination\n          page={page}\n          pageSize={pageSize}\n          onPageChange={updatePage}\n          onPageSizeChange={updatePageSize}\n          paginationMode=\"server\"\n          rowsPerPageOptions={[10, 5, 25, 50, 100]}\n          checkboxSelection\n        />\n      </ThemeProvider>\n    </Container>\n  )\n}\n\nconst NoRowsOverlay: React.FC = () => {\n  const { group } = useContext(ManagerContext)\n\n  const { label, message } = useMemo(() => {\n    switch (group.id) {\n      case \"all\":\n        return {\n          label: \"Empty Reference List\",\n          message:\n            \"Create new Reference manually or Import references form external sources\",\n        }\n      case \"favorites\":\n        return {\n          label: \"No Reference in Favorites\",\n          message:\n            \"Click on the star button to add a reference to the favorites list\",\n        }\n      default:\n        return {\n          label: `No Reference in ${group.label} project`,\n          message: `Select references from the list and click on add to your project`,\n        }\n    }\n  }, [group])\n\n  return (\n    <Stack bgcolor=\"white\" alignItems=\"center\" height=\"100%\">\n      <EmptyReferenceList />\n      <PrimaryText>{label}</PrimaryText>\n      <Typography variant=\"caption\">{message}</Typography>\n    </Stack>\n  )\n}\n\nexport default ReferencesTable\n","import React, { useCallback, useContext, useRef, useState } from \"react\"\nimport { CitationStyle } from \"../types\"\nimport { styled as MUIStyled } from \"@mui/material/styles\"\nimport {\n  Alert,\n  Box,\n  Button,\n  ButtonGroup,\n  createTheme,\n  Modal,\n  Stack,\n  Typography,\n} from \"@mui/material\"\nimport { Spinner } from \"./editor/Spinner\"\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\"\nimport { convertBibTexToCSL } from \"./utilities/citation_generator\"\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\"\nimport { referenceColumns } from \"./manger/ReferencesTable\"\nimport themes from \"../themes\"\nimport { ThemeProvider } from \"@emotion/react\"\nimport { DBContext } from \"../provider/DBProvider\"\nimport { TCitation } from \"../db/types\"\n\nconst importStyle = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n}\n\nconst FileImport: React.FC<{\n  style?: CitationStyle\n  xml?: string\n  accept: string\n  button: React.ReactChild\n}> = ({ style, xml, accept, button }) => {\n  const [citations, setCitations] = useState<TCitation[]>([])\n  const [selectedCitations, setSelectedCitations] = useState<string[]>([])\n\n  const [open, setOpen] = useState(false)\n  const [uploadError, setUploadError] = useState<string | undefined>(undefined)\n  const [uploadProgress, setUploadProgress] = useState(0)\n\n  const uploadRef = useRef<HTMLInputElement>()\n\n  const setSelectedCitationsId = useCallback(\n    (citations: string[]) => setSelectedCitations(citations),\n    [],\n  )\n\n  const updateCitations = useCallback(\n    (citations: TCitation[]) => setCitations(citations),\n    [],\n  )\n\n  const handleClose = useCallback(async () => {\n    setOpen(false)\n    if (uploadRef.current) uploadRef.current.value = \"\"\n  }, [setOpen])\n\n  const onFileUpload = useCallback((event) => {\n    try {\n      setOpen(true)\n\n      const file = event.target.files[0]\n\n      if (file.size > 25431761) {\n        setUploadError(\"File size is more than allowed space\")\n        return\n      }\n\n      const fileReader = new FileReader()\n      fileReader.onloadend = async () => {\n        const citations = convertBibTexToCSL(fileReader.result as string)\n        setCitations(citations)\n      }\n\n      fileReader.onprogress = (e) =>\n        setUploadProgress(Math.round((e.loaded * 100) / e.total))\n\n      fileReader.onerror = () => setUploadError(\"Upload file error, try again\")\n\n      fileReader.readAsText(file)\n    } catch (e) {\n      setUploadError(\"Upload file error, try again\")\n    }\n  }, [])\n\n  return (\n    <>\n      <label htmlFor=\"contained-button-file\">\n        <Input\n          // @ts-ignore\n          ref={uploadRef}\n          onChange={onFileUpload}\n          accept={accept}\n          id=\"contained-button-file\"\n          multiple\n          type=\"file\"\n        />\n        {button}\n      </label>\n\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={{ ...importStyle, width: \"50%\", height: \"50%\" }}>\n          {uploadProgress > 0 && uploadProgress > 100 && <Spinner />}\n\n          {uploadError && <Alert severity=\"error\">{uploadError}</Alert>}\n\n          <Toolbar\n            selectedCitations={selectedCitations}\n            citations={citations}\n            close={handleClose}\n          />\n\n          {(style && <></>) || (\n            <CitationDataView\n              setSelectedCitations={setSelectedCitationsId}\n              updateCitations={updateCitations}\n              selectedCitations={selectedCitations}\n              citations={citations}\n            />\n          )}\n        </Box>\n      </Modal>\n    </>\n  )\n}\n\nconst Input = MUIStyled(\"input\")({\n  display: \"none\",\n})\n\nconst DataGridTheme = createTheme({\n  ...themes,\n  components: {\n    //@ts-ignore\n    MuiDataGrid: {\n      styleOverrides: {\n        \"& .MuiCheckbox-root.Mui-checked:not(.MuiCheckbox-indeterminate) svg\": {\n          backgroundColor: \"#1890ff\",\n          borderColor: \"#1890ff\",\n        },\n      },\n    },\n  },\n})\n\nconst CitationDataView: React.FC<{\n  setSelectedCitations: (citations: string[]) => void\n  updateCitations: (citations: TCitation[]) => void\n  selectedCitations: string[]\n  citations: TCitation[]\n}> = ({ setSelectedCitations, updateCitations, citations, selectedCitations }) => {\n  if (!citations.length) {\n    return <></>\n  }\n\n  const { citationDao } = useContext(DBContext)\n\n  const onAddCitation = useCallback(\n    (e) => {\n      const citation = citations.find((c) => c.id === e.currentTarget.value)\n      if (citation) {\n        citationDao.add(citation)\n        updateCitations(citations.filter((c) => c.id !== e.currentTarget.value))\n        setSelectedCitations(selectedCitations.filter((c) => c !== citation.id))\n      }\n    },\n    [citations, selectedCitations],\n  )\n\n  const viewColumns: GridColDef[] = [\n    {\n      field: \"actions\",\n      type: \"actions\",\n      sortable: false,\n      width: 80,\n      headerAlign: \"right\",\n      align: \"right\",\n      renderCell: (params) => (\n        <Stack direction=\"row\">\n          <Button\n            value={params.id}\n            onClick={onAddCitation}\n            startIcon={<AddCircleIcon />}\n            size=\"small\"\n          >\n            Add\n          </Button>\n        </Stack>\n      ),\n    },\n    ...referenceColumns,\n  ]\n\n  return (\n    <>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <ThemeProvider theme={DataGridTheme}>\n          <DataGrid\n            columns={viewColumns}\n            rows={citations}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n            checkboxSelection\n            // @ts-ignore\n            onSelectionModelChange={setSelectedCitations}\n          />\n        </ThemeProvider>\n      </div>\n    </>\n  )\n}\n\nconst Toolbar: React.FC<{\n  selectedCitations: string[]\n  citations: TCitation[]\n  close: () => void\n}> = ({ selectedCitations, citations, close }) => {\n  const { citationDao } = useContext(DBContext)\n\n  const handleImportAll = useCallback(() => {\n    citationDao.bulkAdd(citations)\n    close()\n  }, [citations])\n\n  const importSelectedCitation = useCallback(() => {\n    const selectedItems = citations.filter((c) => selectedCitations.includes(c.id))\n    citationDao.bulkAdd(selectedItems)\n    close()\n  }, [citations, selectedCitations])\n\n  if (!citations.length) {\n    return <></>\n  }\n\n  return (\n    <Stack\n      justifyContent=\"space-between\"\n      p={1}\n      bgcolor=\"primary.main\"\n      direction=\"row\"\n    >\n      <Typography alignSelf=\"center\" variant=\"subtitle1\" textAlign=\"center\">\n        {`${citations.length} Item Uploaded`}\n      </Typography>\n      <ButtonGroup color=\"secondary\">\n        <Button onClick={handleImportAll}>Import All</Button>\n        <Button\n          onClick={importSelectedCitation}\n          disabled={!selectedCitations.length}\n        >\n          Import Selected Item\n        </Button>\n      </ButtonGroup>\n    </Stack>\n  )\n}\n\nexport default FileImport\n","import React, { useCallback, useContext, useState } from \"react\"\nimport { Form } from \"../CitationForm\"\n\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Modal,\n  Select,\n  Typography,\n} from \"@mui/material\"\nimport config from \"../../config\"\nimport {\n  GeneratorContext,\n  GeneratorProvider,\n} from \"../../provider/GeneratorProvider\"\nimport { CitationStyle } from \"../../types\"\n\nconst importStyle = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  overflowY: \"scroll\",\n}\n\nconst AddReferenceForm: React.FC = () => {\n  const [open, setOpen] = useState(false)\n\n  const handleShow = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const userClose = useCallback((e) => {\n    const label = e.target.getAttribute(\"aria-label\")\n    if (label === \"cite\") setOpen(false)\n  }, [])\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={handleShow}>\n        Create New Reference\n      </Button>\n      <Modal open={open} onClose={handleClose}>\n        <GeneratorProvider xml=\"\" style={\"apa\" as CitationStyle}>\n          <Box\n            sx={{ ...importStyle, width: \"50%\", height: \"60%\" }}\n            onClick={userClose}\n          >\n            <Typography variant=\"subtitle1\" py={2} pb={4}>\n              Add Reference Manually\n            </Typography>\n            {/* TODO:: add import citation box */}\n            <DocumentSelect />\n            <Form />\n          </Box>\n        </GeneratorProvider>\n      </Modal>\n    </>\n  )\n}\n\nconst DocumentSelect: React.FC = () => {\n  const { setDocumentType, documentType } = useContext(GeneratorContext)\n\n  const onSetDocument = useCallback((e) => {\n    setDocumentType(e.target.value)\n  }, [])\n\n  return (\n    <FormControl color=\"secondary\" sx={{ ml: 0, minWidth: 140 }} size=\"small\">\n      <InputLabel sx={{ m: -1 }}>Document type</InputLabel>\n      <Select value={documentType} onChange={onSetDocument}>\n        {config.DOCUMENT_TYPES.map((doc) => (\n          <MenuItem key={doc} value={doc}>\n            {doc}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default AddReferenceForm\n","import * as React from \"react\"\n\nimport Seo from \"../components/Seo\"\nimport Layout from \"../components/pages/Layout\"\n\nimport {\n  Button,\n  Container,\n  Grid,\n  Menu,\n  MenuItem,\n  Stack,\n  Typography,\n} from \"@mui/material\"\nimport styled from \"@emotion/styled\"\nimport Collection from \"../components/manger/Collection\"\nimport Metadata from \"../components/manger/Metadata\"\nimport ReferencesTable from \"../components/manger/ReferencesTable\"\nimport { ManagerProvider } from \"../provider/ManagerProvider\"\nimport { useCallback } from \"react\"\nimport FileImport from \"../components/FileImport\"\n\nimport AddReferenceForm from \"../components/manger/AddReferenceForm\"\n\nconst ReferencesManagerPage: React.FC = () => {\n  return (\n    <Layout>\n      <Seo\n        title=\"Reference manager\"\n        // TODO:: add more about expected features\n        description=\"Store and organize your citations with collections/papers and labels, for free\"\n      />\n      <ManagerProvider>\n        <Container\n          disableGutters\n          maxWidth={false}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            height: \"100%\",\n            bgcolor: \"secondary.light\",\n          }}\n        >\n          <Grid container direction=\"column\">\n            <Stack px={4} py={1}>\n              <Primary>Reference Manger</Primary>\n            </Stack>\n            <Stack pl={3} direction=\"row\" bgcolor=\"#817589\">\n              <ImportButton />\n              <AddReferenceForm />\n            </Stack>\n          </Grid>\n          <Grid\n            flex={1}\n            container\n            justifyContent=\"space-between\"\n            p={2}\n            bgcolor=\"primary.main\"\n          >\n            <Grid sx={{ display: { xs: \"none\", md: \"unset\" } }} md={2} item>\n              <Collection />\n            </Grid>\n            <Grid xs={12} md={6.8} item>\n              <ReferencesTable />\n            </Grid>\n            <Grid sx={{ display: { xs: \"none\", md: \"unset\" } }} md={3} item>\n              <Metadata />\n            </Grid>\n          </Grid>\n        </Container>\n      </ManagerProvider>\n    </Layout>\n  )\n}\n\nexport const Primary = styled(\"h1\")`\n  font-family: Noto Sans, sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 1.5em;\n  line-height: 40px;\n  color: #ffffff;\n  margin: 0;\n`\n\nconst ImportButton: React.FC = () => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = useCallback((event) => {\n    if (anchorEl !== event.currentTarget) {\n      setAnchorEl(event.currentTarget)\n    }\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null)\n  }, [])\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={handleClick}>\n        Import References\n      </Button>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        color=\"secondary\"\n      >\n        <FileImport\n          accept=\".bib\"\n          button={\n            <MenuItem>\n              <Typography px={1} textAlign=\"center\">\n                BibTex *.bib\n              </Typography>\n            </MenuItem>\n          }\n        />\n      </Menu>\n    </>\n  )\n}\n\nexport default ReferencesManagerPage\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","ListItemButtonRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","ownerState","root","dense","alignItems","alignItemsFlexStart","divider","disableGutters","gutters","theme","display","flexGrow","justifyContent","position","textDecoration","minWidth","boxSizing","textAlign","paddingTop","paddingBottom","transition","transitions","create","duration","shortest","backgroundColor","vars","palette","action","hover","primary","mainChannel","selectedOpacity","main","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","borderBottom","backgroundClip","paddingLeft","paddingRight","ListItemButton","inProps","ref","autoFocus","component","children","focusVisibleClassName","selected","className","other","context","childContext","listItemRef","current","classes","disabled","slots","composedClasses","useUtilityClasses","handleRef","value","href","to","focusVisible","ManagerContext","createContext","group","reference","selectionModel","setGroup","setReference","updateSelectionModel","ManagerProvider","_ref","useState","id","label","setSelectionModel","useCallback","newSelectionModel","React","Provider","getSwitchBaseUtilityClass","generateUtilityClass","generateUtilityClasses","SwitchBaseRoot","styled","ButtonBase","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","width","height","top","left","margin","zIndex","checked","checkedProp","checkedIcon","defaultChecked","disabledProp","disableFocusRipple","icon","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","setCheckedState","useControlled","controlled","Boolean","state","muiFormControl","useFormControl","hasLabelFor","capitalize","input","composeClasses","centerRipple","focusRipple","role","undefined","event","nativeEvent","defaultPrevented","newChecked","target","createSvgIcon","getCheckboxUtilityClass","CheckboxRoot","indeterminate","color","text","secondary","disableRipple","activeChannel","active","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","fontSize","GridApiContext","apiRef","Error","join","importStyle","transform","bgcolor","border","boxShadow","p","overflowY","AddCitationsToProject","projectDao","useContext","DBContext","projects","getProjects","projectMap","useMemo","Map","map","citations","projectsSet","setProjectsSet","Set","setProject","e","currentTarget","has","delete","add","selection","useGridApiContext","onAddClick","forEach","projectId","Array","from","get","edit","handleClose","open","setOpen","handleShow","Button","onClick","Modal","onClose","Box","sx","flexDirection","Stack","spacing","direction","Typography","variant","Divider","Grid","container","flex","List","_ref2","ListItem","key","ListItemIcon","Checkbox","ListItemText","alignSelf","ProjectTextFiled","_ref3","close","TextField","placeholder","defaultValue","InputProps","endAdornment","IconButton","DoneIcon","CloseIcon","_ref4","newProject","setShowNew","getList","setProjectId","onSelectListItem","innerText","closeEdit","onSaveClick","async","projectName","parentNode","querySelector","uuid","onDeleteProjectClick","onEditClick","py","length","_ref5","CollectionButton","startIcon","LibraryBooksIcon","EditIcon","DeleteIcon","EmptyProject","px","background","borderLeft","onCreateProjectClick","Container","maxWidth","NoteAddIcon","AllInboxIcon","StarBorderIcon","UserProjects","cachedType","detectScrollType","dummy","document","createElement","style","appendChild","dir","overflow","body","scrollLeft","removeChild","getNormalizedScrollLeft","element","scrollWidth","clientWidth","easeInOutSin","time","Math","sin","PI","getTabScrollButtonUtilityClass","_KeyboardArrowLeft","_KeyboardArrowRight","TabScrollButtonRoot","orientation","flexShrink","isRtl","useTheme","KeyboardArrowLeft","KeyboardArrowRight","getTabsUtilityClass","nextItem","list","item","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","TabsRoot","scrollButtons","scrollButtonsHideMobile","vertical","minHeight","WebkitOverflowScrolling","breakpoints","down","TabsScroller","scroller","fixed","hideScrollbar","scrollableX","scrollableY","whiteSpace","overflowX","scrollbarWidth","FlexContainer","flexContainer","flexContainerVertical","centered","TabsIndicator","indicator","bottom","indicatorColor","right","TabsScrollbarSize","scrollbarHeight","nodeRef","setMeasurements","offsetHeight","clientHeight","handleResize","debounce","prevHeight","containerWindow","ownerWindow","addEventListener","clear","removeEventListener","defaultIndicatorStyle","ariaLabel","ariaLabelledBy","childrenProp","allowScrollButtonsMobile","ScrollButtonComponent","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","visibleScrollbar","scrollable","scrollStart","start","end","clientSize","mounted","setMounted","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","scrollerStyle","setScrollerStyle","valueToIndex","tabsRef","tabListRef","getTabsMeta","tabsNode","tabsMeta","tabMeta","rect","getBoundingClientRect","scrollTop","scrollLeftNormalized","tab","updateIndicatorState","useEventCallback","startIndicator","startValue","correction","newIndicatorStyle","isNaN","dStart","abs","dSize","scroll","scrollValue","animation","property","options","cb","ease","cancelled","cancel","step","timestamp","min","requestAnimationFrame","animate","standard","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","scrollHeight","showStartScroll","showEndScroll","win","resizeObserver","ResizeObserver","child","observe","disconnect","handleTabsScroll","updateIndicator","updateScrollButtons","childIndex","childValue","set","fullWidth","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","scrollButtonEnd","getConditionalElements","as","onScroll","onKeyDown","ownerDocument","activeElement","previousItemKey","nextItemKey","preventDefault","getTabUtilityClass","TabRoot","labelIcon","wrapped","typography","button","iconPosition","lineHeight","marginBottom","marginTop","flexBasis","pxToRem","iconWrapper","ActionButtons","field","save","citationDao","updatedValue","onSaveDateClick","dateParts","querySelectorAll","push","parseInt","onSaveContributor","users","contributor","user","index","family","given","toString","date","TabPanel","selectedTab","hidden","ReferenceViewer","NoReferenceSelected","editId","setEditId","fieldWeights","title","author","issued","accessed","referenceFields","Object","entries","reduce","c","filter","sort","a","b","Table","TableData","FieldTitle","ReferenceEdit","FieldValue","setSelectedTab","borderColor","borderBottomColor","Tabs","Tab","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","isPrintableKey","ctrlKey","metaKey","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellEditCommitKeys","indexOf","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isKeyboardEvent","GridRootPropsContext","useGridRootProps","contextValue","getDataGridUtilityClass","GridCellCheckboxRenderer","_rootProps$components","isChecked","rowNode","hasFocus","rootProps","checkboxElement","rippleRef","useForkRef","getCellElement","_checkboxElement$curr","preventScroll","stop","handleKeyDown","stopPropagation","shiftKey","publishEvent","isSelectable","isRowSelectable","getLocaleText","isPinned","components","BaseCheckbox","params","touchRippleRef","componentsProps","baseCheckbox","buildWarning","message","gravity","alreadyWarned","cleanMessage","isArray","console","error","warn","wrapWithWarningOnCall","method","useGridSelector","selector","acceptsApiRef","isOutputSelector","NOT_FOUND","defaultEqualityCheck","defaultMemoize","func","equalityCheckOrOptions","equals","entry","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","cache","put","getEntries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption2","finalMemoizeOptions","dependencies","every","dep","dependencyTypes","getDependencies","memoizedResultFunc","concat","assign","lastResult","recomputations","resetRecomputations","createSelector","cacheContainer","args","selectorArgs","stateOrApiRef","instanceId","isApiRef","cacheKey","newSelector","unstable_resetCreateSelectorCache","gridFocusStateSelector","gridFocusCellSelector","focusState","cell","gridFocusColumnHeaderSelector","columnHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","idRowsLookup","gridRowsIdToIdLookupSelector","idToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthSelector","treeDepth","gridRowIdsSelector","ids","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","pinnedRows","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","lookup","rowId","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","model","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridColumnsSelector","columns","gridColumnFieldsSelector","columnsState","all","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridColumnPositionsSelector","visibleColumns","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridColumnsMetaSelector","totalWidth","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridVisibleRowsLookupSelector","quickFilterValues","visibleRowsLookup","gridFilteredRowsLookupSelector","filteredRowsLookup","gridVisibleSortedRowEntriesSelector","filteredDescendantCountLookup","row","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","depth","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","_column$filterOperato","_item$value","columnField","filterOperators","filterOperator","operator","operatorValue","InputComponent","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","gridPaginationSelector","pagination","gridPageSelector","page","gridPageSizeSelector","pageSize","gridPaginationRowRangeSelector","pageCount","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","slice","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","forceUpdate","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","getRowParams","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","keys","getColumnHeaderElement","handleSelectionChange","subscribeEvent","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","getValueFromOption","option","getValueFromValueOptions","valueOptions","result","optionValue","String","renderSingleSelectOptions","valueFormatter","api","OptionComponent","isOptionTypeObject","formattedValue","content","SUBMIT_FILTER_STROKE_TIME","GridFilterInputValue","_baseSelectProps$nati","_rootProps$components2","_rootProps$components3","applyValue","focusElementRef","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","isSelectNative","baseSelect","native","singleSelectProps","select","SelectProps","getColumn","MenuItem","onFilterChange","columnValueOptions","clearTimeout","setTimeout","_item$value2","itemValue","BaseTextField","InputLabelProps","shrink","baseTextField","GridEditInputCellRoot","InputBase","editInputCell","body2","GridEditInputCell","_rootProps$experiment","_rootProps$experiment3","colDef","debounceMs","experimentalFeatures","newEditingApi","isProcessingProps","onValueChange","valueState","setValueState","handleChange","_rootProps$experiment2","newValue","parsedValue","valueParser","getCellParams","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","useEnhancedEffect","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","Number","gridDateComparator","isFunction","escapeRegExp","replace","clamp","max","isDeepEqual","constructor","entriesA","entryA","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","hasOwnProperty","call","randomNumberBetween","seed","random","t","imul","deepClone","obj","structuredClone","JSON","parse","stringify","stripDiacritics","string","normalize","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","trim","inputValue","getOptionLabel","toLowerCase","filteredOptions","candidate","array","comp","defaultFilterOptions","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","parentElement","contains","useAutocomplete","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","groupBy","handleHomeEndKeys","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","onHighlightChange","onInputChange","onOpen","openProp","openOnFocus","selectOnFocus","valueProp","optionLabel","ignoreFocus","firstFocus","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setInputValueState","focused","setFocused","resetInputValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","previousProps","usePreviousProps","valueChange","listboxAvailable","focusTag","tagToFocus","setHighlightedIndex","reason","removeAttribute","setAttribute","classList","remove","listboxNode","scrollBottom","elementBottom","offsetTop","changeHighlightedIndex","diff","nextIndex","validOptionIndex","maxIndex","newIndex","getNextIndex","setSelectionRange","syncHighlightedIndex","_previousProps$value","val","previousHighlightedOption","checkHighlightedOptionExists","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleValue","details","isTouch","selectNewValue","reasonProp","origin","blur","handleFocusTag","nextTag","validTagIndex","handleClear","defaultMuiPrevented","which","handleFocus","handleBlur","handleInputChange","handleOptionMouseOver","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","handleInputMouseDown","dirty","groupedOptions","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","onMouseOver","onTouchStart","getListSubheaderUtilityClass","ListSubheaderRoot","inset","disableSticky","sticky","listStyle","fontFamily","fontWeight","fontWeightMedium","paper","getChipUtilityClass","ChipRoot","iconColor","clickable","avatar","deleteIcon","deletable","deleteIconColor","mode","grey","outline","verticalAlign","pointerEvents","Chip","defaultAvatarColor","contrastText","dark","defaultIconColor","WebkitTapHighlightColor","primaryChannel","contrastTextChannel","selectedChannel","userSelect","shadows","defaultBorder","ChipLabel","textOverflow","isDeleteKeyboardEvent","keyboardEvent","avatarProp","clickableProp","ComponentProp","deleteIconProp","onKeyUp","skipFocusWhenDisabled","chipRef","handleDeleteIconClick","moreProps","Cancel","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","AutocompleteRoot","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","visibility","flexWrap","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","AutocompleteEndAdornment","AutocompleteClearIndicator","clearIndicator","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","AutocompleteLoading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","up","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","ChipProps","clearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDown","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","slotProps","startAdornment","getCustomizedTagProps","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","option2","index2","GridFilterInputMultipleValue","helperText","TextFieldProps","GRID_STRING_COL_DEF","Infinity","hide","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","compare","align","disableTrim","getApplyFilterFn","filterItemValue","filterRegex","test","sensitivity","usage","requiresFilterValue","filterValue","getGridStringOperators","renderEditCell","getApplyQuickFilterFn","columnValue","GridBooleanCellRaw","Icon","BooleanCellTrueIcon","BooleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","GridFilterInputBoolean","displayEmpty","GRID_BOOLEAN_COL_DEF","headerAlign","renderCell","isAutoGenerated","valueAsBoolean","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableColumnMenu","disableReorder","disableExport","valueGetter","renderHeader","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","shape","outlineWidth","outlineOffset","shorter","touchAction","breakInside","gridGap","borderRight","gridDensitySelector","density","gridDensityValueSelector","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityHeaderGroupingMaxDepthSelector","headerGroupingMaxDepth","gridDensityFactorSelector","factor","gridDensityTotalHeaderHeightSelector","GridRoot","densityValue","rootContainerRef","pinnedRowsCount","rootElementRef","mountedState","setMountedState","unstable_updateGridDimensionsRef","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","GridMainContainer","ErrorBoundary","static","hasError","componentDidCatch","errorInfo","this","logError","showError","render","_this$state","GridErrorHandler","errorState","errorProps","ErrorOverlay","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetWidth","scrollListener","__resizeRAF__","cancelAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","fn","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","animationKeyframes","animationStyle","addResizeListener","doc","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","styleSheet","cssText","createTextNode","createStyles","getRootNode","innerHTML","__animationListener__","removeResizeListener","GridAutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","setState","rootRef","computedStyle","newHeight","newWidth","_parentElement$curren","detectElementResize","outerStyle","childParams","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","totalHeaderHeight","viewportInnerSize","setViewportInnerSize","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","GridOverlays","visibleRowCount","showNoResultsOverlay","overlay","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","isVirtualizationDisabled","setIsVirtualizationDisabled","disableVirtualization","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","innerRef","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","forceDebug","window","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","idx","useGridApiMethod","apiMethods","apiName","apiMethodsRef","apiMethodsNames","installMethods","methodName","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","_handlerRef$current","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","isSyntheticEvent","isPropagationStopped","globalId","_typeof","Symbol","iterator","_toPropertyKey","arg","hint","prim","toPrimitive","TypeError","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","useGridInitialization","inputApiRef","unstable_eventManager","unstable_caches","signature","DataGridPro","useGridApiInitialization","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","unstable_updateControlState","unstable_registerControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","unstable_registerPipeProcessor","processor","processors","unstable_registerPipeApplier","applier","_appliers","otherAppliers","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","textContent","range","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","isModifierKeyPressed","altKey","_window$getSelection","fromCharCode","keyCode","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","round","registerPreProcessor","useGridRegisterPipeApplier","parseNumericValue","getGridNumericOperators","InputComponentProps","includes","GRID_NUMERIC_COL_DEF","isNumber","toLocaleString","SUBMIT_FILTER_DATE_STROKE_TIME","GridFilterInputDate","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","StyledInputBase","GridEditDateCell","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","newFormattedDate","newParsedDate","setFullYear","hours","minutes","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridEditModes","GridCellModes","GridRowModes","GridEditSingleSelectCell","initialOpen","editMode","Cell","valueOptionsFormatted","BaseSelect","formattedTargetValue","isValid","Row","Promise","resolve","commitCellChange","setCellMode","MenuProps","stopCellEditMode","ignoreModifications","GridFilterInputSingleSelect","currentColumn","currentValueOptions","_itemValue","GridFilterInputMultipleSingleSelect","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","filterValueOptionFormatter","filterValues","formattedElement","formatedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","potentialValues","iterableColumnValues","GridMenuRoot","menu","transformOrigin","GridMenu","onClickAway","onExited","prevTarget","prevOpen","BasePopper","placement","basePopper","TransitionProps","ClickAwayListener","mouseEvent","Grow","popperOnExited","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","getActions","hasActions","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","DEFAULT_GRID_COL_TYPE_KEY","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","number","dateTime","boolean","singleSelect","colType","colTypeDef","extendType","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","newColumn","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","columnsToUpsert","initialState","columnTypes","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","keepOnlyColumnsToUpsert","_apiRef$current","isInsideStateInitializer","columnsStateWithoutColumnVisibilityModel","currentState","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","orderedFields","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","GridPreferencePanelsValue","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","GridDensityTypes","isLeaf","gridColumnGroupsLookupSelector","columnGrouping","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplet","groupId","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$columnGrouping","groupCollapsedModel","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","newMaxDepth","Compact","floor","Comfortable","densityStateInitializer","maxDepth","unwrappedGroupingColumnModel","_unwrappedGroupingCol","_unwrappedGroupingCol2","serializeCellValue","delimiterCharacter","serializeRow","cellParams","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","_rowTree$id$position","topPinnedRowsIds","bottomPinnedRowsIds","_excluded2","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","rowIds","CSVBody","buildCSV","getRowsToExport","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","gridRowsMetaSelector","rowsMeta","useGridPrintExport","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","setColumnVisibilityModel","buildPrintWindow","iframeEl","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","gridCloneViewport","chromeVersion","raw","userAgent","getChromeVersion","contain","gridToolbarElementHeight","gridFooterElementHeight","_gridClone$querySelec","_gridClone$querySelec2","currentPageTotalHeight","defaultPageStyle","pageStyle","styleElement","bodyClassName","headStyleElements","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","attributes","attr","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","setPageSize","onload","matchMedia","mql","matches","_options$printOptions","printOptions","GridFeatureModeConstant","GridLinkOperator","getDefaultGridFilterModel","linkOperator","And","quickFilterLogicOperator","useGridRegisterStrategyProcessor","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","getFilterCallbackFromItem","_filterItem$value","parser","x","newFilterItem","applyFilterOnRow","buildAggregatedFilterApplier","isRowMatchingFilterItems","shouldApplyFilter","resultPerItemId","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","columnsFieldsToFilter","quickFilterValueResult","isPassing","_appliersPerColumnFie","_appliersPerColumnFie2","buildAggregatedQuickFilterApplier","passingFilterItems","passingQuickFilterValues","passFilterLogic","allFilterItemResults","allQuickFilterResults","_filterModel$quickFil","_filterModel$linkOper","cleanedFilterItems","cleanedAllFilterItemResults","cleanedAllQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","filterStateInitializer","_props$filterModel","_props$initialState$f","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","goToCell","colIndex","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","rowIndexRelativeToAllRows","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","getRowIdFromIndex","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","lastRowIndexInPage","lastColIndex","shouldPreventDefault","nextRowIndex","handleColumnHeaderKeyDown","headerTitleNode","toggleColumnMenu","handleCellKeyDown","cellMode","Edit","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","rowCount","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getRowsStateFromCache","previousTree","rowCountProp","loadingProp","_apiRef$current$unsta","cacheForGrouping","groupingResponse","processedGroupingResponse","dataTopLevelRowCount","parent","groupingResponseBeforeRowHydration","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","childNode","calculatePinnedRowsHeight","unstable_getRowHeight","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","ceil","applyValidPage","paginationState","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","stateExportPreProcessing","prevState","pageSizeToExport","exportOnlyDirtyModels","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","useGridPageSize","onPageChange","setPage","pageToExport","_context$stateToResto2","useGridPage","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","isPromise","promise","then","useCellEditing","_props$experimentalFe2","buildCallback","getCellMode","newEditRowsState","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","isEditable","isEditMode","isCellEnterEditModeKeys","handleCellDoubleClick","commitPropsAndExit","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","useGridRowEditing","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","rowParams","_props$experimentalFe3","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_nextFocusedCell$curr","onRowEditCommit","onRowEditStart","onRowEditStop","editingStateInitializer","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","runPendingEditCellValueMutation","debouncedField","maybeDebounce","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridCellEditStartReasons","GridCellEditStopReasons","missingOnProcessRowUpdateErrorWarning","GridRowEditStartReasons","GridRowEditStopReasons","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","deleteValue","startCellEditMode","cellToFocusAfter","disableIgnoreModificationsIfProcessingProps","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","_editingState$id","_editingState$id$fiel","skipValueParser","hasChanged","getRowWithUpdatedValuesFromCellEditing","copyOfPrevCellModes","_copyOfPrevCellModes$","_copyOfPrevCellModes$2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","unstable_getRowWithUpdatedValues","rowsStateInitializer","flatRowTreeCreationMethod","groupingKey","groupingField","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","getRowNode","cellFocus","cellTabIndex","getGridColumnHeaderElement","getRowElement","getGridRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","scrollIntoView","isTestEnvironment","hasScroll","scrollBarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScrollX","hasScrollY","rowsMetaStateInitializer","useDataGridComponent","addHeaderGroups","unwrappedGroupingModel","_unwrappedGroupingMod","_unwrappedGroupingMod2","newGroupPath","lookupElement","groupPath","hasGroupPath","useGridColumnGroupingPreProcessors","useGridRowsPreProcessors","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","startIndex","endIndex","selectRowRange","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","currentPageRowsLookup","firstSelectableRow","useGridSelection","_props$initialState5","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","useVisibleColumns","getColumnPosition","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","setColumnWidth","columnsStateToExport","_props$initialState$c2","_props$initialState4","_props$initialState4$","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$componentsProp","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","updates","DataGrid","uniqueUpdates","update","deletedRowIds","partialRow","_action","getRowModels","allRows","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","applySorting","applyFiltering","groupNode","sortedRowIds","childId","rowApi","setRowIndex","updatedRows","unstable_replaceRows","newRows","updatedIdRowsLookup","updatedIdToIdLookup","updatedTree","newRowEntries","newRowModel","replacedRowId","rowTreeNodeConfig","newRowsState","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRows","setCellColSpanInfo","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","getColumnGroupPath","_columnLookup$field$g","_columnLookup$field","getAllGroupDetails","unstable_getColumnGroupPath","unstable_getAllGroupDetails","_props$columnGrouping2","useGridColumnGrouping","lastClickedCell","publishCellFocusOut","focusedCell","moveFocusToRelativeCell","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filters","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","isRowPassing","startsWith","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingMode","sortRowList","comparatorList","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","bodyRowIds","footerRowIds","handleColumnHeaderClick","latestColumns","useGridSorting","_column$groupPath$len","_column$groupPath","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","rowHeightFromDensity","hydrateRowsMeta","densityFactor","calculateRowProcessedSizes","baseCenter","isResized","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","existingBaseSizes","initialHeights","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","unstable_getLastMeasuredRowIndex","unstable_setLastMeasuredRowIndex","unstable_rowHasAutoHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","relatedTarget","columnMenuLostFocus","columnMenuItemLostFocus","useGridColumnMenu","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","viewportOuterSize","scrollbarSize","scrollDiv","scrollInformation","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","isFirstSizing","isJSDOM","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","getSwitchUtilityClass","SwitchRoot","colorAdjust","SwitchSwitchBase","switchBase","Switch","defaultColor","common","white","defaultDisabledColor","switchTrackDisabled","SwitchTrack","track","onBackground","black","switchTrack","SwitchThumb","thumb","cachedSupportsPreventScroll","showRightBorder","getUnit","toUnitless","parseFloat","getSkeletonUtilityClass","_t","_t2","_t3","_t4","_","pulseKeyframe","waveKeyframe","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","radiusValue","Skeleton","bg","GridIconButtonContainerRoot","iconButtonContainer","GridIconButtonContainer","GridColumnMenuContainer","labelledby","handleListKeyDown","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","SortGridMenuItems","_column$sortingOrder","onSortMenuItemClick","GridColumnMenu","defaultButtons","preProcessedButtons","GridRowCountRoot","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","footerContainer","borderTop","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","GridHeader","PreferencesPanel","preferencesPanel","Toolbar","toolbar","GridPreferencesPanel","_preferencePanelState","panelContent","Panel","panel","getCircularProgressUtilityClass","SIZE","circularRotateKeyframe","circularDashKeyframe","CircularProgressRoot","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","thickness","circleStyle","rootStyle","circumference","toFixed","viewBox","cx","cy","r","fill","strokeWidth","GridOverlayRoot","GridOverlay","GridLoadingOverlay","GridNoRowsOverlay","getTableCellUtilityClass","TableCellRoot","stickyHeader","TableCell","_LastPageIcon","_FirstPageIcon","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","componentProp","paddingProp","scope","scopeProp","sizeProp","variantProp","table","tablelvl2","isHeadCell","ariaSort","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","rowsPerPage","showFirstButton","showLastButton","LastPage","FirstPage","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","actions","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","ActionsComponent","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","MenuItemComponent","selectId","labelId","rowsPerPageOption","isHostComponent","GridPaginationRoot","GridPagination","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","filterFormDeleteIcon","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","GridFilterForm","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","valueInputPropsOther","sortedFilterableColumns","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","InputLabel","GridFilterPanel","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","BaseButton","baseButton","getFormControlLabelUtilityClasses","FormControlLabelRoot","labelPlacement","_slotProps$typography","control","disableTypography","labelProp","controlProps","fcs","formControlState","states","typographySlotProps","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GRID_EXPERIMENTAL_ENABLED","columnsPanelRow","GridColumnsPanelRoot","GridColumnsPanelRowRoot","GridIconButtonRoot","defaultSearchPredicate","searchValue","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","handleClickAway","modifiers","enabled","phase","effect","elevation","EmptyCell","GridRow","refProp","styleProp","renderedColumns","containerWidth","onDoubleClick","onMouseEnter","onMouseLeave","ariaRowIndex","editing","borderBoxSize","blockSize","contentRect","publish","propHandler","nodeType","publishClick","getCell","classNames","disableDragEvents","disableColumnReorder","rowReordering","editCellState","_rootProps$classes","_rootProps$classes2","updatedRow","editCellStateRest","getCellClassName","indexRelativeToAllColumns","numberOfBaseSizes","maximumSize","rowSpacingType","rowClassNames","getRowClassName","_currentPage$range","randomNumber","cells","isLastColumn","disableExtendRowFullWidth","showCellRightBorder","contentWidth","SkeletonCell","emptyCellWidth","eventHandlers","GridColumnUnsortedIcon","nextSortDirection","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","GridNoResultsOverlay","DEFAULT_GRID_ICON_SLOTS_COMPONENTS","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","BaseSwitch","BaseTooltip","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publishMouseDown","focusableElement","elementToFocus","scrollPosition","managesOwnFocus","draggableEventHandlers","valueString","renderChildren","ColumnHeaderFilterIconButton","counter","toggleFilter","iconButton","enterDelay","baseTooltip","Badge","badgeContent","ColumnMenu","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","sortedColumns","toggleAllColumns","currentModel","handleSearchValueChange","currentColumns","searchValueToCheck","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","baseSwitch","draggable","DATA_GRID_FORCED_PROPS","disableColumnResize","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","virtualScroller","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","binarySearch","offset","sliceStart","sliceEnd","pivot","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","useGridVirtualScroller","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","containerDimensions","setContainerDimensions","prevTotalWidth","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","computeRenderContext","lastColumnIndex","updateRenderZonePosition","nextRenderContext","initialFirstColumnToRender","updateRenderContext","context1","context2","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","handleWheel","handleTouchMove","needsHorizontalScrollbar","contentSize","shouldExtendContent","getRenderContext","getRows","availableSpace","rowIndexOffset","renderedRows","lastColumnToRender","_currentPage$range5","lastVisibleRowIndex","onWheel","onTouchMove","getContentProps","getRenderZoneProps","DataGridVirtualScroller","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderSortIcon","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","resizing","side","GridColumnHeaderSeparatorRaw","Right","stopClick","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","disableHeaderSeparator","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","columnMenuState","draggableContainer","titleContainer","titleContainerContent","isDragging","filterItemsCounter","isColumnSorted","isColumnFiltered","isColumnNumeric","GridColumnHeaderItem","_column$headerName","extendRowFullWidth","mouseEventsHandlers","onMouseOut","onDragStart","onDragEnd","handleExited","columnHeaderFilterIconButton","hideSortIcons","elementId","maybeReactUseId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","showColumnBorder","GridColumnGroupHeader","_columnGroupsLookup$g","columnGroupsLookup","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","CLIFF","SLOP","scrollDirection","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","clientX","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","columnHeaders","borderTopLeftRadius","borderTopRightRadius","GridColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","columnHeadersInner","GridColumnHeadersInner","DataGridColumnHeaders","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","getParents","path","columnsToRender","isFirstColumn","hasTabbableElement","headerToRender","_visibleColumns$first","_visibleColumns$first2","_visibleColumns$first3","initialHeader","leftOverflow","firstColumnToRenderGroup","firstColumnToRenderGroupParents","_visibleColumns$colum","_visibleColumns$colum2","_column$computedWidth","_column$computedWidth2","_column$computedWidth3","groupParents","depthInfo","aggregated","_column$computedWidth7","lastItem","_column$computedWidth5","_column$computedWidth4","_column$computedWidth6","lastColumnToRenderGroup","_visibleColumns$colum3","_visibleColumns$colum4","_visibleColumns$colum5","_column$computedWidth8","elements","depthIndex","groupIndex","useGridColumnHeaders","DataGridRaw","themedProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","warnIfFocusStateIsNotSynced","isRequired","getDetailPanelContent","GridToolbarFilterListRoot","toolbarFilterList","GridToolbarFilterButton","buttonProps","tooltipContentNode","getOperatorLabel","getFilterItemValue","getValueAsString","_buttonProps$onClick","Label","onDeleteClick","bulkDelete","onExportClick","format","references","bulkGet","require","export_citations","isProjectSelected","onRemoveProjectCitation","ButtonGroup","referenceColumns","favorite","setFavorite","onSelectClick","Tooltip","StarIcon","StarOutlineIcon","onPreviewClick","PreviewIcon","DataGridTheme","createTheme","themes","dataGrid","EmptyReferenceList","PrimaryText","updatePage","updatePageSize","getCitationsCount","getCitations","xs","md","ThemeProvider","ListToolbar","Input","MUIStyled","MuiDataGrid","styleOverrides","CitationDataView","setSelectedCitations","updateCitations","selectedCitations","onAddCitation","citation","viewColumns","AddCircleIcon","handleImportAll","bulkAdd","importSelectedCitation","selectedItems","xml","accept","setCitations","uploadError","setUploadError","uploadProgress","setUploadProgress","uploadRef","useRef","setSelectedCitationsId","onFileUpload","file","files","fileReader","FileReader","onloadend","convertBibTexToCSL","onprogress","loaded","total","onerror","readAsText","Spinner","Alert","severity","DocumentSelect","setDocumentType","documentType","GeneratorContext","onSetDocument","ml","m","userClose","GeneratorProvider","pb","Form","Primary","ImportButton","Menu","FileImport","Layout","Seo","pl","AddReferenceForm","Collection","ReferencesTable","Metadata"],"sourceRoot":""}