{"version":3,"file":"component---src-pages-index-tsx-9674e6076f5e1aab1778.js","mappings":"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","sources":["webpack://citation-generator/./node_modules/@mui/system/esm/Stack/createStack.js","webpack://citation-generator/./node_modules/@mui/material/Stack/Stack.js","webpack://citation-generator/./node_modules/@mui/material/Card/cardClasses.js","webpack://citation-generator/./node_modules/@mui/material/Card/Card.js","webpack://citation-generator/./node_modules/@mui/material/CardMedia/cardMediaClasses.js","webpack://citation-generator/./node_modules/@mui/material/CardMedia/CardMedia.js","webpack://citation-generator/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://citation-generator/./node_modules/@mui/material/CardContent/CardContent.js","webpack://citation-generator/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://citation-generator/./node_modules/@mui/material/CardActions/CardActions.js","webpack://citation-generator/./src/pages/index.tsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      image,\n      src,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'img' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardMedia;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import * as React from \"react\"\n\nimport Layout from \"../components/pages/Layout\"\nimport Seo from \"../components/Seo\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Stack,\n  Typography,\n} from \"@mui/material\"\nimport { PrimaryStart, PrimaryText, Secondary } from \"../components/Typography\"\nimport { ReferencesList, ReferenceManagement } from \"../placeholders\"\nimport styled from \"@emotion/styled\"\nimport { CSL_NOTE_METADATA } from \"../csl_metadata\"\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <Seo\n        title=\"Citation Creator / Generator\"\n        description=\"Create citation online rapidly free for a wide range of CSL styles\"\n      />\n\n      <Grid container height=\"100%\">\n        <Grid bgcolor=\"primary.main\" container p={2} item>\n          <Grid p={6} md={4} xs={12} item>\n            <PrimaryStart>\n              Create citation online rapidly free for a wide range of CSL styles\n            </PrimaryStart>\n            {/* TODO:: replace this with a new message  */}\n            <PrimaryText>\n              <List disablePadding>\n                <Item>\n                  <ListItemText\n                    primary=\"Create Citation Manually\"\n                    secondary=\"Create your citation manually rapidly for journals, books, websites, report\"\n                  />\n                </Item>\n                <Item>\n                  <ListItemText\n                    primary=\"Import Citations\"\n                    secondary=\"Import citations from Title, URL, DOI, PubMed, ISBN, BibTeX\"\n                  />\n                </Item>\n                <Item>\n                  <ListItemText\n                    primary=\"Export Citations\"\n                    secondary=\"Export your citations or references list to a PDF, Word, LaTex, BibTex Document\"\n                  />\n                </Item>\n                <Item>\n                  <ListItemText\n                    primary=\"Store Citations\"\n                    secondary=\"Store citation in your browser to create your own references list\"\n                  />\n                </Item>\n              </List>\n            </PrimaryText>\n          </Grid>\n\n          <Grid\n            container\n            md={8}\n            xs={12}\n            item\n            justifyContent=\"center\"\n            p={4}\n            height={{ md: \"80%\" }}\n          >\n            <Grid item display={{ md: \"flex\" }} md={6} p={2}>\n              <Card\n                sx={{\n                  maxWidth: { md: 350, xs: 150 },\n                  bgcolor: \"primary.50\",\n                  borderRadius: \"50px 50px 0 0\",\n                }}\n              >\n                <CardMedia>\n                  <ReferencesList />\n                </CardMedia>\n                <CardContent>\n                  <Secondary>Bibliographies / References List</Secondary>\n                  <Typography pt={2} pb={8} variant=\"body2\" color=\"text.secondary\">\n                    Create Bibliographies list from your citations or imported\n                    citations, also there an editor to help with editing list before\n                    exporting them\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button variant=\"outlined\" size=\"small\" href=\"/citationsList/\">\n                    List Generator\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            <Grid item display={{ md: \"flex\" }} md={6} p={2}>\n              <Card\n                sx={{\n                  maxWidth: { md: 350, xs: 150 },\n                  bgcolor: \"primary.50\",\n                  borderRadius: \"50px 50px 0 0\",\n                }}\n              >\n                <CardMedia>\n                  <ReferenceManagement />\n                </CardMedia>\n                <CardContent>\n                  <Secondary>Reference Management</Secondary>\n                  <Typography pt={2} variant=\"body2\" color=\"text.secondary\">\n                    Manage your references by organizing them in collections and\n                    tags. The goal of reference management is to make it easier for\n                    researchers to manage the information they use in their work and\n                    to generate accurate and consistent citations and bibliographies.\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button variant=\"outlined\" size=\"small\" href=\"/referencesManager/\">\n                    Manage References\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid bgcolor=\"primary.light\" container xs={12} item>\n          <Grid md={7} p={6} item>\n            <Stack alignItems=\"start\" py={2}>\n              <PrimaryText>Generate Annotated Bibliography for:</PrimaryText>\n              <Stack direction=\"row\">\n                {Object.values(CSL_NOTE_METADATA).map(({ id, label }) => (\n                  <Link key={id} size=\"small\" href={`/${id.toLowerCase()}/`}>\n                    {label}\n                  </Link>\n                ))}\n              </Stack>\n            </Stack>\n          </Grid>\n          <Grid\n            md={5}\n            p={6}\n            item\n            container\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Card\n              sx={{\n                bgcolor: \"primary.50\",\n              }}\n            >\n              <CardContent>\n                <PrimaryText>How To Write Annotated Bibliography:</PrimaryText>\n                <ol>\n                  <li>\n                    <Typography variant=\"body2\">\n                      Write a brief summary of the source. This should include a few\n                      sentences that summarize the main ideas and arguments presented\n                      in the work. Be concise and focus on the most important points.\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"body2\">\n                      Evaluate the source. Consider the credibility of the author and\n                      the quality of the information presented.\n                    </Typography>\n                  </li>\n                  <li>\n                    <Typography variant=\"body2\">\n                      Consider the audience. Think about who will be reading your\n                      annotated bibliography and what their interests and needs might\n                      be.\n                    </Typography>\n                  </li>\n                </ol>\n                <Typography variant=\"caption\">\n                  Remember, an annotated bibliography is more than just a list of\n                  sources. It also includes a brief summary and evaluation of each\n                  source. By following these steps, you can create a well-written\n                  annotated bibliography that provides valuable information to your\n                  readers.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Layout>\n  )\n}\n\nconst Item = styled(ListItem)`\n  padding-right: 0;\n  padding-left: 0;\n`\n\nconst Link = styled(Button)`\n  display: block;\n  font-family: sans-serif;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 14px;\n  color: #37293c;\n  text-align: center;\n  :hover {\n    text-decoration: underline;\n  }\n`\n\nexport default IndexPage\n"],"names":["_excluded","defaultTheme","createTheme","c","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","root","useThemePropsDefault","useThemeProps","joinChildren","children","separator","childrenArray","toArray","filter","Boolean","reduce","output","child","index","push","length","key","style","ownerState","theme","display","flexDirection","values","direction","breakpoints","propValue","spacing","transformer","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","margin","row","column","deepmerge","Stack","options","createStyledComponent","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","classes","composeClasses","generateUtilityClass","as","clsx","createStack","getCardUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","overflow","raised","useUtilityClasses","elevation","undefined","getCardMediaUtilityClass","CardMediaRoot","isMediaComponent","isImageComponent","media","img","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","image","src","indexOf","composedStyle","backgroundImage","slots","role","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","alignItems","marginLeft","Item","ListItem","_templateObject","_taggedTemplateLiteralLoose","Link","Button","_templateObject2","IndexPage","React","Layout","Seo","title","description","Grid","container","height","bgcolor","p","item","md","xs","PrimaryStart","PrimaryText","List","disablePadding","ListItemText","primary","secondary","justifyContent","Card","sx","maxWidth","borderRadius","CardMedia","ReferencesList","CardContent","Secondary","Typography","pt","pb","variant","color","CardActions","size","href","ReferenceManagement","py","CSL_NOTE_METADATA","map","_ref","id","label","toLowerCase"],"sourceRoot":""}