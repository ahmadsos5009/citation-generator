{"version":3,"file":"component---src-components-pages-generator-tsx-d8b4309dfcafe7bed86c.js","mappings":"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","sources":["webpack://citation-generator/./node_modules/@mui/icons-material/Note.js","webpack://citation-generator/./src/components/Ads.tsx","webpack://citation-generator/./src/components/form/QuickActionsSection.tsx","webpack://citation-generator/./src/components/pages/Generator.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m22 10-6-6H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99l16-.01c1.1 0 2-.89 2-1.99v-8zm-7-4.5 5.5 5.5H15V5.5z\"\n}), 'Note');\nexports.default = _default;","import React, { useEffect } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport config from \"../config\"\n\nexport const AdsSidebar: React.FC<{ dataAdSlot: string }> = ({ dataAdSlot }) => {\n  if (config.IS_DEVELOPMENT) {\n    return <></>\n  }\n\n  useEffect(() => {\n    try {\n      if (typeof window === \"object\") {\n        ((window as any).adsbygoogle = (window as any).adsbygoogle || []).push({})\n      }\n    } catch {\n      //\n    }\n  }, [])\n\n  return (\n    <>\n      <Helmet>\n        <script\n          async\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8835129466793937\"\n          crossOrigin=\"anonymous\"\n        />\n      </Helmet>\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: \"block\" }}\n        data-ad-client=\"ca-pub-8835129466793937\"\n        data-ad-slot={dataAdSlot}\n        data-ad-format=\"auto\"\n        data-full-width-responsive=\"true\"\n      />\n    </>\n  )\n}\n\nexport const AdsInContent: React.FC<{ dataAdSlot: string }> = ({ dataAdSlot }) => {\n  if (config.IS_DEVELOPMENT) {\n    return <></>\n  }\n\n  useEffect(() => {\n    try {\n      if (typeof window === \"object\") {\n        ((window as any).adsbygoogle = (window as any).adsbygoogle || []).push({})\n      }\n    } catch {\n      //\n    }\n  }, [])\n\n  return (\n    <>\n      <Helmet>\n        <script\n          async\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8835129466793937\"\n          crossOrigin=\"anonymous\"\n        />\n      </Helmet>\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: \"block\", textAlign: \"center\" }}\n        data-ad-layout=\"in-article\"\n        data-ad-format=\"fluid\"\n        data-ad-client=\"ca-pub-8835129466793937\"\n        data-ad-slot={dataAdSlot}\n      />\n    </>\n  )\n}\n","import React, { useCallback, useContext, useState } from \"react\"\nimport {\n  Button,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  Snackbar,\n  Stack,\n  Typography,\n} from \"@mui/material\"\nimport { GeneratorContext } from \"../../provider/GeneratorProvider\"\nimport { navigate } from \"gatsby\"\nimport { isEmptyCitation } from \"../utilities/object\"\nimport { CitationJSDocumentType } from \"../../types\"\nimport { AdsSidebar } from \"../Ads\"\nimport { CSL_NOTE_METADATA } from \"../../csl_metadata\"\n\nimport NoteIcon from \"@mui/icons-material/Note\"\n\nconst QuickActionsSection: React.FC<{ pageTitle: string }> = ({ pageTitle }) => {\n  const { citation, style, documentType } = useContext(GeneratorContext)\n\n  const [isEmpty, setIsEmpty] = useState(false)\n\n  const onGenerateReferencesClick = useCallback(() => {\n    if (isEmptyCitation(citation, CitationJSDocumentType[documentType])) {\n      setIsEmpty(true)\n      return\n    }\n\n    return navigate(\"/citationsList\", {\n      state: {\n        citations: [citation],\n        style,\n        citationDocument: documentType,\n      },\n    })\n  }, [citation, style, documentType])\n\n  return (\n    <>\n      <Grid item container md={4}>\n        <Stack>\n          <Button onClick={onGenerateReferencesClick} variant=\"text\">\n            {pageTitle} Reference Generator\n          </Button>\n          <List\n            sx={{ py: 2, px: 1 }}\n            subheader={\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                {/*  @ts-ignore */}\n                <NoteIcon fontSize=\"1em\" />\n                <Typography>Annotated Bibliography</Typography>\n              </Stack>\n            }\n          >\n            <Divider />\n            {Object.values(CSL_NOTE_METADATA).map(({ id, label }) => (\n              <ListItem key={id}>\n                <Button\n                  sx={{ flex: 1, justifyContent: \"start\" }}\n                  href={`/${id.toLowerCase()}/`}\n                  component=\"a\"\n                  variant=\"text\"\n                >\n                  {label}\n                </Button>\n              </ListItem>\n            ))}\n          </List>\n        </Stack>\n      </Grid>\n\n      <Grid item md={8}>\n        <AdsSidebar dataAdSlot=\"1729214133\" />\n      </Grid>\n\n      <Snackbar\n        open={isEmpty}\n        autoHideDuration={6000}\n        onClose={() => setIsEmpty(false)}\n        message=\"Empty Citation! please fill in fields or import citations from an external source\"\n      />\n    </>\n  )\n}\n\nexport default QuickActionsSection\n","import * as React from \"react\"\nimport { useMemo } from \"react\"\n\nimport Layout from \"./Layout\"\nimport Seo from \"../Seo\"\n\nimport { CitationStyle } from \"../../types\"\n\nimport { Container, Grid, Paper, Stack, Typography } from \"@mui/material\"\nimport { PrimaryStart } from \"../Typography\"\n\nimport { GeneratorProvider } from \"../../provider/GeneratorProvider\"\nimport CitationForm from \"../CitationForm\"\nimport QuickActionsSection from \"../form/QuickActionsSection\"\n\ninterface PageProps {\n  pageContext: {\n    id: string\n    title: string\n    metaTitle: string\n    style: CitationStyle\n    xml: string\n    note?: boolean\n  }\n}\n\nconst Generator: React.FC<PageProps> = ({ pageContext }) => {\n  const { title, metaTitle, style, xml, note } = pageContext\n\n  const pageTitle = useMemo(() => {\n    if (style.includes(\"_\")) {\n      const [_style, edition] = style.split(\"_\")\n      return `${_style.toUpperCase()} (${edition} ed.)`\n    } else return style.toUpperCase()\n  }, [style])\n\n  return (\n    <Layout>\n      <Seo\n        title={metaTitle}\n        description={`${pageTitle} citation & in text citation generator, and bibliography/reference list generator.`}\n      />\n      <GeneratorProvider xml={xml} style={style} note={note}>\n        <Container\n          disableGutters\n          maxWidth={false}\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            bgcolor: \"primary.main\",\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            py={2}\n            item\n            xs={10}\n          >\n            <Paper\n              elevation={8}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                width: { xs: \"98%\", md: \"100%\" },\n              }}\n            >\n              <Grid display={{ xs: \"none\", md: \"unset\" }} item md={2}>\n                {/* TODO:: Add External and Internal links */}\n              </Grid>\n\n              <Grid item xs={12} md={8}>\n                <Stack\n                  px={{ xs: 1, md: 0 }}\n                  rowGap={2}\n                  textAlign={{ xs: \"center\", md: \"start\" }}\n                >\n                  <Stack py={2}>\n                    <PrimaryStart>{`${pageTitle} Citation Generator ${\n                      note ? \"+ Annotated Bibliography\" : \"\"\n                    }`}</PrimaryStart>\n                    <Typography\n                      align=\"left\"\n                      variant=\"caption\"\n                    >{`${title} Citation generator`}</Typography>\n                  </Stack>\n                </Stack>\n\n                <CitationForm />\n              </Grid>\n\n              <Grid\n                display={{ xs: \"none\", md: \"flex\" }}\n                md={2}\n                item\n                p={2}\n                container\n                direction=\"column\"\n              >\n                <QuickActionsSection pageTitle={pageTitle} />\n              </Grid>\n            </Paper>\n          </Grid>\n        </Container>\n      </GeneratorProvider>\n    </Layout>\n  )\n}\n\nexport default Generator\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","AdsSidebar","_ref","dataAdSlot","config","React","useEffect","window","adsbygoogle","push","Helmet","async","src","crossOrigin","className","style","display","AdsInContent","_ref2","textAlign","pageTitle","citation","documentType","useContext","GeneratorContext","isEmpty","setIsEmpty","useState","onGenerateReferencesClick","useCallback","isEmptyCitation","CitationJSDocumentType","navigate","state","citations","citationDocument","Grid","item","container","md","Stack","Button","onClick","variant","List","sx","py","px","subheader","direction","alignItems","spacing","NoteIcon","fontSize","Typography","Divider","Object","values","CSL_NOTE_METADATA","map","id","label","ListItem","key","flex","justifyContent","href","toLowerCase","component","Snackbar","open","autoHideDuration","onClose","message","pageContext","title","metaTitle","xml","note","useMemo","includes","_style","edition","split","toUpperCase","Layout","Seo","description","GeneratorProvider","Container","disableGutters","maxWidth","bgcolor","xs","Paper","elevation","width","rowGap","PrimaryStart","align","CitationForm","p","QuickActionsSection"],"sourceRoot":""}